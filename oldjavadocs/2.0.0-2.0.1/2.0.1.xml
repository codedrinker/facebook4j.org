<?xml version="1.0" encoding="iso-8859-1" standalone="no"?>
<!-- Generated by the JDiff Javadoc doclet -->
<!-- (http://www.jdiff.org) -->
<!-- on Wed Oct 16 00:10:59 JST 2013 -->

<api
  xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
  xsi:noNamespaceSchemaLocation='api.xsd'
  name="2.0.1"
  jdversion="1.1.1">

<!--  Command line arguments =  -doclet jdiff.JDiff -docletpath /Users/ryu/Projects/facebook4j/jdiff/jdiff-1.1.1/jdiff.jar:/Users/ryu/Projects/facebook4j/jdiff/jdiff-1.1.1/xerces.jar -d /Users/ryu/Dropbox/Settings/Facebook4J/jdiff/2.0.0-2.0.1 -classpath /usr/share/ant/lib/ant-launcher.jar:/usr/share/ant/lib/ant-antlr.jar:/usr/share/ant/lib/ant-jmf.jar:/usr/share/ant/lib/ant-junit.jar:/usr/share/ant/lib/ant-junit4.jar:/usr/share/ant/lib/ant-swing.jar:/usr/share/ant/lib/ant-testutil.jar:/usr/share/ant/lib/ant.jar -sourcepath /Users/ryu/Projects/facebook4j/jdiff/new -apiname 2.0.1 -baseURI http://www.w3.org -apidir /Users/ryu/Dropbox/Settings/Facebook4J/jdiff/2.0.0-2.0.1 -source 1.5 -->
<package name="facebook4j">
  <!-- start interface facebook4j.Account -->
  <interface name="Account"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.FacebookResponse"/>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAccessToken" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCategory" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPerms" return="java.util.List&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Account -->
  <!-- start interface facebook4j.Achievement -->
  <interface name="Achievement"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.FacebookResponse"/>
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getFrom" return="facebook4j.IdNameEntity"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getStartTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getEndTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPublishTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getApplication" return="facebook4j.Application"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getImportance" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAchievement" return="facebook4j.Achievement.AchievedObject"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLikes" return="facebook4j.PagableList&lt;facebook4j.Like&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getComments" return="facebook4j.PagableList&lt;facebook4j.Comment&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Achievement -->
  <!-- start interface facebook4j.Achievement.AchievedObject -->
  <interface name="Achievement.AchievedObject"    abstract="true"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getUrl" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getType" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getTitle" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
  </interface>
  <!-- end interface facebook4j.Achievement.AchievedObject -->
  <!-- start interface facebook4j.Activity -->
  <interface name="Activity"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.Category"/>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Activity -->
  <!-- start interface facebook4j.Admin -->
  <interface name="Admin"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.FacebookResponse"/>
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getRole" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPerms" return="java.util.List&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com
 @since Facebook4J 2.0.0]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Admin -->
  <!-- start interface facebook4j.Album -->
  <interface name="Album"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.FacebookResponse"/>
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getFrom" return="facebook4j.Category"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLocation" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLink" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCoverPhoto" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPrivacy" return="facebook4j.PrivacyType"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCount" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getType" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCreatedTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getUpdatedTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="canUpload" return="java.lang.Boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPlace" return="facebook4j.Place"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLikes" return="facebook4j.PagableList&lt;facebook4j.Like&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getComments" return="facebook4j.PagableList&lt;facebook4j.Comment&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Album -->
  <!-- start class facebook4j.AlbumUpdate -->
  <class name="AlbumUpdate" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <implements name="java.io.Serializable"/>
    <constructor name="AlbumUpdate" type="java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="AlbumUpdate" type="java.lang.String, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="AlbumUpdate" type="java.lang.String, facebook4j.PrivacyParameter"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="AlbumUpdate" type="java.lang.String, java.lang.String, facebook4j.PrivacyParameter"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getMessage" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setMessage"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="message" type="java.lang.String"/>
    </method>
    <method name="message" return="facebook4j.AlbumUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="message" type="java.lang.String"/>
    </method>
    <method name="getPrivacy" return="facebook4j.PrivacyParameter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPrivacy"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="privacy" type="facebook4j.PrivacyParameter"/>
    </method>
    <method name="privacy" return="facebook4j.AlbumUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="privacy" type="facebook4j.PrivacyParameter"/>
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="obj" type="java.lang.Object"/>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </class>
  <!-- end class facebook4j.AlbumUpdate -->
  <!-- start interface facebook4j.Application -->
  <interface name="Application"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCategory" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCompany" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getIconUrl" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getSubcategory" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLink" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLogoUrl" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDailyActiveUsers" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getWeeklyActiveUsers" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getMonthlyActiveUsers" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getMigrations" return="java.util.Map&lt;java.lang.String, java.lang.Boolean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getNamespace" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getRestrictions" return="java.util.Map&lt;java.lang.String, java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAppDomains" return="java.util.List&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAuthDialogDataHelpUrl" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAuthDialogDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAuthDialogHeadline" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAuthDialogPermsExplanation" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAuthReferralUserPerms" return="java.util.List&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAuthReferralFriendPerms" return="java.util.List&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAuthReferralDefaultActivityPrivacy" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="authReferralEnabled" return="java.lang.Boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAuthReferralExtendedPerms" return="java.util.List&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAuthReferralResponseType" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="canvasFluidHeight" return="java.lang.Boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="canvasFluidWidth" return="java.lang.Boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCanvasUrl" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getContactEmail" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCreatedTime" return="java.lang.Long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCreatorUid" return="java.lang.Long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDeauthCallbackUrl" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getIphoneAppStoreId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getHostingUrl" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getMobileWebUrl" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPageTabDefaultName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPageTabUrl" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPrivacyPolicyUrl" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getSecureCanvasUrl" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getSecurePageTabUrl" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getServerIpWhitelist" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="socialDiscovery" return="java.lang.Boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getTermsOfServiceUrl" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getUserSupportEmail" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getUserSupportUrl" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getWebsiteUrl" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCanvasName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Application -->
  <!-- start class facebook4j.BackdatedTimeGranularity -->
  <class name="BackdatedTimeGranularity" extends="java.lang.Enum&lt;facebook4j.BackdatedTimeGranularity&gt;"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="facebook4j.BackdatedTimeGranularity[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="facebook4j.BackdatedTimeGranularity"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com
 @since Facebook4J 2.0.0]]>
    </doc>
  </class>
  <!-- end class facebook4j.BackdatedTimeGranularity -->
  <!-- start class facebook4j.BackdatingPostUpdate -->
  <class name="BackdatingPostUpdate" extends="facebook4j.PostUpdate"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="BackdatingPostUpdate" type="java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="BackdatingPostUpdate" type="java.net.URL"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getBackdatedTime" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setBackdatedTime"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="backdatedTime" type="java.lang.Integer"/>
    </method>
    <method name="setBackdatedTime"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="backdatedTime" type="java.util.Date"/>
    </method>
    <method name="backdatedTime" return="facebook4j.BackdatingPostUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="backdatedTime" type="java.lang.Integer"/>
    </method>
    <method name="backdatedTime" return="facebook4j.BackdatingPostUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="backdatedTime" type="java.util.Date"/>
    </method>
    <method name="getBackdatedTimeGranularity" return="facebook4j.BackdatedTimeGranularity"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setBackdatedTimeGranularity"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="backdatedTimeGranularity" type="facebook4j.BackdatedTimeGranularity"/>
    </method>
    <method name="backdatedTimeGranularity" return="facebook4j.BackdatingPostUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="backdatedTimeGranularity" type="facebook4j.BackdatedTimeGranularity"/>
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="o" type="java.lang.Object"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com
 @since Facebook4J 2.0.0]]>
    </doc>
  </class>
  <!-- end class facebook4j.BackdatingPostUpdate -->
  <!-- start interface facebook4j.Book -->
  <interface name="Book"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.Category"/>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Book -->
  <!-- start interface facebook4j.Category -->
  <interface name="Category"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.FacebookResponse"/>
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCategory" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCreatedTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Category -->
  <!-- start interface facebook4j.Checkin -->
  <interface name="Checkin"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.FacebookResponse"/>
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getFrom" return="facebook4j.IdNameEntity"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getTags" return="facebook4j.PagableList&lt;facebook4j.IdNameEntity&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPlace" return="facebook4j.Place"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getApplication" return="facebook4j.Application"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCreatedTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLikes" return="facebook4j.PagableList&lt;facebook4j.Like&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getMessage" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getComments" return="facebook4j.PagableList&lt;facebook4j.Comment&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getType" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCoordinates" return="facebook4j.GeoLocation"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Checkin -->
  <!-- start class facebook4j.CheckinUpdate -->
  <class name="CheckinUpdate" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <implements name="java.io.Serializable"/>
    <constructor name="CheckinUpdate" type="java.lang.String, facebook4j.GeoLocation"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="CheckinUpdate" type="java.lang.String, facebook4j.GeoLocation, java.lang.String, java.lang.String, java.net.URL, java.net.URL"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getTags" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setTags"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="tags" type="java.lang.String"/>
    </method>
    <method name="tags" return="facebook4j.CheckinUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="tags" type="java.lang.String"/>
    </method>
    <method name="getMessage" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setMessage"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="message" type="java.lang.String"/>
    </method>
    <method name="message" return="facebook4j.CheckinUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="message" type="java.lang.String"/>
    </method>
    <method name="getLink" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setLink"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="link" type="java.net.URL"/>
    </method>
    <method name="link" return="facebook4j.CheckinUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="link" type="java.net.URL"/>
    </method>
    <method name="getPicture" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPicture"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="picture" type="java.net.URL"/>
    </method>
    <method name="picture" return="facebook4j.CheckinUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="picture" type="java.net.URL"/>
    </method>
    <method name="getPlace" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCoordinates" return="facebook4j.GeoLocation"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="obj" type="java.lang.Object"/>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
  </class>
  <!-- end class facebook4j.CheckinUpdate -->
  <!-- start interface facebook4j.Comment -->
  <interface name="Comment"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.FacebookResponse"/>
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getFrom" return="facebook4j.Category"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getMessage" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="canRemove" return="java.lang.Boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCreatedTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLikeCount" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="isUserLikes" return="java.lang.Boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Comment -->
  <!-- start interface facebook4j.Cover -->
  <interface name="Cover"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getSource" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getOffsetY" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Cover -->
  <!-- start interface facebook4j.Domain -->
  <interface name="Domain"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.IdName"/>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Domain -->
  <!-- start interface facebook4j.Event -->
  <interface name="Event"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.FacebookResponse"/>
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getOwner" return="facebook4j.Category"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="isDateOnly" return="java.lang.Boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getStartTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getEndTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLocation" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getVenue" return="facebook4j.Venue"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPrivacy" return="facebook4j.EventPrivacyType"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getUpdatedTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getRsvpStatus" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getTicketURI" return="java.net.URI"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getTimezone" return="java.util.TimeZone"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Event -->
  <!-- start class facebook4j.EventPrivacyType -->
  <class name="EventPrivacyType" extends="java.lang.Enum&lt;facebook4j.EventPrivacyType&gt;"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="facebook4j.EventPrivacyType[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="facebook4j.EventPrivacyType"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getInstance" return="facebook4j.EventPrivacyType"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventPrivacyTypeString" type="java.lang.String"/>
    </method>
    <doc>
    <![CDATA[An enum represents the visibility of a event
 @author Ryuji Yamashita - roundrop at gmail.com
 @see <a href="https://developers.facebook.com/docs/reference/api/event/">Event - Facebook Developers</a>]]>
    </doc>
  </class>
  <!-- end class facebook4j.EventPrivacyType -->
  <!-- start class facebook4j.EventUpdate -->
  <class name="EventUpdate" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.io.Serializable"/>
    <constructor name="EventUpdate"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="EventUpdate" type="java.lang.String, java.util.Calendar"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setName"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="name" return="facebook4j.EventUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getStartTime" return="java.util.Calendar"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setStartTime"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="startTime" type="java.util.Calendar"/>
    </method>
    <method name="startTime" return="facebook4j.EventUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="startTime" type="java.util.Calendar"/>
    </method>
    <method name="getEndTime" return="java.util.Calendar"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setEndTime"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="endTime" type="java.util.Calendar"/>
    </method>
    <method name="endTime" return="facebook4j.EventUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="endTime" type="java.util.Calendar"/>
    </method>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setDescription"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="description" type="java.lang.String"/>
    </method>
    <method name="description" return="facebook4j.EventUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="description" type="java.lang.String"/>
    </method>
    <method name="getLocation" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setLocation"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="location" type="java.lang.String"/>
    </method>
    <method name="location" return="facebook4j.EventUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="location" type="java.lang.String"/>
    </method>
    <method name="getLocationId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setLocationId"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="locationId" type="java.lang.String"/>
    </method>
    <method name="locationId" return="facebook4j.EventUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="locationId" type="java.lang.String"/>
    </method>
    <method name="getPrivacyType" return="facebook4j.EventPrivacyType"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPrivacyType"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="privacyType" type="facebook4j.EventPrivacyType"/>
    </method>
    <method name="privacyType" return="facebook4j.EventUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="privacyType" type="facebook4j.EventPrivacyType"/>
    </method>
    <method name="getTicketURI" return="java.net.URI"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setTicketURI"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ticketURI" type="java.net.URI"/>
    </method>
    <method name="setTicketURI"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ticketURI" type="java.lang.String"/>
      <exception name="URISyntaxException" type="java.net.URISyntaxException"/>
    </method>
    <method name="ticketURI" return="facebook4j.EventUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ticketURI" type="java.net.URI"/>
    </method>
    <method name="ticketURI" return="facebook4j.EventUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ticketURI" type="java.lang.String"/>
      <exception name="URISyntaxException" type="java.net.URISyntaxException"/>
    </method>
    <method name="getNoFeedStory" return="java.lang.Boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setNoFeedStory"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="noFeedStory" type="java.lang.Boolean"/>
    </method>
    <method name="noFeedStory" return="facebook4j.EventUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="noFeedStory" type="java.lang.Boolean"/>
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="o" type="java.lang.Object"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </class>
  <!-- end class facebook4j.EventUpdate -->
  <!-- start interface facebook4j.Facebook -->
  <interface name="Facebook"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.io.Serializable"/>
    <implements name="facebook4j.auth.OAuthSupport"/>
    <implements name="facebook4j.FacebookBase"/>
    <implements name="facebook4j.api.UserMethods"/>
    <implements name="facebook4j.api.AccountMethods"/>
    <implements name="facebook4j.api.ActivityMethods"/>
    <implements name="facebook4j.api.AlbumMethods"/>
    <implements name="facebook4j.api.CheckinMethods"/>
    <implements name="facebook4j.api.CommentMethods"/>
    <implements name="facebook4j.api.DomainMethods"/>
    <implements name="facebook4j.api.EventMethods"/>
    <implements name="facebook4j.api.FamilyMethods"/>
    <implements name="facebook4j.api.FavoriteMethods"/>
    <implements name="facebook4j.api.FriendMethods"/>
    <implements name="facebook4j.api.GameMethods"/>
    <implements name="facebook4j.api.GroupMethods"/>
    <implements name="facebook4j.api.LikeMethods"/>
    <implements name="facebook4j.api.LinkMethods"/>
    <implements name="facebook4j.api.LocationMethods"/>
    <implements name="facebook4j.api.MessageMethods"/>
    <implements name="facebook4j.api.NoteMethods"/>
    <implements name="facebook4j.api.NotificationMethods"/>
    <implements name="facebook4j.api.PageMethods"/>
    <implements name="facebook4j.api.PermissionMethods"/>
    <implements name="facebook4j.api.PhotoMethods"/>
    <implements name="facebook4j.api.PokeMethods"/>
    <implements name="facebook4j.api.PostMethods"/>
    <implements name="facebook4j.api.QuestionMethods"/>
    <implements name="facebook4j.api.SubscribeMethods"/>
    <implements name="facebook4j.api.VideoMethods"/>
    <implements name="facebook4j.api.InsightMethods"/>
    <implements name="facebook4j.api.SearchMethods"/>
    <implements name="facebook4j.api.TestUserMethods"/>
    <implements name="facebook4j.api.FQLMethods"/>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Facebook -->
  <!-- start class facebook4j.FacebookAPIMonitor -->
  <class name="FacebookAPIMonitor" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getInstance" return="facebook4j.FacebookAPIMonitor"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getStatistics" return="facebook4j.management.APIStatisticsMBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[Singleton instance of all Twitter API monitoring. Handles URL parsing and "wire off" logic.
 We could avoid using a singleton here if Twitter objects were instantiated
 from a factory.

 @author Nick Dellamaggiore (nick.dellamaggiore <at> gmail.com)
 @since Twitter4J 2.2.1

 @author Ryuji Yamashita - roundrop at gmail.com
 <ul>
   <li>Changed for Facebook API</li>
 </ul>]]>
    </doc>
  </class>
  <!-- end class facebook4j.FacebookAPIMonitor -->
  <!-- start interface facebook4j.FacebookBase -->
  <interface name="FacebookBase"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <exception name="IllegalStateException" type="java.lang.IllegalStateException"/>
      <doc>
      <![CDATA[Returns the ID of authenticating user/page.<br>
 This method may internally call '/me' on the first invocation if<br>
 - this instance is authenticated by OAuth.<br>

 @return the ID of authenticating user/page
 @throws FacebookException     when '/me' threw an exception.
 @throws IllegalStateException if no credentials are supplied. i.e.) this is an anonymous Facebook instance]]>
      </doc>
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <exception name="IllegalStateException" type="java.lang.IllegalStateException"/>
      <doc>
      <![CDATA[Returns authenticating user's/page's name.<br>
 This method may internally call '/me' on the first invocation if<br>
 - this instance is authenticated by OAuth.<br>

 @return the authenticating user's/page's name
 @throws FacebookException     when '/me' threw an exception.
 @throws IllegalStateException if no credentials are supplied. i.e.) this is an anonymous Facebook instance]]>
      </doc>
    </method>
    <method name="getAuthorization" return="facebook4j.auth.Authorization"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns the authorization scheme for this instance.<br>
 The returned type will be either of BasicAuthorization, OAuthAuthorization, or NullAuthorization

 @return the authorization scheme for this instance]]>
      </doc>
    </method>
    <method name="getConfiguration" return="facebook4j.conf.Configuration"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns the configuration associated with this instance

 @return configuration associated with this instance]]>
      </doc>
    </method>
    <method name="fetchNext" return="facebook4j.ResponseList&lt;T&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="paging" type="facebook4j.Paging&lt;T&gt;"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Fetches the data of the next page.
 
 @param paging paging information of Graph API result
 @return the data of the next page
 @throws FacebookException when Facebook service or network is unavailable]]>
      </doc>
    </method>
    <method name="fetchPrevious" return="facebook4j.ResponseList&lt;T&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="paging" type="facebook4j.Paging&lt;T&gt;"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Fetches the data of the previous page.
 
 @param paging paging information of Graph API result
 @return the data of the previous page
 @throws FacebookException when Facebook service or network is unavailable]]>
      </doc>
    </method>
    <method name="shutdown"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Shuts down this instance and releases allocated resources.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.FacebookBase -->
  <!-- start class facebook4j.FacebookException -->
  <class name="FacebookException" extends="java.lang.Exception"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="FacebookException" type="java.lang.String, java.lang.Throwable"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="FacebookException" type="java.lang.String, facebook4j.internal.http.HttpResponse"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="FacebookException" type="java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="FacebookException" type="java.lang.Throwable"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="FacebookException" type="java.lang.String, java.lang.Throwable, int"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getErrorType" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getErrorMessage" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getErrorCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getStatusCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getResponseHeader" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="isCausedByNetworkIssue" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Tests if the exception is caused by network issue

 @return if the exception is caused by network issue]]>
      </doc>
    </method>
    <method name="resourceNotFound" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Tests if the exception is caused by non-existing resource

 @return if the exception is caused by non-existing resource]]>
      </doc>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="obj" type="java.lang.Object"/>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[An exception class that will be thrown when Facebook Graph API calls are failed.<br>
 In case the Facebook server returned HTTP error code, you can get the HTTP status code using getStatusCode() method.

 @author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </class>
  <!-- end class facebook4j.FacebookException -->
  <!-- start class facebook4j.FacebookFactory -->
  <class name="FacebookFactory" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <implements name="java.io.Serializable"/>
    <constructor name="FacebookFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Creates a FacebookFactory with the root configuration.]]>
      </doc>
    </constructor>
    <constructor name="FacebookFactory" type="facebook4j.conf.Configuration"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Creates a FacebookFactory with the given configuration.

 @param conf the configuration to use
 @since Twitter4J 2.1.1]]>
      </doc>
    </constructor>
    <constructor name="FacebookFactory" type="java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Creates a FacebookFactory with a specified config tree

 @param configTreePath the path]]>
      </doc>
    </constructor>
    <method name="getInstance" return="facebook4j.Facebook"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns a instance associated with the configuration bound to this factory.

 @return default singleton instance]]>
      </doc>
    </method>
    <method name="getInstance" return="facebook4j.Facebook"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="accessToken" type="facebook4j.auth.AccessToken"/>
      <doc>
      <![CDATA[Returns a OAuth Authenticated instance.<br>
 app Id and app Secret must be provided by facebook4j.properties, or system properties.<br>
 Unlike {@link Facebook#setOAuthAccessToken(facebook4j.auth.AccessToken)}, this factory method potentially returns a cached instance.

 @param accessToken access token
 @return an instance
 @since Twitter4J 2.1.9]]>
      </doc>
    </method>
    <method name="getInstance" return="facebook4j.Facebook"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="auth" type="facebook4j.auth.Authorization"/>
    </method>
    <method name="getSingleton" return="facebook4j.Facebook"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns default singleton Facebook instance.

 @return default singleton Facebook instance
 @since Twitter4J 2.2.4]]>
      </doc>
    </method>
    <doc>
    <![CDATA[A factory class for Facebook.
 <br>An instance of this class is completely thread safe and can be re-used and used concurrently.

 @author Yusuke Yamamoto - yusuke at mac.com
 @since Twitter4J 2.1.0
 @author Ryuji Yamashita - roundrop at gmail.com
 <ul>
 <li>Changed for Facebook4J</li>
 </ul>]]>
    </doc>
  </class>
  <!-- end class facebook4j.FacebookFactory -->
  <!-- start interface facebook4j.FacebookResponse -->
  <interface name="FacebookResponse"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getMetadata" return="facebook4j.FacebookResponse.Metadata"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns the introspection of the object if available.
 @return introspection of the object]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Super interface of Facebook Response data interfaces
 @author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.FacebookResponse -->
  <!-- start interface facebook4j.FacebookResponse.Metadata -->
  <interface name="FacebookResponse.Metadata"    abstract="true"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getConnections" return="facebook4j.FacebookResponse.Metadata.Connections"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[An interface represents introspection of objects.
 @author Ryuji Yamashita - roundrop at gmail.com
 @see <a href="https://developers.facebook.com/docs/reference/api/#Introspection">Graph API#Introspection - Facebook Developers</a>]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.FacebookResponse.Metadata -->
  <!-- start interface facebook4j.FacebookResponse.Metadata.Connections -->
  <interface name="FacebookResponse.Metadata.Connections"    abstract="true"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getURL" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="connectionName" type="java.lang.String"/>
    </method>
    <method name="getConnectionNames" return="java.util.List&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
  </interface>
  <!-- end interface facebook4j.FacebookResponse.Metadata.Connections -->
  <!-- start interface facebook4j.Family -->
  <interface name="Family"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.User"/>
    <method name="getRelationship" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
  </interface>
  <!-- end interface facebook4j.Family -->
  <!-- start class facebook4j.FeedTargetingParameter -->
  <class name="FeedTargetingParameter" extends="facebook4j.TargetingParameter"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.io.Serializable"/>
    <constructor name="FeedTargetingParameter"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="setGenders"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="genders" type="facebook4j.FeedTargetingParameter.Gender"/>
    </method>
    <method name="setAgeMax"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ageMax" type="java.lang.Integer"/>
    </method>
    <method name="setAgeMin"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ageMin" type="java.lang.Integer"/>
    </method>
    <method name="setRelationshipStatuses"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="relationshipStatuses" type="java.util.Set&lt;java.lang.Integer&gt;"/>
    </method>
    <method name="setInterestedIn"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="interestedIn" type="java.util.Set&lt;java.lang.Integer&gt;"/>
    </method>
    <method name="setEducationStatuses"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="educationStatuses" type="java.util.Set&lt;java.lang.Integer&gt;"/>
    </method>
    <method name="setWorkNetworks"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="workNetworks" type="java.util.Set&lt;facebook4j.IdNameEntity&gt;"/>
    </method>
    <method name="setCollegeNetworks"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="collegeNetworks" type="java.util.Set&lt;facebook4j.IdNameEntity&gt;"/>
    </method>
    <method name="setCollegeMajors"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="collegeMajors" type="java.util.Set&lt;java.lang.String&gt;"/>
    </method>
    <method name="setCollegeYears"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="collegeYears" type="java.util.Set&lt;java.lang.Integer&gt;"/>
    </method>
    <method name="genders" return="facebook4j.FeedTargetingParameter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="genders" type="facebook4j.FeedTargetingParameter.Gender"/>
    </method>
    <method name="ageMax" return="facebook4j.FeedTargetingParameter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ageMax" type="java.lang.Integer"/>
    </method>
    <method name="ageMin" return="facebook4j.FeedTargetingParameter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ageMin" type="java.lang.Integer"/>
    </method>
    <method name="relationshipStatuses" return="facebook4j.FeedTargetingParameter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="relationshipStatuses" type="java.util.Set&lt;java.lang.Integer&gt;"/>
    </method>
    <method name="interestedIn" return="facebook4j.FeedTargetingParameter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="interestedIn" type="java.util.Set&lt;java.lang.Integer&gt;"/>
    </method>
    <method name="educationStatuses" return="facebook4j.FeedTargetingParameter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="educationStatuses" type="java.util.Set&lt;java.lang.Integer&gt;"/>
    </method>
    <method name="workNetworks" return="facebook4j.FeedTargetingParameter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="workNetworks" type="java.util.Set&lt;facebook4j.IdNameEntity&gt;"/>
    </method>
    <method name="collegeNetworks" return="facebook4j.FeedTargetingParameter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="collegeNetworks" type="java.util.Set&lt;facebook4j.IdNameEntity&gt;"/>
    </method>
    <method name="collegeMajors" return="facebook4j.FeedTargetingParameter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="collegeMajors" type="java.util.Set&lt;java.lang.String&gt;"/>
    </method>
    <method name="collegeYears" return="facebook4j.FeedTargetingParameter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="collegeYears" type="java.util.Set&lt;java.lang.Integer&gt;"/>
    </method>
    <method name="getGenders" return="facebook4j.FeedTargetingParameter.Gender"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAge_max" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAge_min" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getRelationship_statuses" return="java.util.Set&lt;java.lang.Integer&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getInterested_in" return="java.util.Set&lt;java.lang.Integer&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getEducation_statuses" return="java.util.Set&lt;java.lang.Integer&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getWork_networks" return="java.util.Set&lt;facebook4j.IdNameEntity&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCollege_networks" return="java.util.Set&lt;facebook4j.IdNameEntity&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCollege_majors" return="java.util.Set&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCollege_years" return="java.util.Set&lt;java.lang.Integer&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="asJSONObject" return="facebook4j.internal.org.json.JSONObject"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="asJSONString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="o" type="java.lang.Object"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com
 @since Facebook4J 2.0.0]]>
    </doc>
  </class>
  <!-- end class facebook4j.FeedTargetingParameter -->
  <!-- start class facebook4j.FeedTargetingParameter.Gender -->
  <class name="FeedTargetingParameter.Gender" extends="java.lang.Enum&lt;facebook4j.FeedTargetingParameter.Gender&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="facebook4j.FeedTargetingParameter.Gender[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="facebook4j.FeedTargetingParameter.Gender"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getValue" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@since Facebook4J 2.0.0]]>
    </doc>
  </class>
  <!-- end class facebook4j.FeedTargetingParameter.Gender -->
  <!-- start interface facebook4j.Friend -->
  <interface name="Friend"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.User"/>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Friend -->
  <!-- start interface facebook4j.Friendlist -->
  <interface name="Friendlist"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.FacebookResponse"/>
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getListType" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Friendlist -->
  <!-- start interface facebook4j.FriendRequest -->
  <interface name="FriendRequest"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.FacebookResponse"/>
    <method name="getFrom" return="facebook4j.IdNameEntity"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getTo" return="facebook4j.IdNameEntity"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCreatedTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getMessage" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="unread" return="java.lang.Boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
  </interface>
  <!-- end interface facebook4j.FriendRequest -->
  <!-- start interface facebook4j.Game -->
  <interface name="Game"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.Category"/>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Game -->
  <!-- start class facebook4j.GeoLocation -->
  <class name="GeoLocation" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.io.Serializable"/>
    <constructor name="GeoLocation" type="double, double"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Creates a GeoLocation instance

 @param latitude  the latitude
 @param longitude the longitude]]>
      </doc>
    </constructor>
    <method name="getLatitude" return="double"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[returns the latitude of the geo location

 @return the latitude]]>
      </doc>
    </method>
    <method name="getLongitude" return="double"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[returns the longitude of the geo location

 @return the longitude]]>
      </doc>
    </method>
    <method name="asParameterString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="asJSONObject" return="facebook4j.internal.org.json.JSONObject"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="asJSONString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="o" type="java.lang.Object"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <field name="latitude" type="double"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="longitude" type="double"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <doc>
    <![CDATA[A data class representing geo location.

 @author Yusuke Yamamoto - yusuke at mac.com
 @author Ryuji Yamashita - roundrop at gmail.com
 <ul>
 <li>Added {@link GeoLocation#asParameterString() asParameterString()} method</li>
 <li>Added {@link GeoLocation#asJSONObject() asJSONObject()} method</li>
 <li>Added {@link GeoLocation#asJSONString() asJSONString()} method</li>
 </ul>]]>
    </doc>
  </class>
  <!-- end class facebook4j.GeoLocation -->
  <!-- start interface facebook4j.Group -->
  <interface name="Group"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.FacebookResponse"/>
    <method name="getVersion" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="isAdministrator" return="java.lang.Boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getBookmarkOrder" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getOwner" return="facebook4j.IdNameEntity"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPrivacy" return="facebook4j.GroupPrivacyType"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getIcon" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getUpdatedTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getEmail" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getVenue" return="facebook4j.Venue"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Group -->
  <!-- start interface facebook4j.GroupDoc -->
  <interface name="GroupDoc"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.FacebookResponse"/>
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getFrom" return="facebook4j.IdNameEntity"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getSubject" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getMessage" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getIcon" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCreatedTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getUpdatedTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getRevision" return="java.lang.Long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="canEdit" return="java.lang.Boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="canDelete" return="java.lang.Boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.GroupDoc -->
  <!-- start interface facebook4j.GroupMember -->
  <interface name="GroupMember"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.User"/>
    <method name="isAdministrator" return="java.lang.Boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.GroupMember -->
  <!-- start class facebook4j.GroupPrivacyType -->
  <class name="GroupPrivacyType" extends="java.lang.Enum&lt;facebook4j.GroupPrivacyType&gt;"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="facebook4j.GroupPrivacyType[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="facebook4j.GroupPrivacyType"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getInstance" return="facebook4j.GroupPrivacyType"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="groupPrivacyTypeString" type="java.lang.String"/>
    </method>
    <doc>
    <![CDATA[An enum represents the privacy setting of a group
 @author Ryuji Yamashita - roundrop at gmail.com
 @see <a href="https://developers.facebook.com/docs/reference/api/group/">Group - Facebook Developers</a>]]>
    </doc>
  </class>
  <!-- end class facebook4j.GroupPrivacyType -->
  <!-- start interface facebook4j.IdName -->
  <interface name="IdName"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.FacebookResponse"/>
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.IdName -->
  <!-- start interface facebook4j.IdNameEntity -->
  <interface name="IdNameEntity"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[A data interface representing a simple id name pair.
 
 @author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.IdNameEntity -->
  <!-- start interface facebook4j.InboxResponseList -->
  <interface name="InboxResponseList"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.ResponseList&lt;T&gt;"/>
    <method name="getSummary" return="facebook4j.InboxResponseList.Summary"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.InboxResponseList -->
  <!-- start interface facebook4j.InboxResponseList.Summary -->
  <interface name="InboxResponseList.Summary"    abstract="true"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getUnseenCount" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getUnreadCount" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getUpdatedTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
  </interface>
  <!-- end interface facebook4j.InboxResponseList.Summary -->
  <!-- start interface facebook4j.Insight -->
  <interface name="Insight"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.FacebookResponse"/>
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPeriod" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getValues" return="java.util.List&lt;facebook4j.Insight.Value&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getTitle" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Insight -->
  <!-- start interface facebook4j.Insight.Value -->
  <interface name="Insight.Value"    abstract="true"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getValue" return="facebook4j.Insight.Value.Entry"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getEndTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
  </interface>
  <!-- end interface facebook4j.Insight.Value -->
  <!-- start interface facebook4j.Insight.Value.Entry -->
  <interface name="Insight.Value.Entry"    abstract="true"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="get" return="java.lang.Long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="get" return="java.lang.Long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="java.lang.String"/>
    </method>
    <method name="keys" return="java.util.Iterator&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="size" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@since Facebook4J 2.0.0]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Insight.Value.Entry -->
  <!-- start interface facebook4j.Interest -->
  <interface name="Interest"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.Category"/>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Interest -->
  <!-- start interface facebook4j.Like -->
  <interface name="Like"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.Category"/>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Like -->
  <!-- start interface facebook4j.Link -->
  <interface name="Link"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.FacebookResponse"/>
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getFrom" return="facebook4j.IdNameEntity"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLink" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLikes" return="facebook4j.PagableList&lt;facebook4j.Like&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getComments" return="facebook4j.PagableList&lt;facebook4j.Comment&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getIcon" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPicture" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getMessage" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCreatedTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getType" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPrivacy" return="facebook4j.Privacy"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Link -->
  <!-- start interface facebook4j.Location -->
  <interface name="Location"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.FacebookResponse"/>
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getFrom" return="facebook4j.IdNameEntity"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getTags" return="facebook4j.PagableList&lt;facebook4j.IdNameEntity&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getType" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPlace" return="facebook4j.Place"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getApplication" return="facebook4j.Application"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCreatedTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Location -->
  <!-- start class facebook4j.Media -->
  <class name="Media" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <implements name="java.io.Serializable"/>
    <constructor name="Media" type="java.io.File"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="Media" type="java.lang.String, java.io.InputStream"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getMediaFile" return="java.io.File"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getMediaName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getMediaBody" return="java.io.InputStream"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="asHttpParameter" return="facebook4j.internal.http.HttpParameter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="parameterName" type="java.lang.String"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="obj" type="java.lang.Object"/>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </class>
  <!-- end class facebook4j.Media -->
  <!-- start interface facebook4j.Message -->
  <interface name="Message"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.FacebookResponse"/>
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getFrom" return="facebook4j.IdNameEntity"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getTo" return="java.util.List&lt;facebook4j.IdNameEntity&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getMessage" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCreatedTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getUpdatedTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getComments" return="facebook4j.PagableList&lt;facebook4j.Comment&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getUnread" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getUnseen" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
  </interface>
  <!-- end interface facebook4j.Message -->
  <!-- start interface facebook4j.Milestone -->
  <interface name="Milestone"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.FacebookResponse"/>
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getTitle" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getFrom" return="facebook4j.Category"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getStartTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getEndTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCreatedTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getUpdatedTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com
 @since Facebook4J 2.0.0]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Milestone -->
  <!-- start class facebook4j.MilestoneUpdate -->
  <class name="MilestoneUpdate" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <implements name="java.io.Serializable"/>
    <constructor name="MilestoneUpdate" type="java.lang.String, java.lang.String, java.util.Calendar"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getTitle" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getStartTime" return="java.util.Calendar"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="o" type="java.lang.Object"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com
 @since Facebook4J 2.0.0]]>
    </doc>
  </class>
  <!-- end class facebook4j.MilestoneUpdate -->
  <!-- start interface facebook4j.Movie -->
  <interface name="Movie"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.Category"/>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Movie -->
  <!-- start interface facebook4j.Music -->
  <interface name="Music"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.Category"/>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Music -->
  <!-- start interface facebook4j.Note -->
  <interface name="Note"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.FacebookResponse"/>
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getFrom" return="facebook4j.Category"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getSubject" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getMessage" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getComments" return="facebook4j.PagableList&lt;facebook4j.Comment&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCreatedTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getUpdatedTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getIcon" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Note -->
  <!-- start interface facebook4j.Notification -->
  <interface name="Notification"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.FacebookResponse"/>
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getFrom" return="facebook4j.IdNameEntity"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getTo" return="facebook4j.IdNameEntity"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCreatedTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getUpdatedTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getTitle" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLink" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getApplication" return="facebook4j.Application"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="unread" return="java.lang.Boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getTargetObject" return="facebook4j.Notification.TargetObject"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Notification -->
  <!-- start interface facebook4j.Notification.TargetObject -->
  <interface name="Notification.TargetObject"    abstract="true"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getType" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@since Facebook4J 2.0.0]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Notification.TargetObject -->
  <!-- start interface facebook4j.Offer -->
  <interface name="Offer"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getFrom" return="facebook4j.Category"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getTitle" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCreatedTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getExpirationTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getTerms" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getImageURL" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getClaimLimit" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCouponType" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getRedemptionLink" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getRedemptionCode" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="isPublished" return="java.lang.Boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getScheduledPublishTime" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getReminderTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com
 @since Facebook4J 2.0.0]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Offer -->
  <!-- start class facebook4j.OfferUpdate -->
  <class name="OfferUpdate" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.io.Serializable"/>
    <constructor name="OfferUpdate"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="OfferUpdate" type="java.lang.String, java.util.Calendar, java.net.URL"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="OfferUpdate" type="java.lang.String, java.util.Calendar, facebook4j.Media"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getTitle" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setTitle"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="title" type="java.lang.String"/>
    </method>
    <method name="title" return="facebook4j.OfferUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="title" type="java.lang.String"/>
    </method>
    <method name="getExpirationTime" return="java.util.Calendar"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setExpirationTime"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="expirationTime" type="java.util.Calendar"/>
    </method>
    <method name="expirationTime" return="facebook4j.OfferUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="expirationTime" type="java.util.Calendar"/>
    </method>
    <method name="getTerms" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setTerms"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="terms" type="java.lang.String"/>
    </method>
    <method name="terms" return="facebook4j.OfferUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="terms" type="java.lang.String"/>
    </method>
    <method name="getImageURL" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setImageURL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="imageURL" type="java.net.URL"/>
    </method>
    <method name="imageURL" return="facebook4j.OfferUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="imageURL" type="java.net.URL"/>
    </method>
    <method name="getImage" return="facebook4j.Media"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setImage"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="image" type="facebook4j.Media"/>
    </method>
    <method name="image" return="facebook4j.OfferUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="image" type="facebook4j.Media"/>
    </method>
    <method name="getClaimLimit" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setClaimLimit"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="claimLimit" type="java.lang.Integer"/>
    </method>
    <method name="claimLimit" return="facebook4j.OfferUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="claimLimit" type="java.lang.Integer"/>
    </method>
    <method name="getCouponType" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setCouponType"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="couponType" type="java.lang.String"/>
    </method>
    <method name="couponType" return="facebook4j.OfferUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="couponType" type="java.lang.String"/>
    </method>
    <method name="getQrcode" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setQrcode"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="qrcode" type="java.lang.String"/>
    </method>
    <method name="qrcode" return="facebook4j.OfferUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="qrcode" type="java.lang.String"/>
    </method>
    <method name="getBarcode" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setBarcode"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="barcode" type="java.lang.String"/>
    </method>
    <method name="barcode" return="facebook4j.OfferUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="barcode" type="java.lang.String"/>
    </method>
    <method name="getRedemptionLink" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setRedemptionLink"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="redemptionLink" type="java.net.URL"/>
    </method>
    <method name="redemptionLink" return="facebook4j.OfferUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="redemptionLink" type="java.net.URL"/>
    </method>
    <method name="getRedemptionCode" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setRedemptionCode"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="redemptionCode" type="java.lang.String"/>
    </method>
    <method name="redemptionCode" return="facebook4j.OfferUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="redemptionCode" type="java.lang.String"/>
    </method>
    <method name="getPublished" return="java.lang.Boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPublished"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="published" type="java.lang.Boolean"/>
    </method>
    <method name="isPublished" return="facebook4j.OfferUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="published" type="java.lang.Boolean"/>
    </method>
    <method name="getScheduledPublishTime" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setScheduledPublishTime"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="scheduledPublishTime" type="java.lang.Integer"/>
    </method>
    <method name="scheduledPublishTime" return="facebook4j.OfferUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="scheduledPublishTime" type="java.lang.Integer"/>
    </method>
    <method name="scheduledPublishTime" return="facebook4j.OfferUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="scheduledPublishTime" type="java.util.Date"/>
    </method>
    <method name="getReminderTime" return="java.util.Calendar"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setReminderTime"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reminderTime" type="java.util.Calendar"/>
    </method>
    <method name="reminderTime" return="facebook4j.OfferUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reminderTime" type="java.util.Calendar"/>
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="o" type="java.lang.Object"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com
 @since Facebook4J 2.0.0]]>
    </doc>
  </class>
  <!-- end class facebook4j.OfferUpdate -->
  <!-- start interface facebook4j.PagableList -->
  <interface name="PagableList"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.util.List&lt;T&gt;"/>
    <method name="getCount" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPaging" return="facebook4j.Paging&lt;T&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.PagableList -->
  <!-- start interface facebook4j.Page -->
  <interface name="Page"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLink" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCategory" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="isPublished" return="java.lang.Boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="canPost" return="java.lang.Boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLikes" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLocation" return="facebook4j.Place.Location"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPhone" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCheckins" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPicture" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCover" return="facebook4j.Cover"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getWebsite" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getTalkingAboutCount" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAccessToken" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="isCommunityPage" return="java.lang.Boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getWereHereCount" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCreatedTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com
 @since Facebook4J 2.0.0]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Page -->
  <!-- start class facebook4j.PageCoverUpdate -->
  <class name="PageCoverUpdate" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.io.Serializable"/>
    <constructor name="PageCoverUpdate" type="java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getPhotoId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getOffsetY" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setOffsetY"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="offsetY" type="java.lang.Integer"/>
    </method>
    <method name="offsetY" return="facebook4j.PageCoverUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="offsetY" type="java.lang.Integer"/>
    </method>
    <method name="getNoFeedStory" return="java.lang.Boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setNoFeedStory"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="noFeedStory" type="java.lang.Boolean"/>
    </method>
    <method name="noFeedStory" return="facebook4j.PageCoverUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="noFeedStory" type="java.lang.Boolean"/>
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="o" type="java.lang.Object"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com
 @since Facebook4J 2.0.0]]>
    </doc>
  </class>
  <!-- end class facebook4j.PageCoverUpdate -->
  <!-- start class facebook4j.PagePhotoUpdate -->
  <class name="PagePhotoUpdate" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.io.Serializable"/>
    <constructor name="PagePhotoUpdate" type="facebook4j.Media"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getSource" return="facebook4j.Media"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getMessage" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setMessage"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="message" type="java.lang.String"/>
    </method>
    <method name="message" return="facebook4j.PagePhotoUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="message" type="java.lang.String"/>
    </method>
    <method name="getTargeting" return="facebook4j.TargetingParameter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setTargeting"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="targeting" type="facebook4j.TargetingParameter"/>
    </method>
    <method name="targeting" return="facebook4j.PagePhotoUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="targetingParameter" type="facebook4j.TargetingParameter"/>
    </method>
    <method name="getFeedTargeting" return="facebook4j.FeedTargetingParameter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setFeedTargeting"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="feedTargeting" type="facebook4j.FeedTargetingParameter"/>
    </method>
    <method name="feedTargeting" return="facebook4j.PagePhotoUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="feedTargeting" type="facebook4j.FeedTargetingParameter"/>
    </method>
    <method name="getPublished" return="java.lang.Boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPublished"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="published" type="java.lang.Boolean"/>
    </method>
    <method name="published" return="facebook4j.PagePhotoUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="published" type="boolean"/>
    </method>
    <method name="getScheduledPublishTime" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setScheduledPublishTime"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="scheduledPublishTime" type="java.lang.Integer"/>
    </method>
    <method name="setScheduledPublishTime"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="scheduledPublishTime" type="java.util.Date"/>
    </method>
    <method name="scheduledPublishTime" return="facebook4j.PagePhotoUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="scheduledPublishTime" type="java.lang.Integer"/>
    </method>
    <method name="scheduledPublishTime" return="facebook4j.PagePhotoUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="scheduledPublishTime" type="java.util.Date"/>
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="o" type="java.lang.Object"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com
 @since Facebook4J 2.0.0]]>
    </doc>
  </class>
  <!-- end class facebook4j.PagePhotoUpdate -->
  <!-- start interface facebook4j.PageSetting -->
  <interface name="PageSetting"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getSetting" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getValue" return="java.lang.Boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com
 @since Facebook4J 2.0.0]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.PageSetting -->
  <!-- start class facebook4j.PageSettingUpdate -->
  <class name="PageSettingUpdate" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.io.Serializable"/>
    <constructor name="PageSettingUpdate"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="PageSettingUpdate" type="java.lang.String, boolean"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getSetting" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setSetting"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="setting" type="java.lang.String"/>
    </method>
    <method name="setting" return="facebook4j.PageSettingUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="setting" type="java.lang.String"/>
    </method>
    <method name="isValue" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setValue"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="value" type="boolean"/>
    </method>
    <method name="value" return="facebook4j.PageSettingUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="value" type="boolean"/>
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="o" type="java.lang.Object"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com
 @since Facebook4J 2.0.0]]>
    </doc>
  </class>
  <!-- end class facebook4j.PageSettingUpdate -->
  <!-- start class facebook4j.PageUpdate -->
  <class name="PageUpdate" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.io.Serializable"/>
    <constructor name="PageUpdate"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="PageUpdate" type="java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getAbout" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setAbout"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="about" type="java.lang.String"/>
    </method>
    <method name="about" return="facebook4j.PageUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="about" type="java.lang.String"/>
    </method>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setDescription"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="description" type="java.lang.String"/>
    </method>
    <method name="description" return="facebook4j.PageUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="description" type="java.lang.String"/>
    </method>
    <method name="getGeneralInfo" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setGeneralInfo"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="generalInfo" type="java.lang.String"/>
    </method>
    <method name="generalInfo" return="facebook4j.PageUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="generalInfo" type="java.lang.String"/>
    </method>
    <method name="getWebsite" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setWebsite"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="website" type="java.lang.String"/>
    </method>
    <method name="website" return="facebook4j.PageUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="website" type="java.lang.String"/>
    </method>
    <method name="getPhone" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPhone"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="phone" type="java.lang.String"/>
    </method>
    <method name="phone" return="facebook4j.PageUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="phone" type="java.lang.String"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="obj" type="java.lang.Object"/>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com
 @since Facebook4J 2.0.0]]>
    </doc>
  </class>
  <!-- end class facebook4j.PageUpdate -->
  <!-- start interface facebook4j.Paging -->
  <interface name="Paging"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getJSONObjectType" return="java.lang.Class&lt;?&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCursors" return="facebook4j.Paging.Cursors"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPrevious" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getNext" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Paging -->
  <!-- start interface facebook4j.Paging.Cursors -->
  <interface name="Paging.Cursors"    abstract="true"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getAfter" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getBefore" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@since Facebook4J 2.0.0]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Paging.Cursors -->
  <!-- start interface facebook4j.Permission -->
  <interface name="Permission"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="isGranted" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Permission -->
  <!-- start interface facebook4j.Photo -->
  <interface name="Photo"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.FacebookResponse"/>
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getFrom" return="facebook4j.Category"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getTags" return="facebook4j.PagableList&lt;facebook4j.Tag&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getIcon" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPicture" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getSource" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getHeight" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getWidth" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getImages" return="java.util.List&lt;facebook4j.Photo.Image&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLink" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPlace" return="facebook4j.Place"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCreatedTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getUpdatedTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPosition" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getComments" return="facebook4j.PagableList&lt;facebook4j.Comment&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLikes" return="facebook4j.PagableList&lt;facebook4j.Like&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAlbum" return="facebook4j.Category"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Photo -->
  <!-- start interface facebook4j.Photo.Image -->
  <interface name="Photo.Image"    abstract="true"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getHeight" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getWidth" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getSource" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
  </interface>
  <!-- end interface facebook4j.Photo.Image -->
  <!-- start class facebook4j.PhotoUpdate -->
  <class name="PhotoUpdate" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.io.Serializable"/>
    <constructor name="PhotoUpdate" type="facebook4j.Media"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getSource" return="facebook4j.Media"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getMessage" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setMessage"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="message" type="java.lang.String"/>
    </method>
    <method name="message" return="facebook4j.PhotoUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="message" type="java.lang.String"/>
    </method>
    <method name="getPlace" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPlace"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="place" type="java.lang.String"/>
    </method>
    <method name="place" return="facebook4j.PhotoUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="place" type="java.lang.String"/>
    </method>
    <method name="getNoStory" return="java.lang.Boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setNoStory"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="noStory" type="boolean"/>
    </method>
    <method name="noStory" return="facebook4j.PhotoUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="noStory" type="boolean"/>
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="o" type="java.lang.Object"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com
 @since Facebook4J 2.0.0]]>
    </doc>
  </class>
  <!-- end class facebook4j.PhotoUpdate -->
  <!-- start interface facebook4j.Picture -->
  <interface name="Picture"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getURL" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="isSilhouette" return="java.lang.Boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Picture -->
  <!-- start class facebook4j.PictureSize -->
  <class name="PictureSize" extends="java.lang.Enum&lt;facebook4j.PictureSize&gt;"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="facebook4j.PictureSize[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="facebook4j.PictureSize"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </class>
  <!-- end class facebook4j.PictureSize -->
  <!-- start interface facebook4j.Place -->
  <interface name="Place"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.FacebookResponse"/>
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLocation" return="facebook4j.Place.Location"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Place -->
  <!-- start interface facebook4j.Place.Location -->
  <interface name="Place.Location"    abstract="true"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getStreet" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCity" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getState" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCountry" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getZip" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLatitude" return="java.lang.Double"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLongitude" return="java.lang.Double"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
  </interface>
  <!-- end interface facebook4j.Place.Location -->
  <!-- start interface facebook4j.Poke -->
  <interface name="Poke"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.FacebookResponse"/>
    <method name="getTo" return="facebook4j.IdNameEntity"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getFrom" return="facebook4j.IdNameEntity"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCreatedTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
  </interface>
  <!-- end interface facebook4j.Poke -->
  <!-- start interface facebook4j.Post -->
  <interface name="Post"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.FacebookResponse"/>
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getFrom" return="facebook4j.Category"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getTo" return="java.util.List&lt;facebook4j.IdNameEntity&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getMessage" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getMessageTags" return="java.util.List&lt;facebook4j.Tag&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPicture" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLink" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCaption" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getSource" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getProperties" return="java.util.List&lt;facebook4j.Post.Property&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getIcon" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getActions" return="java.util.List&lt;facebook4j.Post.Action&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPrivacy" return="facebook4j.Privacy"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getType" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getSharesCount" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLikes" return="facebook4j.PagableList&lt;facebook4j.Like&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPlace" return="facebook4j.Place"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getStatusType" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getStory" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getStoryTags" return="java.util.Map&lt;java.lang.String, facebook4j.Tag[]&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getWithTags" return="java.util.List&lt;facebook4j.IdNameEntity&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getComments" return="facebook4j.PagableList&lt;facebook4j.Comment&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getObjectId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getApplication" return="facebook4j.Application"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCreatedTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getUpdatedTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="isPublished" return="java.lang.Boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getScheduledPublishTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getTargeting" return="facebook4j.Targeting"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Post -->
  <!-- start interface facebook4j.Post.Action -->
  <interface name="Post.Action"    abstract="true"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLink" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
  </interface>
  <!-- end interface facebook4j.Post.Action -->
  <!-- start interface facebook4j.Post.Property -->
  <interface name="Post.Property"    abstract="true"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getText" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getHref" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
  </interface>
  <!-- end interface facebook4j.Post.Property -->
  <!-- start class facebook4j.PostUpdate -->
  <class name="PostUpdate" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.io.Serializable"/>
    <constructor name="PostUpdate" type="java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="PostUpdate" type="java.net.URL"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getMessage" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setMessage"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="message" type="java.lang.String"/>
    </method>
    <method name="message" return="facebook4j.PostUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="message" type="java.lang.String"/>
    </method>
    <method name="getLink" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setLink"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="link" type="java.net.URL"/>
    </method>
    <method name="link" return="facebook4j.PostUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="link" type="java.net.URL"/>
    </method>
    <method name="getPicture" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPicture"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="picture" type="java.net.URL"/>
    </method>
    <method name="picture" return="facebook4j.PostUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="picture" type="java.net.URL"/>
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setName"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="name" return="facebook4j.PostUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getCaption" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setCaption"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="caption" type="java.lang.String"/>
    </method>
    <method name="caption" return="facebook4j.PostUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="caption" type="java.lang.String"/>
    </method>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setDescription"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="description" type="java.lang.String"/>
    </method>
    <method name="description" return="facebook4j.PostUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="description" type="java.lang.String"/>
    </method>
    <method name="getActions" return="java.util.List&lt;facebook4j.PostUpdate.PostAction&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setActions"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="actions" type="java.util.List&lt;facebook4j.PostUpdate.PostAction&gt;"/>
    </method>
    <method name="actions" return="facebook4j.PostUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="actions" type="java.util.List&lt;facebook4j.PostUpdate.PostAction&gt;"/>
    </method>
    <method name="getPlace" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPlace"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="place" type="java.lang.String"/>
    </method>
    <method name="place" return="facebook4j.PostUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="place" type="java.lang.String"/>
    </method>
    <method name="getTags" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setTags"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="tags" type="java.lang.String"/>
    </method>
    <method name="tags" return="facebook4j.PostUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="tags" type="java.lang.String"/>
    </method>
    <method name="getPrivacy" return="facebook4j.PrivacyParameter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPrivacy"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="privacy" type="facebook4j.PrivacyParameter"/>
    </method>
    <method name="privacy" return="facebook4j.PostUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="privacy" type="facebook4j.PrivacyParameter"/>
    </method>
    <method name="getObjectAttachment" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setObjectAttachment"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="objectAttachment" type="java.lang.String"/>
    </method>
    <method name="objectAttachment" return="facebook4j.PostUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="objectAttachment" type="java.lang.String"/>
    </method>
    <method name="getTargeting" return="facebook4j.TargetingParameter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setTargeting"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="targeting" type="facebook4j.TargetingParameter"/>
    </method>
    <method name="targeting" return="facebook4j.PostUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="targetingParameter" type="facebook4j.TargetingParameter"/>
    </method>
    <method name="getPublished" return="java.lang.Boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPublished"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="published" type="java.lang.Boolean"/>
    </method>
    <method name="published" return="facebook4j.PostUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="published" type="java.lang.Boolean"/>
    </method>
    <method name="getScheduledPublishTime" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setScheduledPublishTime"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="scheduledPublishTime" type="java.lang.Integer"/>
    </method>
    <method name="setScheduledPublishTime"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="scheduledPublishTime" type="java.util.Date"/>
    </method>
    <method name="scheduledPublishTime" return="facebook4j.PostUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="scheduledPublishTime" type="java.lang.Integer"/>
    </method>
    <method name="scheduledPublishTime" return="facebook4j.PostUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="scheduledPublishTime" type="java.util.Date"/>
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="o" type="java.lang.Object"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </class>
  <!-- end class facebook4j.PostUpdate -->
  <!-- start class facebook4j.PostUpdate.PostAction -->
  <class name="PostUpdate.PostAction" extends="java.lang.Object"
    abstract="false"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.Post.Action"/>
    <implements name="java.io.Serializable"/>
    <constructor name="PostUpdate.PostAction" type="java.lang.String, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLink" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@since Facebook4J 2.0.0]]>
    </doc>
  </class>
  <!-- end class facebook4j.PostUpdate.PostAction -->
  <!-- start interface facebook4j.Privacy -->
  <interface name="Privacy"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getValue" return="facebook4j.PrivacyType"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getFriends" return="facebook4j.PrivacyType"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getNetworks" return="java.util.List&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAllow" return="java.util.List&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDeny" return="java.util.List&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDescription" return="java.util.List&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
  </interface>
  <!-- end interface facebook4j.Privacy -->
  <!-- start class facebook4j.PrivacyBuilder -->
  <class name="PrivacyBuilder" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <constructor name="PrivacyBuilder"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="setValue" return="facebook4j.PrivacyBuilder"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="value" type="facebook4j.PrivacyType"/>
    </method>
    <method name="setFriends" return="facebook4j.PrivacyBuilder"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="friends" type="facebook4j.PrivacyType"/>
    </method>
    <method name="setNetworks" return="facebook4j.PrivacyBuilder"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="networks" type="java.lang.String"/>
    </method>
    <method name="setNetworks" return="facebook4j.PrivacyBuilder"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="networks" type="java.util.List&lt;java.lang.String&gt;"/>
    </method>
    <method name="addNetwork" return="facebook4j.PrivacyBuilder"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="network" type="java.lang.String"/>
    </method>
    <method name="setAllow" return="facebook4j.PrivacyBuilder"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="allow" type="java.lang.String"/>
    </method>
    <method name="setAllow" return="facebook4j.PrivacyBuilder"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="allow" type="java.util.List&lt;java.lang.String&gt;"/>
    </method>
    <method name="addAllow" return="facebook4j.PrivacyBuilder"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="allow" type="java.lang.String"/>
    </method>
    <method name="setDeny" return="facebook4j.PrivacyBuilder"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="deny" type="java.lang.String"/>
    </method>
    <method name="setDeny" return="facebook4j.PrivacyBuilder"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="deny" type="java.util.List&lt;java.lang.String&gt;"/>
    </method>
    <method name="addDeny" return="facebook4j.PrivacyBuilder"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="deny" type="java.lang.String"/>
    </method>
    <method name="build" return="facebook4j.PrivacyParameter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </class>
  <!-- end class facebook4j.PrivacyBuilder -->
  <!-- start class facebook4j.PrivacyParameter -->
  <class name="PrivacyParameter" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.io.Serializable"/>
    <constructor name="PrivacyParameter"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getValue" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setValue"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="value" type="java.lang.String"/>
    </method>
    <method name="getFriends" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setFriends"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="friends" type="java.lang.String"/>
    </method>
    <method name="getNetworks" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setNetworks"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="networks" type="java.lang.String"/>
    </method>
    <method name="getAllow" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setAllow"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="allow" type="java.lang.String"/>
    </method>
    <method name="getDeny" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setDeny"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="deny" type="java.lang.String"/>
    </method>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setDescription"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="description" type="java.lang.String"/>
    </method>
    <method name="asJSONObject" return="facebook4j.internal.org.json.JSONObject"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="asJSONString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="obj" type="java.lang.Object"/>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com
 @since Facebook4J 2.0.0]]>
    </doc>
  </class>
  <!-- end class facebook4j.PrivacyParameter -->
  <!-- start class facebook4j.PrivacyType -->
  <class name="PrivacyType" extends="java.lang.Enum&lt;facebook4j.PrivacyType&gt;"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="facebook4j.PrivacyType[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="facebook4j.PrivacyType"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getInstance" return="facebook4j.PrivacyType"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="privacyTypeString" type="java.lang.String"/>
    </method>
    <doc>
    <![CDATA[An enum represents the privacy settings.
 @author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </class>
  <!-- end class facebook4j.PrivacyType -->
  <!-- start interface facebook4j.Question -->
  <interface name="Question"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.FacebookResponse"/>
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getFrom" return="facebook4j.Category"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getQuestion" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCreatedTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getUpdatedTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getOptions" return="facebook4j.PagableList&lt;facebook4j.Question.Option&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Question -->
  <!-- start interface facebook4j.Question.Option -->
  <interface name="Question.Option"    abstract="true"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getFrom" return="facebook4j.Category"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getVoteCount" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCreatedTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getVotes" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
  </interface>
  <!-- end interface facebook4j.Question.Option -->
  <!-- start class facebook4j.QuestionUpdate -->
  <class name="QuestionUpdate" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.io.Serializable"/>
    <constructor name="QuestionUpdate"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="QuestionUpdate" type="java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getQuestion" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getOptions" return="java.util.List&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setOptions"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="options" type="java.util.List&lt;java.lang.String&gt;"/>
    </method>
    <method name="options" return="facebook4j.QuestionUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="options" type="java.util.List&lt;java.lang.String&gt;"/>
    </method>
    <method name="option" return="facebook4j.QuestionUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="option" type="java.lang.String"/>
    </method>
    <method name="getAllowNewOptions" return="java.lang.Boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setAllowNewOptions"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="allowNewOptions" type="java.lang.Boolean"/>
    </method>
    <method name="allowNewOptions" return="facebook4j.QuestionUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="allowNewOptions" type="boolean"/>
    </method>
    <method name="getPublished" return="java.lang.Boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPublished"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="published" type="java.lang.Boolean"/>
    </method>
    <method name="published" return="facebook4j.QuestionUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="published" type="boolean"/>
    </method>
    <method name="getScheduledPublishTime" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setScheduledPublishTime"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="scheduledPublishTime" type="java.lang.Integer"/>
    </method>
    <method name="setScheduledPublishTime"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="scheduledPublishTime" type="java.util.Date"/>
    </method>
    <method name="scheduledPublishTime" return="facebook4j.QuestionUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="scheduledPublishTime" type="java.lang.Integer"/>
    </method>
    <method name="scheduledPublishTime" return="facebook4j.QuestionUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="scheduledPublishTime" type="java.util.Date"/>
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="o" type="java.lang.Object"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com
 @since Facebook4J 2.0.0]]>
    </doc>
  </class>
  <!-- end class facebook4j.QuestionUpdate -->
  <!-- start interface facebook4j.QuestionVotes -->
  <interface name="QuestionVotes"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.FacebookResponse"/>
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getVotes" return="facebook4j.PagableList&lt;facebook4j.IdNameEntity&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.QuestionVotes -->
  <!-- start class facebook4j.Reading -->
  <class name="Reading" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.io.Serializable"/>
    <constructor name="Reading"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getQuery" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="fields" return="facebook4j.Reading"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="fields" type="java.lang.String[]"/>
    </method>
    <method name="limit" return="facebook4j.Reading"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="limit" type="int"/>
    </method>
    <method name="offset" return="facebook4j.Reading"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="offset" type="int"/>
    </method>
    <method name="until" return="facebook4j.Reading"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="phpDateTimeFormats" type="java.lang.String"/>
    </method>
    <method name="until" return="facebook4j.Reading"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="datetime" type="java.util.Date"/>
    </method>
    <method name="since" return="facebook4j.Reading"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="phpDateTimeFormats" type="java.lang.String"/>
    </method>
    <method name="since" return="facebook4j.Reading"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="datetime" type="java.util.Date"/>
    </method>
    <method name="after" return="facebook4j.Reading"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="cursor" type="java.lang.String"/>
    </method>
    <method name="before" return="facebook4j.Reading"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="cursor" type="java.lang.String"/>
    </method>
    <method name="metadata" return="facebook4j.Reading"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="locale" return="facebook4j.Reading"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="locale" type="java.util.Locale"/>
    </method>
    <method name="withLocation" return="facebook4j.Reading"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="filter" return="facebook4j.Reading"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="filterName" type="java.lang.String"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="obj" type="java.lang.Object"/>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[A builder that can construct a Graph API's reading options (selection, paging, dates, introspection).
 
 @author Ryuji Yamashita - roundrop at gmail.com
 @see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>]]>
    </doc>
  </class>
  <!-- end class facebook4j.Reading -->
  <!-- start interface facebook4j.ResponseList -->
  <interface name="ResponseList"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.PagableList&lt;T&gt;"/>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.ResponseList -->
  <!-- start interface facebook4j.RSVPStatus -->
  <interface name="RSVPStatus"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.FacebookResponse"/>
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getRsvpStatus" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.RSVPStatus -->
  <!-- start interface facebook4j.Score -->
  <interface name="Score"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.FacebookResponse"/>
    <method name="getUser" return="facebook4j.IdNameEntity"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getScore" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getApplication" return="facebook4j.Application"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getType" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Score -->
  <!-- start interface facebook4j.Subscribedto -->
  <interface name="Subscribedto"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.User"/>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Subscribedto -->
  <!-- start interface facebook4j.Subscriber -->
  <interface name="Subscriber"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.User"/>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Subscriber -->
  <!-- start interface facebook4j.Tab -->
  <interface name="Tab"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.FacebookResponse"/>
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLink" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getApplication" return="facebook4j.IdNameEntity"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCustomName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="isPermanent" return="java.lang.Boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPosition" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="isNonConnectionLandingTab" return="java.lang.Boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getImageURL" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCustomImageURL" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com
 @since Facebook4J 2.0.0]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Tab -->
  <!-- start class facebook4j.TabUpdate -->
  <class name="TabUpdate" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.io.Serializable"/>
    <constructor name="TabUpdate"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getPosition" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPosition"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="position" type="java.lang.Integer"/>
    </method>
    <method name="position" return="facebook4j.TabUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="position" type="java.lang.Integer"/>
    </method>
    <method name="getCustomName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setCustomName"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="customName" type="java.lang.String"/>
    </method>
    <method name="customName" return="facebook4j.TabUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="customName" type="java.lang.String"/>
    </method>
    <method name="getNonConnectionLandingTab" return="java.lang.Boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setNonConnectionLandingTab"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="nonConnectionLandingTab" type="java.lang.Boolean"/>
    </method>
    <method name="nonConnectionLandingTab" return="facebook4j.TabUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="nonConnectionLandingTab" type="java.lang.Boolean"/>
    </method>
    <method name="getCustomImageUrl" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setCustomImageUrl"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="customImageUrl" type="java.net.URL"/>
    </method>
    <method name="customImageUrl" return="facebook4j.TabUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="customImageUrl" type="java.net.URL"/>
    </method>
    <method name="getCustomImage" return="facebook4j.Media"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setCustomImage"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="customImage" type="facebook4j.Media"/>
    </method>
    <method name="customImage" return="facebook4j.TabUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="customImage" type="facebook4j.Media"/>
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="o" type="java.lang.Object"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com
 @since Facebook4J 2.0.0]]>
    </doc>
  </class>
  <!-- end class facebook4j.TabUpdate -->
  <!-- start interface facebook4j.Tag -->
  <interface name="Tag"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.FacebookResponse"/>
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getOffset" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLength" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getType" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getX" return="java.lang.Double"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getY" return="java.lang.Double"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCreatedTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Tag -->
  <!-- start interface facebook4j.Tagged -->
  <interface name="Tagged"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getType" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPost" return="facebook4j.Post"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPhoto" return="facebook4j.Photo"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getVideo" return="facebook4j.Video"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getMessage" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getMessageTags" return="java.util.Map&lt;java.lang.String, facebook4j.Tag[]&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getObjectId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPrivacy" return="facebook4j.Privacy"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getTo" return="java.util.List&lt;facebook4j.Category&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getUpdatedTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com
 @since Facebook4J 2.0.0]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Tagged -->
  <!-- start class facebook4j.TagUpdate -->
  <class name="TagUpdate" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.io.Serializable"/>
    <constructor name="TagUpdate"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="TagUpdate" type="java.lang.String, java.lang.String, java.lang.Double, java.lang.Double"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getTo" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setTo"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="to" type="java.lang.String"/>
    </method>
    <method name="to" return="facebook4j.TagUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="to" type="java.lang.String"/>
    </method>
    <method name="getTagText" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setTagText"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="tagText" type="java.lang.String"/>
    </method>
    <method name="tagText" return="facebook4j.TagUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="tagText" type="java.lang.String"/>
    </method>
    <method name="getX" return="java.lang.Double"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setX"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="x" type="java.lang.Double"/>
    </method>
    <method name="x" return="facebook4j.TagUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="x" type="java.lang.Double"/>
    </method>
    <method name="getY" return="java.lang.Double"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setY"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="y" type="java.lang.Double"/>
    </method>
    <method name="y" return="facebook4j.TagUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="y" type="java.lang.Double"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="obj" type="java.lang.Object"/>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </class>
  <!-- end class facebook4j.TagUpdate -->
  <!-- start interface facebook4j.Targeting -->
  <interface name="Targeting"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getCountries" return="java.util.List&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCities" return="java.util.List&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getRegions" return="java.util.List&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLocales" return="java.util.List&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com
 @since Facebook4J 2.0.0]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Targeting -->
  <!-- start class facebook4j.TargetingParameter -->
  <class name="TargetingParameter" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.io.Serializable"/>
    <constructor name="TargetingParameter"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="setCountries"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="countries" type="java.util.Set&lt;java.lang.String&gt;"/>
    </method>
    <method name="setCities"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="cities" type="java.util.Set&lt;java.lang.String&gt;"/>
    </method>
    <method name="setRegions"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="regions" type="java.util.Set&lt;java.lang.String&gt;"/>
    </method>
    <method name="setLocales"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="locales" type="java.util.Set&lt;java.util.Locale&gt;"/>
    </method>
    <method name="countries" return="facebook4j.TargetingParameter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="countries" type="java.util.Collection&lt;java.lang.String&gt;"/>
    </method>
    <method name="country" return="facebook4j.TargetingParameter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="country" type="java.lang.String"/>
    </method>
    <method name="cities" return="facebook4j.TargetingParameter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="cities" type="java.util.Collection&lt;java.lang.String&gt;"/>
    </method>
    <method name="city" return="facebook4j.TargetingParameter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="city" type="java.lang.String"/>
    </method>
    <method name="regions" return="facebook4j.TargetingParameter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="regions" type="java.util.Collection&lt;java.lang.String&gt;"/>
    </method>
    <method name="region" return="facebook4j.TargetingParameter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="region" type="java.lang.String"/>
    </method>
    <method name="locales" return="facebook4j.TargetingParameter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="locales" type="java.util.Collection&lt;java.util.Locale&gt;"/>
    </method>
    <method name="locale" return="facebook4j.TargetingParameter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="locale" type="java.util.Locale"/>
    </method>
    <method name="getCountries" return="java.util.Set&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCities" return="java.util.Set&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getRegions" return="java.util.Set&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLocales" return="java.util.Set&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="asJSONObject" return="facebook4j.internal.org.json.JSONObject"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="asJSONString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="o" type="java.lang.Object"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com
 @since Facebook4J 2.0.0]]>
    </doc>
  </class>
  <!-- end class facebook4j.TargetingParameter -->
  <!-- start interface facebook4j.Television -->
  <interface name="Television"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.Category"/>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Television -->
  <!-- start interface facebook4j.TestUser -->
  <interface name="TestUser"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.lang.Comparable&lt;facebook4j.TestUser&gt;"/>
    <implements name="java.io.Serializable"/>
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAccessToken" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLoginUrl" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getEmail" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPassword" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.TestUser -->
  <!-- start interface facebook4j.User -->
  <interface name="User"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getFirstName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getMiddleName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLastName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getGender" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLocale" return="java.util.Locale"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLanguages" return="java.util.List&lt;facebook4j.IdNameEntity&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLink" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getUsername" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getThirdPartyId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="isInstalled" return="java.lang.Boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getTimezone" return="java.lang.Double"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getUpdatedTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="isVerified" return="java.lang.Boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getBio" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getBirthday" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCover" return="facebook4j.Cover"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getEducation" return="java.util.List&lt;facebook4j.User.Education&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getEmail" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getHometown" return="facebook4j.IdNameEntity"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getInterestedIn" return="java.util.List&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLocation" return="facebook4j.IdNameEntity"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPolitical" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getFavoriteAthletes" return="java.util.List&lt;facebook4j.IdNameEntity&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getFavoriteTeams" return="java.util.List&lt;facebook4j.IdNameEntity&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPicture" return="facebook4j.Picture"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getQuotes" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getRelationshipStatus" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getReligion" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getSignificantOther" return="facebook4j.IdNameEntity"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getVideoUploadLimits" return="facebook4j.User.VideoUploadLimits"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getWebsite" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getWork" return="java.util.List&lt;facebook4j.User.Work&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <field name="BIRTHDAY_DATE_FORMAT" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.User -->
  <!-- start interface facebook4j.User.Education -->
  <interface name="User.Education"    abstract="true"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getYear" return="facebook4j.IdNameEntity"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getType" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getSchool" return="facebook4j.IdNameEntity"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDegree" return="facebook4j.IdNameEntity"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getConcentration" return="java.util.List&lt;facebook4j.IdNameEntity&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getClasses" return="java.util.List&lt;facebook4j.User.EducationClass&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getWith" return="java.util.List&lt;facebook4j.IdNameEntity&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
  </interface>
  <!-- end interface facebook4j.User.Education -->
  <!-- start interface facebook4j.User.EducationClass -->
  <interface name="User.EducationClass"    abstract="true"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getWith" return="java.util.List&lt;facebook4j.IdNameEntity&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
  </interface>
  <!-- end interface facebook4j.User.EducationClass -->
  <!-- start interface facebook4j.User.VideoUploadLimits -->
  <interface name="User.VideoUploadLimits"    abstract="true"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getLength" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getSize" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
  </interface>
  <!-- end interface facebook4j.User.VideoUploadLimits -->
  <!-- start interface facebook4j.User.Work -->
  <interface name="User.Work"    abstract="true"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getEmployer" return="facebook4j.IdNameEntity"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLocation" return="facebook4j.IdNameEntity"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPosition" return="facebook4j.IdNameEntity"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getStartDate" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getEndDate" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
  </interface>
  <!-- end interface facebook4j.User.Work -->
  <!-- start interface facebook4j.Venue -->
  <interface name="Venue"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getStreet" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCity" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getState" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCountry" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLatitude" return="java.lang.Double"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLongitude" return="java.lang.Double"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getZip" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com
 @since Facebook4J 2.0.0]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Venue -->
  <!-- start class facebook4j.Version -->
  <class name="Version" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="getVersion" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="main"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="args" type="java.lang.String[]"/>
      <doc>
      <![CDATA[prints the version string

 @param args will be just ignored.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </class>
  <!-- end class facebook4j.Version -->
  <!-- start interface facebook4j.Video -->
  <interface name="Video"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.FacebookResponse"/>
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getFrom" return="facebook4j.Category"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getTags" return="java.util.List&lt;facebook4j.Tag&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPicture" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getEmbedHtml" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getFormat" return="java.util.List&lt;facebook4j.Video.Format&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getIcon" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getSource" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCreatedTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getUpdatedTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getComments" return="facebook4j.PagableList&lt;facebook4j.Comment&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLink" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Video -->
  <!-- start interface facebook4j.Video.Format -->
  <interface name="Video.Format"    abstract="true"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getEmbedHtml" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getFilter" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getHeight" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getWidth" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPicture" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@since Facebook4J 2.0.0]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.Video.Format -->
  <!-- start class facebook4j.VideoUpdate -->
  <class name="VideoUpdate" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.io.Serializable"/>
    <constructor name="VideoUpdate" type="facebook4j.Media"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getSource" return="facebook4j.Media"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getTitle" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setTitle"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="title" type="java.lang.String"/>
    </method>
    <method name="title" return="facebook4j.VideoUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="title" type="java.lang.String"/>
    </method>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setDescription"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="description" type="java.lang.String"/>
    </method>
    <method name="description" return="facebook4j.VideoUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="description" type="java.lang.String"/>
    </method>
    <method name="getPublished" return="java.lang.Boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPublished"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="published" type="java.lang.Boolean"/>
    </method>
    <method name="published" return="facebook4j.VideoUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="published" type="boolean"/>
    </method>
    <method name="getScheduledPublishTime" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setScheduledPublishTime"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="scheduledPublishTime" type="java.lang.Integer"/>
    </method>
    <method name="setScheduledPublishTime"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="scheduledPublishTime" type="java.util.Date"/>
    </method>
    <method name="scheduledPublishTime" return="facebook4j.VideoUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="scheduledPublishTime" type="java.lang.Integer"/>
    </method>
    <method name="scheduledPublishTime" return="facebook4j.VideoUpdate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="scheduledPublishTime" type="java.util.Date"/>
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="o" type="java.lang.Object"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com
 @since Facebook4J 2.0.0]]>
    </doc>
  </class>
  <!-- end class facebook4j.VideoUpdate -->
</package>
<package name="facebook4j.api">
  <!-- start interface facebook4j.api.AccountMethods -->
  <interface name="AccountMethods"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getAccounts" return="facebook4j.ResponseList&lt;facebook4j.Account&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current user's accounts of Facebook apps and pages.
 @return accounts
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - accounts]]>
      </doc>
    </method>
    <method name="getAccounts" return="facebook4j.ResponseList&lt;facebook4j.Account&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current user's accounts of Facebook apps and pages.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return accounts
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - accounts]]>
      </doc>
    </method>
    <method name="getAccounts" return="facebook4j.ResponseList&lt;facebook4j.Account&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a user's accounts of Facebook apps and pages.
 @param userId the ID of a user
 @return accounts
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - accounts]]>
      </doc>
    </method>
    <method name="getAccounts" return="facebook4j.ResponseList&lt;facebook4j.Account&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a user's accounts of Facebook apps and pages.
 @param userId the ID of a user
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return accounts
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - accounts]]>
      </doc>
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.api.AccountMethods -->
  <!-- start interface facebook4j.api.ActivityMethods -->
  <interface name="ActivityMethods"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getActivities" return="facebook4j.ResponseList&lt;facebook4j.Activity&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the activities listed on the current user's profile.
 @return activities
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - activities]]>
      </doc>
    </method>
    <method name="getActivities" return="facebook4j.ResponseList&lt;facebook4j.Activity&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the activities listed on the current user's profile.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return activities
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - activities]]>
      </doc>
    </method>
    <method name="getActivities" return="facebook4j.ResponseList&lt;facebook4j.Activity&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the activities listed on a user's profile.
 @param userId the ID of a user
 @return activities
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - activities]]>
      </doc>
    </method>
    <method name="getActivities" return="facebook4j.ResponseList&lt;facebook4j.Activity&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the activities listed on a user's profile.
 @param userId the ID of a user
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return activities
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - activities]]>
      </doc>
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.api.ActivityMethods -->
  <!-- start interface facebook4j.api.AlbumMethods -->
  <interface name="AlbumMethods"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getAlbums" return="facebook4j.ResponseList&lt;facebook4j.Album&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the photo albums the current user/page has created.
 @return albums
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - albums]]>
      </doc>
    </method>
    <method name="getAlbums" return="facebook4j.ResponseList&lt;facebook4j.Album&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the photo albums the current user/page has created.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return albums
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#albums">User#albums - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getAlbums" return="facebook4j.ResponseList&lt;facebook4j.Album&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the photo albums a user/page has created.
 @param id the ID of a user/page
 @return albums
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#albums">User#albums - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getAlbums" return="facebook4j.ResponseList&lt;facebook4j.Album&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the photo albums a user/page has created.
 @param id the ID of a user/page
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return albums
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#albums">User#albums - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="createAlbum" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="albumUpdate" type="facebook4j.AlbumUpdate"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Creates the current user's photo album.
 @param albumUpdate the album to be created
 @return The new album ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#albums">User#albums - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="createAlbum" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="albumUpdate" type="facebook4j.AlbumUpdate"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Creates the user's photo album.
 @param userId the ID of a user
 @param albumUpdate the album to be created
 @return The new album ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#albums">User#albums - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getAlbum" return="facebook4j.Album"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="albumId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a single photo album.
 @param albumId the ID of a album
 @return album
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/album/">Album - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getAlbum" return="facebook4j.Album"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="albumId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a single photo album.
 @param albumId the ID of a album
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return album
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/album/">Album - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getAlbumPhotos" return="facebook4j.ResponseList&lt;facebook4j.Photo&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="albumId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the photos contained in the album.
 @param albumId the ID of a album
 @return photos
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/album/#photos">Album#photos - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getAlbumPhotos" return="facebook4j.ResponseList&lt;facebook4j.Photo&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="albumId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the photos contained in the album.
 @param albumId the ID of a album
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return photos
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/album/#photos">Album#photos - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="addAlbumPhoto" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="albumId" type="java.lang.String"/>
      <param name="source" type="facebook4j.Media"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Adds a photo to the album.
 @param albumId the ID of a album
 @param source photo content
 @return The new photo ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/album/#photos">Album#photos - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="addAlbumPhoto" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="albumId" type="java.lang.String"/>
      <param name="source" type="facebook4j.Media"/>
      <param name="message" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Adds a photo to the album.
 @param albumId the ID of a album
 @param source photo content
 @param message photo description
 @return The new photo ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/album/#photos">Album#photos - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getAlbumComments" return="facebook4j.ResponseList&lt;facebook4j.Comment&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="albumId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the comments made on the album.
 @param albumId the ID of a album
 @return comments
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/album/#comments">Album#comments - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getAlbumComments" return="facebook4j.ResponseList&lt;facebook4j.Comment&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="albumId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the comments made on the album.
 @param albumId the ID of a album
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return comments
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/album/#comments">Album#comments - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="commentAlbum" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="albumId" type="java.lang.String"/>
      <param name="message" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Comments on the album.
 @param albumId the ID of a album
 @param message comment text
 @return The new comment ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/album/#comments">Album#comments - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getAlbumLikes" return="facebook4j.ResponseList&lt;facebook4j.Like&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="albumId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns likes made on the album.
 @param albumId the ID of a album
 @return likes
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/album/#likes">Album#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getAlbumLikes" return="facebook4j.ResponseList&lt;facebook4j.Like&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="albumId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns likes made on the album.
 @param albumId the ID of a album
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a> see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return likes
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/album/#likes">Album#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="likeAlbum" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="albumId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Likes the album.
 @param albumId the ID of a album
 @return true if like is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/album/#likes">Album#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="unlikeAlbum" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="albumId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Unlikes the album.
 @param albumId the ID of a album
 @return true if unlike is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/album/#likes">Album#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getAlbumCoverPhoto" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="albumId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns url of the album's cover photo.
 @param albumId the ID of a album
 @return url
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/album/">Album - Facebook Developers</a> - Connections - picture]]>
      </doc>
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.api.AlbumMethods -->
  <!-- start interface facebook4j.api.CheckinMethods -->
  <interface name="CheckinMethods"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getCheckins" return="facebook4j.ResponseList&lt;facebook4j.Checkin&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the places that the current user has checked-into
 or made to the Place Page by the current user or friends of the current user.
 @return checkins
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#checkins">User#checkins - Facebook Developers</a>
 @see <a href="https://developers.facebook.com/docs/reference/api/page/">Page - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getCheckins" return="facebook4j.ResponseList&lt;facebook4j.Checkin&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the places that the current user has checked-into
 or made to the Place Page by the current user or friends of the current user.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return checkins
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#checkins">User#checkins - Facebook Developers</a>
 @see <a href="https://developers.facebook.com/docs/reference/api/page/">Page - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getCheckins" return="facebook4j.ResponseList&lt;facebook4j.Checkin&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the places that a user has checked-into
 or made to the Place Page by the user or friends of the user.
 @param id the ID of a user/page
 @return checkins
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#checkins">User#checkins - Facebook Developers</a>
 @see <a href="https://developers.facebook.com/docs/reference/api/page/">Page - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getCheckins" return="facebook4j.ResponseList&lt;facebook4j.Checkin&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the places that a user has checked-into
 or made to the Place Page by the user or friends of the user.
 @param id the ID of a user/page
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return checkins
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#checkins">User#checkins - Facebook Developers</a>
 @see <a href="https://developers.facebook.com/docs/reference/api/page/">Page - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="checkin" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="creating a Post with a location attached">
      <param name="checkinUpdate" type="facebook4j.CheckinUpdate"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Checkins the place as the current user.
 @param checkinUpdate the checkin to be created
 @return The new checkin ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#checkins">User#checkins - Facebook Developers</a>
 @deprecated creating a Post with a location attached]]>
      </doc>
    </method>
    <method name="checkin" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="creating a Post with a location attached">
      <param name="userId" type="java.lang.String"/>
      <param name="checkinUpdate" type="facebook4j.CheckinUpdate"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Checkins the place as a user.
 @param userId the ID of a user
 @param checkinUpdate the checkin to be created
 @return The new checkin ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#checkins">User#checkins - Facebook Developers</a>
 @deprecated creating a Post with a location attached]]>
      </doc>
    </method>
    <method name="getCheckin" return="facebook4j.Checkin"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="checkinId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a single checkin information.
 @param checkinId the ID of a checkin
 @return checkin
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/checkin/">Checkin - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getCheckin" return="facebook4j.Checkin"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="checkinId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a single checkin information.
 @param checkinId the ID of a checkin
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a> see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return checkin
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/checkin/">Checkin - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getCheckinComments" return="facebook4j.ResponseList&lt;facebook4j.Comment&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="checkinId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the comments on a checkin.
 @param checkinId the ID of a checkin
 @return comments
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/checkin/#comments">Checkin#comments - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getCheckinComments" return="facebook4j.ResponseList&lt;facebook4j.Comment&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="checkinId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the comments on a checkin.
 @param checkinId the ID of a checkin
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a> see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return comments
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/checkin/#comments">Checkin#comments - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="commentCheckin" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="checkinId" type="java.lang.String"/>
      <param name="message" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Comments on a checkin.
 @param checkinId the ID of a checkin
 @param message comment text
 @return The new comment ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/checkin/#comments">Checkin#comments - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getCheckinLikes" return="facebook4j.ResponseList&lt;facebook4j.Like&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="checkinId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the users who like a checkin.
 @param checkinId the ID of a checkin
 @return likes
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/checkin/#likes">Checkin#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getCheckinLikes" return="facebook4j.ResponseList&lt;facebook4j.Like&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="checkinId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the users who like a checkin.
 @param checkinId the ID of a checkin
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a> see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return likes
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/checkin/#likes">Checkin#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="likeCheckin" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="checkinId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Likes the checkin.
 @param checkinId the ID of a checkin
 @return true if like is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/checkin/#likes">Checkin#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="unlikeCheckin" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="checkinId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Unlikes the checkin.
 @param checkinId the ID of a checkin
 @return true if unlike is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/checkin/#likes">Checkin#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.api.CheckinMethods -->
  <!-- start interface facebook4j.api.CommentMethods -->
  <interface name="CommentMethods"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getComment" return="facebook4j.Comment"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="commentId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a single comment.
 @param commentId the ID of a comment
 @return comment
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/Comment/">Comment - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="deleteComment" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="commentId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Deletes the comment.
 @param commentId the ID of a comment
 @return true if delete is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/Comment/">Comment - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getCommentLikes" return="facebook4j.ResponseList&lt;facebook4j.Like&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="commentId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the likes on a comment.
 @param commentId the ID of a comment
 @return likes
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/Comment/#likes">Comment#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getCommentLikes" return="facebook4j.ResponseList&lt;facebook4j.Like&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="commentId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the likes on a comment.
 @param commentId the ID of a comment
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return likes
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/Comment/#likes">Comment#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="likeComment" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="commentId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Likes the comment.
 @param commentId the ID of a comment
 @return true if like is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/Comment/#likes">Comment#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="unlikeComment" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="commentId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Unlikes the comment.
 @param commentId the ID of a comment
 @return true if unlike is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/Comment/#likes">Comment#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.api.CommentMethods -->
  <!-- start interface facebook4j.api.DomainMethods -->
  <interface name="DomainMethods"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getDomain" return="facebook4j.Domain"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="domainId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the website domain information using Facebook.
 @param domainId the ID of a website domain
 @return domain
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/domain/">Domain - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getDomainByName" return="facebook4j.Domain"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="domainName" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the website domain information using Facebook.
 @param domainName the name of a website domain
 @return domain
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/domain/">Domain - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getDomainsByName" return="java.util.List&lt;facebook4j.Domain&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="domainName" type="java.lang.String[]"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the website domains information using Facebook.
 @param domainName the name list of website domain
 @return domains
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/domain/">Domain - Facebook Developers</a>]]>
      </doc>
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.api.DomainMethods -->
  <!-- start interface facebook4j.api.EventMethods -->
  <interface name="EventMethods"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getEvents" return="facebook4j.ResponseList&lt;facebook4j.Event&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the events the current user/page is attending.
 @return events
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - events
 @see <a href="https://developers.facebook.com/docs/reference/api/page/">Page - Facebook Developers</a> - Connections - events]]>
      </doc>
    </method>
    <method name="getEvents" return="facebook4j.ResponseList&lt;facebook4j.Event&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the events the current user/page is attending.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return events
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - events
 @see <a href="https://developers.facebook.com/docs/reference/api/page/">Page - Facebook Developers</a> - Connections - events]]>
      </doc>
    </method>
    <method name="getEvents" return="facebook4j.ResponseList&lt;facebook4j.Event&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the events a user/event/page is attending.
 @param id the ID of a user
 @return events
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - events
 @see <a href="https://developers.facebook.com/docs/reference/api/page/">Page - Facebook Developers</a> - Connections - events]]>
      </doc>
    </method>
    <method name="getEvents" return="facebook4j.ResponseList&lt;facebook4j.Event&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the events a user/event/page is attending.
 @param id the ID of a user/page
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return events
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - events
 @see <a href="https://developers.facebook.com/docs/reference/api/page/">Page - Facebook Developers</a> - Connections - events]]>
      </doc>
    </method>
    <method name="createEvent" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventUpdate" type="facebook4j.EventUpdate"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Creates the event for the current user/page.
 @return The new event ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#events">User#events - Facebook Developers</a>
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#events">Page#events - Facebook Developers</a> - Connections - events
 @param eventUpdate]]>
      </doc>
    </method>
    <method name="createEvent" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="java.lang.String"/>
      <param name="eventUpdate" type="facebook4j.EventUpdate"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Creates the event for a user/event/page.
 @param id the ID of a user/page
 @param eventUpdate a event to be created
 @return The new event ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#events">User#events - Facebook Developers</a>
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#events">Page#events - Facebook Developers</a> - Connections - events]]>
      </doc>
    </method>
    <method name="editEvent" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventId" type="java.lang.String"/>
      <param name="eventUpdate" type="facebook4j.EventUpdate"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Updates the event.
 @param eventId the ID of a event
 @param eventUpdate the event to be updated
 @return true if update is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#events">User#events - Facebook Developers</a>
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#events">Page#events - Facebook Developers</a> - Connections - events]]>
      </doc>
    </method>
    <method name="deleteEvent" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Deletes the event.
 @param eventId the ID of a event
 @return true if delete is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#events">User#events - Facebook Developers</a>
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#events">Page#events - Facebook Developers</a> - Connections - events]]>
      </doc>
    </method>
    <method name="getEvent" return="facebook4j.Event"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a single event.
 @param eventId the ID of a event
 @return event
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/event/">Event - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getEvent" return="facebook4j.Event"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a single event.
 @param eventId the ID of a event
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return event
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/event/">Event - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="postEventLink" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventId" type="java.lang.String"/>
      <param name="link" type="java.net.URL"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Posts the link on a event's wall.
 @param eventId the ID of a event
 @param link link URL
 @return The new link ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/event/#links">Event#links - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="postEventLink" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventId" type="java.lang.String"/>
      <param name="link" type="java.net.URL"/>
      <param name="message" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Posts the link on a event's wall.
 @param eventId the ID of a event
 @param link link URL
 @param message link message
 @return The new link ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/event/#links">Event#links - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="postEventStatusMessage" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventId" type="java.lang.String"/>
      <param name="message" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Posts the status message on a event's wall.
 @param eventId the ID of a event
 @param message status message content
 @return The new status message ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/event/#statuses">Event#statuses - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getRSVPStatusAsNoreply" return="facebook4j.ResponseList&lt;facebook4j.RSVPStatus&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a list of all users who have not replied to the event.
 @param eventId the ID of a event
 @return a list of all users who have not replied to the event
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/event/#noreply">Event#noreply - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getRSVPStatusAsNoreply" return="facebook4j.ResponseList&lt;facebook4j.RSVPStatus&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventId" type="java.lang.String"/>
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a single user who have not replied to the event.
 @param eventId the ID of a event
 @return a single users who have not replied to the event
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/event/#noreply">Event#noreply - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getRSVPStatusAsInvited" return="facebook4j.ResponseList&lt;facebook4j.RSVPStatus&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a list of invitees for the event.
 @param eventId the ID of a event
 @return a list of invitees for the event
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/event/#invited">Event#invited - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getRSVPStatusAsInvited" return="facebook4j.ResponseList&lt;facebook4j.RSVPStatus&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventId" type="java.lang.String"/>
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Checks a specific user has been invited to the event.
 @param eventId the ID of a event
 @param userId the ID of a user
 @return the user has been invited to this event
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/event/#invited">Event#invited - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="inviteToEvent" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventId" type="java.lang.String"/>
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Invites a user to the event.
 @param eventId the ID of a event
 @param userId the ID of the user
 @return true if the invite is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/event/#invited">Event#invited - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="inviteToEvent" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventId" type="java.lang.String"/>
      <param name="userIds" type="java.lang.String[]"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Invites users to the event.
 @param eventId the ID of a event
 @param userIds the IDs of users
 @return true if the invite is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/event/#invited">Event#invited - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="uninviteFromEvent" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventId" type="java.lang.String"/>
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Un-invites user from the event.
 @param eventId the ID of a event
 @param userId the ID of a user
 @return true if the un-invite is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/event/#invited">Event#invited - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getRSVPStatusInAttending" return="facebook4j.ResponseList&lt;facebook4j.RSVPStatus&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a list of all users who responded 'yes' to the event.
 @param eventId the ID of a event
 @return a list of all users who responded 'yes' to the event
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/event/#attending">Event#attending - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getRSVPStatusInAttending" return="facebook4j.ResponseList&lt;facebook4j.RSVPStatus&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventId" type="java.lang.String"/>
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Checks a specific user responded 'yes' to the event.
 @param eventId the ID of a event
 @param userId the ID of a user
 @return a specific user responded 'yes' to the event
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/event/#attending">Event#attending - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="rsvpEventAsAttending" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[RSVPs the current user as 'attending' the event.
 @param eventId the ID of a event
 @return true if the RSVP is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/event/#attending">Event#attending - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getRSVPStatusInMaybe" return="facebook4j.ResponseList&lt;facebook4j.RSVPStatus&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a list of all users who responded 'maybe' to the event.
 @param eventId the ID of a event
 @return a list of all users who responded 'maybe' to the event
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/event/#maybe">Event#maybe - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getRSVPStatusInMaybe" return="facebook4j.ResponseList&lt;facebook4j.RSVPStatus&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventId" type="java.lang.String"/>
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Checks a specific user responded 'maybe' to the event.
 @param eventId the ID of a event
 @param userId the ID of a user
 @return a specific user responded 'maybe' to the event
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/event/#maybe">Event#maybe - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="rsvpEventAsMaybe" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[RSVPs the current user as 'maybe' the event.
 @param eventId the ID of a event
 @return true if the RSVP is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/event/#maybe">Event#maybe - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getRSVPStatusInDeclined" return="facebook4j.ResponseList&lt;facebook4j.RSVPStatus&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a list of all users who responded 'no' to the event.
 @param eventId the ID of a event
 @return a list of all users who responded 'no' to the event
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/event/#declined">Event#declined - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getRSVPStatusInDeclined" return="facebook4j.ResponseList&lt;facebook4j.RSVPStatus&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventId" type="java.lang.String"/>
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Checks a specific user responded 'no' to the event.
 @param eventId the ID of a event
 @param userId the ID of a user
 @return a specific user responded 'no' to the event
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/event/#declined">Event#declined - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="rsvpEventAsDeclined" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[RSVPs the current user as 'declined' the event.
 @param eventId the ID of a event
 @return true if the RSVP is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/event/#declined">Event#declined - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getEventPictureURL" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns url of the event's profile picture.
 @param eventId the ID of a event
 @return url
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/event/#picture">Event#picture - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getEventPictureURL" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventId" type="java.lang.String"/>
      <param name="size" type="facebook4j.PictureSize"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns url of the event's profile picture.
 @param eventId the ID of a event
 @param size picture size
 @return url
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/event/#picture">Event#picture - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="updateEventPicture" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventId" type="java.lang.String"/>
      <param name="source" type="facebook4j.Media"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Updates the event's profile picture.
 @param eventId the ID of a event
 @param source picture resource
 @return true if update is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/event/#picture">Event#picture - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="deleteEventPicture" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Deletes the event's profile picture.
 @param eventId the ID of a event
 @return true if update is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/event/#picture">Event#picture - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getEventPhotos" return="facebook4j.ResponseList&lt;facebook4j.Photo&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the event's photos.
 @param eventId the ID of a event
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/event/#photos">Event#photos - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getEventPhotos" return="facebook4j.ResponseList&lt;facebook4j.Photo&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the event's photos.
 @param eventId the ID of a event
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/event/#photos">Event#photos - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="postEventPhoto" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventId" type="java.lang.String"/>
      <param name="source" type="facebook4j.Media"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Posts the photo on a event's wall.
 @param eventId the ID of a event
 @param source photo resource
 @return The new photo ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/event/#photos">Event#photos - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="postEventPhoto" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventId" type="java.lang.String"/>
      <param name="source" type="facebook4j.Media"/>
      <param name="message" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Posts the photo on a event's wall.
 @param eventId the ID of a event
 @param source photo resource
 @param message photo description
 @return The new photo ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/event/#photos">Event#photos - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getEventVideos" return="facebook4j.ResponseList&lt;facebook4j.Video&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the event's videos.
 @param eventId the ID of a event
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/event/#videos">Event#videos - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getEventVideos" return="facebook4j.ResponseList&lt;facebook4j.Video&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the event's videos.
 @param eventId the ID of a event
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/event/#videos">Event#videos - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="postEventVideo" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventId" type="java.lang.String"/>
      <param name="source" type="facebook4j.Media"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Posts the video on a event's wall.
 @param eventId the ID of a event
 @param source video resource
 @return The new video ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/event/#videos">Event#videos - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="postEventVideo" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventId" type="java.lang.String"/>
      <param name="source" type="facebook4j.Media"/>
      <param name="title" type="java.lang.String"/>
      <param name="description" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Posts the video on a event's wall.
 @param eventId the ID of a event
 @param source video resource
 @param title video title
 @param description video description
 @return The new video ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/event/#videos">Event#videos - Facebook Developers</a>]]>
      </doc>
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.api.EventMethods -->
  <!-- start interface facebook4j.api.FamilyMethods -->
  <interface name="FamilyMethods"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getFamily" return="facebook4j.ResponseList&lt;facebook4j.Family&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current user's family relationships.
 @return family relationships
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - family]]>
      </doc>
    </method>
    <method name="getFamily" return="facebook4j.ResponseList&lt;facebook4j.Family&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current user's family relationships.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return family relationships
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - family]]>
      </doc>
    </method>
    <method name="getFamily" return="facebook4j.ResponseList&lt;facebook4j.Family&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a user's family relationships.
 @param userId the ID of a user
 @return family relationships
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - family]]>
      </doc>
    </method>
    <method name="getFamily" return="facebook4j.ResponseList&lt;facebook4j.Family&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a user's family relationships.
 @param userId the ID of a user
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return family relationships
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - family]]>
      </doc>
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.api.FamilyMethods -->
  <!-- start interface facebook4j.api.FavoriteMethods -->
  <interface name="FavoriteMethods"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getBooks" return="facebook4j.ResponseList&lt;facebook4j.Book&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the books listed on the current user's profile.
 @return books
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - books]]>
      </doc>
    </method>
    <method name="getBooks" return="facebook4j.ResponseList&lt;facebook4j.Book&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the books listed on the current user's profile.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return books
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - books]]>
      </doc>
    </method>
    <method name="getBooks" return="facebook4j.ResponseList&lt;facebook4j.Book&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the books listed on a user's profile.
 @param userId the ID of a user
 @return books
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - books]]>
      </doc>
    </method>
    <method name="getBooks" return="facebook4j.ResponseList&lt;facebook4j.Book&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the books listed on a user's profile.
 @param userId the ID of a user
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return books
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - books]]>
      </doc>
    </method>
    <method name="getGames" return="facebook4j.ResponseList&lt;facebook4j.Game&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the games the current user has added to the Arts and Entertainment section of their profile.
 @return games
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - games]]>
      </doc>
    </method>
    <method name="getGames" return="facebook4j.ResponseList&lt;facebook4j.Game&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the games the current user has added to the Arts and Entertainment section of their profile.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return games
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - games]]>
      </doc>
    </method>
    <method name="getGames" return="facebook4j.ResponseList&lt;facebook4j.Game&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the games a user has added to the Arts and Entertainment section of their profile.
 @param userId the ID of a user
 @return games
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - games]]>
      </doc>
    </method>
    <method name="getGames" return="facebook4j.ResponseList&lt;facebook4j.Game&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the games a user has added to the Arts and Entertainment section of their profile.
 @param userId the ID of a user
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return games
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - games]]>
      </doc>
    </method>
    <method name="getMovies" return="facebook4j.ResponseList&lt;facebook4j.Movie&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the movies listed on the current user's profile.
 @return movies
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - movies]]>
      </doc>
    </method>
    <method name="getMovies" return="facebook4j.ResponseList&lt;facebook4j.Movie&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the movies listed on the current user's profile.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return movies
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - movies]]>
      </doc>
    </method>
    <method name="getMovies" return="facebook4j.ResponseList&lt;facebook4j.Movie&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the movies listed on a user's profile.
 @param userId the ID of a user
 @return movies
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - movies]]>
      </doc>
    </method>
    <method name="getMovies" return="facebook4j.ResponseList&lt;facebook4j.Movie&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the movies listed on a user's profile.
 @param userId the ID of a user
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return movies
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - movies]]>
      </doc>
    </method>
    <method name="getMusic" return="facebook4j.ResponseList&lt;facebook4j.Music&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the music listed on the current user's profile.
 @return music
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - music]]>
      </doc>
    </method>
    <method name="getMusic" return="facebook4j.ResponseList&lt;facebook4j.Music&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the music listed on the current user's profile.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return music
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - music]]>
      </doc>
    </method>
    <method name="getMusic" return="facebook4j.ResponseList&lt;facebook4j.Music&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the music listed on a user's profile.
 @param userId the ID of a user
 @return music
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - music]]>
      </doc>
    </method>
    <method name="getMusic" return="facebook4j.ResponseList&lt;facebook4j.Music&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the music listed on a user's profile.
 @param userId the ID of a user
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return music
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - music]]>
      </doc>
    </method>
    <method name="getTelevision" return="facebook4j.ResponseList&lt;facebook4j.Television&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the television listed on the current user's profile.
 @return television
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - television]]>
      </doc>
    </method>
    <method name="getTelevision" return="facebook4j.ResponseList&lt;facebook4j.Television&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the television listed on the current user's profile.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return television
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - television]]>
      </doc>
    </method>
    <method name="getTelevision" return="facebook4j.ResponseList&lt;facebook4j.Television&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the television listed on a user's profile.
 @param userId the ID of a user
 @return television
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - television]]>
      </doc>
    </method>
    <method name="getTelevision" return="facebook4j.ResponseList&lt;facebook4j.Television&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the television listed on a user's profile.
 @param userId the ID of a user
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return television
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - television]]>
      </doc>
    </method>
    <method name="getInterests" return="facebook4j.ResponseList&lt;facebook4j.Interest&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the interests listed on the current user's profile.
 @return interests
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - interests]]>
      </doc>
    </method>
    <method name="getInterests" return="facebook4j.ResponseList&lt;facebook4j.Interest&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the interests listed on the current user's profile.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return interests
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - interests]]>
      </doc>
    </method>
    <method name="getInterests" return="facebook4j.ResponseList&lt;facebook4j.Interest&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the interests listed on a user's profile.
 @param userId the ID of a user
 @return interests
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - interests]]>
      </doc>
    </method>
    <method name="getInterests" return="facebook4j.ResponseList&lt;facebook4j.Interest&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the interests listed on a user's profile.
 @param userId the ID of a user
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return interests
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - interests]]>
      </doc>
    </method>
  </interface>
  <!-- end interface facebook4j.api.FavoriteMethods -->
  <!-- start interface facebook4j.api.FQLMethods -->
  <interface name="FQLMethods"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="executeFQL" return="facebook4j.internal.org.json.JSONArray"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="query" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Executes a single FQL query.
 @param query FQL query
 @return array of json objects
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/fql/">Facebook Query Language (FQL) - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="executeFQL" return="facebook4j.internal.org.json.JSONArray"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="query" type="java.lang.String"/>
      <param name="locale" type="java.util.Locale"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Executes a single FQL query.
 @param query FQL query
 @param locale Locale
 @return array of json objects
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/fql/">Facebook Query Language (FQL) - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="executeMultiFQL" return="java.util.Map&lt;java.lang.String, facebook4j.internal.org.json.JSONArray&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="queries" type="java.util.Map&lt;java.lang.String, java.lang.String&gt;"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Executes multiple FQL queries.
 @param queries FQL queries
 @return results Map (key => given query's key : value => array of json objects)
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/fql/">Facebook Query Language (FQL) - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="executeMultiFQL" return="java.util.Map&lt;java.lang.String, facebook4j.internal.org.json.JSONArray&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="queries" type="java.util.Map&lt;java.lang.String, java.lang.String&gt;"/>
      <param name="locale" type="java.util.Locale"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Executes multiple FQL queries.
 @param queries FQL queries
 @param locale Locale
 @return results Map (key => given query's key : value => array of json objects)
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/fql/">Facebook Query Language (FQL) - Facebook Developers</a>]]>
      </doc>
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.api.FQLMethods -->
  <!-- start interface facebook4j.api.FriendMethods -->
  <interface name="FriendMethods"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getFriends" return="facebook4j.ResponseList&lt;facebook4j.Friend&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current user's friends.
 @return friends
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#friends">User#friends - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getFriends" return="facebook4j.ResponseList&lt;facebook4j.Friend&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current user's friends.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return friends
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#friends">User#friends - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getFriends" return="facebook4j.ResponseList&lt;facebook4j.Friend&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a user's friends.
 @param userId the ID of a user
 @return friends
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#friends">User#friends - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getFriends" return="facebook4j.ResponseList&lt;facebook4j.Friend&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a user's friends.
 @param userId the ID of a user
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return friends
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#friends">User#friends - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getBelongsFriend" return="facebook4j.ResponseList&lt;facebook4j.Friend&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="friendId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the friend if the current user friends with.
 @param friendId the ID of the friend
 @return friend. If the current user is not a friend with the User represented by friendId, returns empty list.
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#friends">User#friends - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getBelongsFriend" return="facebook4j.ResponseList&lt;facebook4j.Friend&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="friendId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the friend if the current user friends with.
 @param friendId the ID of the friend
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return friend. If the current user is not a friend with the User represented by friendId, returns empty list.
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#friends">User#friends - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getBelongsFriend" return="facebook4j.ResponseList&lt;facebook4j.Friend&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="friendId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the friend if a user friends with.
 @param userId the ID of a user
 @param friendId the ID of the friend
 @return friend. If the user is not a friend with the User represented by friendId, returns empty list.
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#friends">User#friends - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getBelongsFriend" return="facebook4j.ResponseList&lt;facebook4j.Friend&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="friendId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the friend if a user friends with.
 @param userId the ID of a user
 @param friendId the ID of the friend
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return friend. If the user is not a friend with the User represented by friendId, returns empty list.
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#friends">User#friends - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getFriendlists" return="facebook4j.ResponseList&lt;facebook4j.Friendlist&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current user's friend lists.
 @return friend lists
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - friendlists]]>
      </doc>
    </method>
    <method name="getFriendlists" return="facebook4j.ResponseList&lt;facebook4j.Friendlist&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current user's friend lists.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return friend lists
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - friendlists]]>
      </doc>
    </method>
    <method name="getFriendlists" return="facebook4j.ResponseList&lt;facebook4j.Friendlist&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the user's friend lists.
 @param userId the ID of a user
 @return friend lists
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - friendlists]]>
      </doc>
    </method>
    <method name="getFriendlists" return="facebook4j.ResponseList&lt;facebook4j.Friendlist&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the user's friend lists.
 @param userId the ID of a user
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return friend lists
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - friendlists]]>
      </doc>
    </method>
    <method name="createFriendlist" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="friendlistName" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Creates the friend list for the current user.
 @param friendlistName friend list name
 @return The new friend list ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#friendlists">User#friendlists - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="createFriendlist" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="friendlistName" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Creates the friend list for a user.
 @param userId the ID of a user
 @param friendlistName friend list name. Maximum 25 characters
 @return The new friend list ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#friendlists">User#friendlists - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getFriendlist" return="facebook4j.Friendlist"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="friendlistId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a single friend list.
 @param friendlistId the ID of the friend list
 @return friend list
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/FriendList/">FriendList - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getFriendlist" return="facebook4j.Friendlist"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="friendlistId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a single friend list.
 @param friendlistId the ID of the friend list
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return friend list
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/FriendList/">FriendList - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="deleteFriendlist" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="friendlistId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Deletes the friend list.
 @param friendlistId the ID of the friend list
 @return true if delete is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/FriendList/">FriendList - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getFriendlistMembers" return="facebook4j.ResponseList&lt;facebook4j.Friend&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="friendlistId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns all of the users who are members of this list.
 @param friendlistId the ID of the friend list
 @return members of this list
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/FriendList/#members">FriendList#members - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="addFriendlistMember" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="friendlistId" type="java.lang.String"/>
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Adds a user to the friend list.
 @param friendlistId the ID of the friend list
 @param userId the ID of target user
 @return true if add is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/FriendList/#members">FriendList#members - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="removeFriendlistMember" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="friendlistId" type="java.lang.String"/>
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Removes the user from a friend list.
 @param friendlistId the ID of a friend list
 @param userId the ID of a target user
 @return true if remove is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/FriendList/#members">FriendList#members - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getFriendRequests" return="facebook4j.ResponseList&lt;facebook4j.FriendRequest&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current user's incoming friend requests.
 @return friend requests
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#friendrequests">User#friendrequests - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getFriendRequests" return="facebook4j.ResponseList&lt;facebook4j.FriendRequest&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current user's incoming friend requests.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return friend requests
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#friendrequests">User#friendrequests - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getFriendRequests" return="facebook4j.ResponseList&lt;facebook4j.FriendRequest&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the user's incoming friend requests.
 @param userId the ID of a user
 @return friend requests
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#friendrequests">User#friendrequests - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getFriendRequests" return="facebook4j.ResponseList&lt;facebook4j.FriendRequest&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the user's incoming friend requests.
 @param userId the ID of a user
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return friend requests
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#friendrequests">User#friendrequests - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getMutualFriends" return="facebook4j.ResponseList&lt;facebook4j.Friend&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="friendUserId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the mutual friends between the current user and friend.
 @param friendUserId the ID of a friend
 @return mutual friends
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#mutualfriends">User#mutualfriends - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getMutualFriends" return="facebook4j.ResponseList&lt;facebook4j.Friend&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="friendUserId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the mutual friends between the current user and friend.
 @param friendUserId the ID of a friend
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return mutual friends
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#mutualfriends">User#mutualfriends - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getMutualFriends" return="facebook4j.ResponseList&lt;facebook4j.Friend&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId1" type="java.lang.String"/>
      <param name="userId2" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the mutual friends between two users.
 @param userId1 the ID of a user
 @param userId2 the ID of a user
 @return mutual friends
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#mutualfriends">User#mutualfriends - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getMutualFriends" return="facebook4j.ResponseList&lt;facebook4j.Friend&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId1" type="java.lang.String"/>
      <param name="userId2" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the mutual friends between two users.
 @param userId1 the ID of a user
 @param userId2 the ID of a user
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return mutual friends
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#mutualfriends">User#mutualfriends - Facebook Developers</a>]]>
      </doc>
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.api.FriendMethods -->
  <!-- start interface facebook4j.api.GameMethods -->
  <interface name="GameMethods"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getAchievements" return="facebook4j.ResponseList&lt;facebook4j.Achievement&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the achievements for the current user.
 @return achievements
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#achievements">User#achievements - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getAchievements" return="facebook4j.ResponseList&lt;facebook4j.Achievement&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the achievements for the current user.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return achievements
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#achievements">User#achievements - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getAchievements" return="facebook4j.ResponseList&lt;facebook4j.Achievement&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the achievements for a user.
 @param userId the ID of a user
 @return achievements
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#achievements">User#achievements - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getAchievements" return="facebook4j.ResponseList&lt;facebook4j.Achievement&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the achievements for a user.
 @param userId the ID of a user
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return achievements
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#achievements">User#achievements - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="postAchievement" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="achievementURL" type="java.net.URL"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Posts the achievement for the current user.
 @param achievementURL the unique URL of the achievement which the current user achieved
 @return achievement (instance) ID for the current user
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#achievements">User#achievements - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="postAchievement" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="achievementURL" type="java.net.URL"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Posts the achievement for a user.
 @param userId the ID of a user
 @param achievementURL the unique URL of the achievement which the user achieved
 @return achievement (instance) ID for the user
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#achievements">User#achievements - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="deleteAchievement" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="achievementURL" type="java.net.URL"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Deletes the achievement for the current user.
 @param achievementURL the unique URL of the achievement to delete
 @return true if delete is succressful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#achievements">User#achievements - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="deleteAchievement" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="achievementURL" type="java.net.URL"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Deletes the achievement for a user.
 @param userId the ID of a user
 @param achievementURL the unique URL of the achievement to delete
 @return true if delete is succressful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#achievements">User#achievements - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getScores" return="facebook4j.ResponseList&lt;facebook4j.Score&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current scores for a user in games.
 @return scores
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#scores">User#scores - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getScores" return="facebook4j.ResponseList&lt;facebook4j.Score&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current scores for a user in games.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return scores
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#scores">User#scores - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getScores" return="facebook4j.ResponseList&lt;facebook4j.Score&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current scores for the current user in games.
 @param userId the ID of the user
 @return scores
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#scores">User#scores - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getScores" return="facebook4j.ResponseList&lt;facebook4j.Score&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current scores for the current user in games.
 @param userId the ID of the user
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return scores
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#scores">User#scores - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="postScore" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="scoreValue" type="int"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Posts the score for the current user.
 @param scoreValue numeric score with value
 @return true if post is succressful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#scores">User#scores - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="postScore" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="scoreValue" type="int"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Posts the score for a user.
 @param userId the ID of a user
 @param scoreValue numeric score with value
 @return true if post is succressful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#scores">User#scores - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="deleteScore" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Deletes the current score for the current user.
 @return true if delete is succressful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#scores">User#scores - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="deleteScore" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Deletes the current score for a user.
 @param userId the ID of a user
 @return true if delete is succressful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#scores">User#scores - Facebook Developers</a>]]>
      </doc>
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.api.GameMethods -->
  <!-- start interface facebook4j.api.GroupMethods -->
  <interface name="GroupMethods"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getGroups" return="facebook4j.ResponseList&lt;facebook4j.Group&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the Groups that the current user belongs to.
 @return groups
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#groups">User#groups - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getGroups" return="facebook4j.ResponseList&lt;facebook4j.Group&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the Groups that the current user belongs to.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return groups
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#groups">User#groups - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getGroups" return="facebook4j.ResponseList&lt;facebook4j.Group&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the Groups that a user belongs to.
 @param userId the ID of a user
 @return groups
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#groups">User#groups - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getGroups" return="facebook4j.ResponseList&lt;facebook4j.Group&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the Groups that a user belongs to.
 @param userId the ID of a user
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return groups
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#groups">User#groups - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getGroup" return="facebook4j.Group"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="groupId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a single group.
 @param groupId the ID of the group
 @return group
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/group/">Group - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getGroup" return="facebook4j.Group"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="groupId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a single group.
 @param groupId the ID of the group
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return group
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/group/">Group - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getGroupFeed" return="facebook4j.ResponseList&lt;facebook4j.Post&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="groupId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the group's wall.
 @param groupId the ID of the group
 @return group's feed
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/group/#feed">Group#feed - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getGroupFeed" return="facebook4j.ResponseList&lt;facebook4j.Post&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="groupId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the group's wall.
 @param groupId the ID of the group
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return group's feed
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/group/#feed">Group#feed - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="postGroupFeed" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="groupId" type="java.lang.String"/>
      <param name="postUpdate" type="facebook4j.PostUpdate"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Creates the post on a group's wall.
 @param groupId the ID of a group
 @param postUpdate the post to be created
 @return The new post ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/group/#posts">Group#posts - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="postGroupLink" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="groupId" type="java.lang.String"/>
      <param name="link" type="java.net.URL"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Posts the link on a group's wall.
 @param groupId the ID of a group
 @param link link URL
 @return The new link ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/group/#links">Group#links - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="postGroupLink" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="groupId" type="java.lang.String"/>
      <param name="link" type="java.net.URL"/>
      <param name="message" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Posts the link on a group's wall.
 @param groupId the ID of a group
 @param link link URL
 @param message link message
 @return The new link ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/group/#links">Group#links - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="postGroupStatusMessage" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="groupId" type="java.lang.String"/>
      <param name="message" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Posts the status message on a group's wall.
 @param groupId the ID of a group
 @param message status message content
 @return The new status message ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/group/#statuses">Group#statuses - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getGroupMembers" return="facebook4j.ResponseList&lt;facebook4j.GroupMember&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="groupId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns all of the users who are members of a group.
 @param groupId the ID of a group
 @return all of the users who are members of the group
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/group/">Group - Facebook Developers</a> - Connections - members]]>
      </doc>
    </method>
    <method name="getGroupMembers" return="facebook4j.ResponseList&lt;facebook4j.GroupMember&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="groupId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns all of the users who are members of a group.
 @param groupId the ID of a group
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return all of the users who are members of the group
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/group/">Group - Facebook Developers</a> - Connections - members]]>
      </doc>
    </method>
    <method name="getGroupPictureURL" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="groupId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns url of a group's profile picture.
 @param groupId the ID of a group
 @return url
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/group/">Group - Facebook Developers</a> - Connections - picture]]>
      </doc>
    </method>
    <method name="getGroupDocs" return="facebook4j.ResponseList&lt;facebook4j.GroupDoc&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="groupId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the docs in a group.
 @param groupId the ID of a group
 @return docs
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/group/">Group - Facebook Developers</a> - Connections - docs]]>
      </doc>
    </method>
    <method name="getGroupDocs" return="facebook4j.ResponseList&lt;facebook4j.GroupDoc&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="groupId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the docs in a group.
 @param groupId the ID of a group
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return docs
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/group/">Group - Facebook Developers</a> - Connections - docs]]>
      </doc>
    </method>
  </interface>
  <!-- end interface facebook4j.api.GroupMethods -->
  <!-- start interface facebook4j.api.InsightMethods -->
  <interface name="InsightMethods"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getInsights" return="facebook4j.ResponseList&lt;facebook4j.Insight&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="objectId" type="java.lang.String"/>
      <param name="metric" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="getInsights" return="facebook4j.ResponseList&lt;facebook4j.Insight&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="objectId" type="java.lang.String"/>
      <param name="metric" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.api.InsightMethods -->
  <!-- start interface facebook4j.api.LikeMethods -->
  <interface name="LikeMethods"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getUserLikes" return="facebook4j.ResponseList&lt;facebook4j.Like&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns all the pages the current user has liked.
 @return likes
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#likes">User#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getUserLikes" return="facebook4j.ResponseList&lt;facebook4j.Like&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns all the pages the current user has liked.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return likes
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#likes">User#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getUserLikes" return="facebook4j.ResponseList&lt;facebook4j.Like&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns all the pages a user has liked.
 @param userId the ID of a user
 @return likes
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#likes">User#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getUserLikes" return="facebook4j.ResponseList&lt;facebook4j.Like&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns all the pages a user has liked.
 @param userId the ID of a user
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return likes
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#likes">User#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.api.LikeMethods -->
  <!-- start interface facebook4j.api.LinkMethods -->
  <interface name="LinkMethods"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getLinks" return="facebook4j.ResponseList&lt;facebook4j.Link&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current user's/page's/event's posted links.
 @return links
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#links">User#links - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getLinks" return="facebook4j.ResponseList&lt;facebook4j.Link&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current user's/page's/event's posted links.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return links
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#links">User#links - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getLinks" return="facebook4j.ResponseList&lt;facebook4j.Link&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a user's/page's/event's posted links.
 @param id the ID of a user/page/event
 @return links
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#links">User#links - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getLinks" return="facebook4j.ResponseList&lt;facebook4j.Link&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a user's/page's/event's posted links.
 @param id the ID of a user/page/event
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return links
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#links">User#links - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getLink" return="facebook4j.Link"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="linkId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the link shared on a user's wall.
 @param linkId the ID of the link
 @return link
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/link/">Link - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getLink" return="facebook4j.Link"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="linkId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the link shared on a user's wall.
 @param linkId the ID of the link
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return link
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/link/">Link - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getLinkComments" return="facebook4j.ResponseList&lt;facebook4j.Comment&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="linkId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns all of the comments on a link.
 @param linkId the ID of a link
 @return comments
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/link/#comments">Link#comments - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getLinkComments" return="facebook4j.ResponseList&lt;facebook4j.Comment&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="linkId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns all of the comments on a link.
 @param linkId the ID of a link
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return comments
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/link/#comments">Link#comments - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="commentLink" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="linkId" type="java.lang.String"/>
      <param name="message" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Comments on the link.
 @param linkId the ID of the link
 @param message comment text
 @return The new comment ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/link/#comments">Link#comments - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getLinkLikes" return="facebook4j.ResponseList&lt;facebook4j.Like&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="linkId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the likes on a link.
 @param linkId the ID of a link
 @return likes
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/link/#likes">Link#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getLinkLikes" return="facebook4j.ResponseList&lt;facebook4j.Like&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="linkId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the likes on a link.
 @param linkId the ID of a link
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a> see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return likes
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/link/#likes">Link#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="likeLink" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="linkId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Likes the link.
 @param linkId the ID of the link
 @return true if like is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/link/#likes">Link#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="unlikeLink" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="linkId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Unlikes the link.
 @param linkId the ID of the link
 @return true if unlike is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/link/#likes">Link#likes - Facebook Developers</a>]]>
      </doc>
    </method>
  </interface>
  <!-- end interface facebook4j.api.LinkMethods -->
  <!-- start interface facebook4j.api.LocationMethods -->
  <interface name="LocationMethods"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getLocations" return="facebook4j.ResponseList&lt;facebook4j.Location&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the posts with location.
 @return locations
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - locations]]>
      </doc>
    </method>
    <method name="getLocations" return="facebook4j.ResponseList&lt;facebook4j.Location&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the posts with location.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return locations
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - locations]]>
      </doc>
    </method>
    <method name="getLocations" return="facebook4j.ResponseList&lt;facebook4j.Location&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the posts with location.
 @param userId the ID of a user
 @return locations
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - locations]]>
      </doc>
    </method>
    <method name="getLocations" return="facebook4j.ResponseList&lt;facebook4j.Location&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the posts with location.
 @param userId the ID of a user
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return locations
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - locations]]>
      </doc>
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.api.LocationMethods -->
  <!-- start interface facebook4j.api.MessageMethods -->
  <interface name="MessageMethods"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getInbox" return="facebook4j.InboxResponseList&lt;facebook4j.Message&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the messages in the current user's inbox.
 @return messages
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - inbox]]>
      </doc>
    </method>
    <method name="getInbox" return="facebook4j.InboxResponseList&lt;facebook4j.Message&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the messages in the current user's inbox.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return messages
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - inbox]]>
      </doc>
    </method>
    <method name="getInbox" return="facebook4j.InboxResponseList&lt;facebook4j.Message&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the messages in a user's inbox.
 @param userId the ID of a user
 @return messages
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - inbox]]>
      </doc>
    </method>
    <method name="getInbox" return="facebook4j.InboxResponseList&lt;facebook4j.Message&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the messages in a user's inbox.
 @param userId the ID of a user
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return messages
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - inbox]]>
      </doc>
    </method>
    <method name="getOutbox" return="facebook4j.ResponseList&lt;facebook4j.Message&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the messages in the current user's outbox.
 @return messages
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - outbox]]>
      </doc>
    </method>
    <method name="getOutbox" return="facebook4j.ResponseList&lt;facebook4j.Message&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the messages in the current user's outbox.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return messages
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - outbox]]>
      </doc>
    </method>
    <method name="getOutbox" return="facebook4j.ResponseList&lt;facebook4j.Message&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the messages in a user's outbox.
 @param userId the ID of a user
 @return messages
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - outbox]]>
      </doc>
    </method>
    <method name="getOutbox" return="facebook4j.ResponseList&lt;facebook4j.Message&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the messages in a user's outbox.
 @param userId the ID of a user
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return messages
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - outbox]]>
      </doc>
    </method>
    <method name="getUpdates" return="facebook4j.ResponseList&lt;facebook4j.Message&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the updates in the current user's inbox.
 @return messages
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - updates]]>
      </doc>
    </method>
    <method name="getUpdates" return="facebook4j.ResponseList&lt;facebook4j.Message&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the updates in the current user's inbox.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return messages
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - updates]]>
      </doc>
    </method>
    <method name="getUpdates" return="facebook4j.ResponseList&lt;facebook4j.Message&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the updates in a user's inbox.
 @param userId the ID of a user
 @return messages
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - updates]]>
      </doc>
    </method>
    <method name="getUpdates" return="facebook4j.ResponseList&lt;facebook4j.Message&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the updates in a user's inbox.
 @param userId the ID of a user
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return messages
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - updates]]>
      </doc>
    </method>
    <method name="getMessage" return="facebook4j.Message"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="messageId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a single message.
 @param messageId the ID of the message
 @return message
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/message/">Message - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getMessage" return="facebook4j.Message"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="messageId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a single message.
 @param messageId the ID of the message
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return message
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/message/">Message - Facebook Developers</a>]]>
      </doc>
    </method>
  </interface>
  <!-- end interface facebook4j.api.MessageMethods -->
  <!-- start interface facebook4j.api.NoteMethods -->
  <interface name="NoteMethods"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getNotes" return="facebook4j.ResponseList&lt;facebook4j.Note&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current user's/page's notes.
 @return notes
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#notes">User#notes - Facebook Developers</a>
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#notes">Page#notes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getNotes" return="facebook4j.ResponseList&lt;facebook4j.Note&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current user's/page's notes.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return notes
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#notes">User#notes - Facebook Developers</a>
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#notes">Page#notes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getNotes" return="facebook4j.ResponseList&lt;facebook4j.Note&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a user's/page's notes.
 @param id the ID of a user/page
 @return notes
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#notes">User#notes - Facebook Developers</a>
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#notes">Page#notes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getNotes" return="facebook4j.ResponseList&lt;facebook4j.Note&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a user's/page's notes.
 @param id the ID of a user/page
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return notes
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#notes">User#notes - Facebook Developers</a>
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#notes">Page#notes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="createNote" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="subject" type="java.lang.String"/>
      <param name="message" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Creates the current user's/page's note.
 @param subject the subject of the note
 @param message note content
 @return The new note ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#notes">User#notes - Facebook Developers</a>
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#notes">Page#notes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="createNote" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="java.lang.String"/>
      <param name="subject" type="java.lang.String"/>
      <param name="message" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Creates the note on behalf of a user/page.
 @param id the ID of a user/page
 @param subject the subject of the note
 @param message note content
 @return The new note ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#notes">User#notes - Facebook Developers</a>
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#notes">Page#notes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getNote" return="facebook4j.Note"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="noteId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a note.
 @param noteId the ID of the note
 @return note
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/note/">Note - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getNote" return="facebook4j.Note"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="noteId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a note.
 @param noteId the ID of the note
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return note
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/note/">Note - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getNoteComments" return="facebook4j.ResponseList&lt;facebook4j.Comment&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="noteId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns all of the comments on a note.
 @param noteId the ID of a note
 @return comments
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/note/#comments">Note#comments - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getNoteComments" return="facebook4j.ResponseList&lt;facebook4j.Comment&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="noteId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns all of the comments on a note.
 @param noteId the ID of a note
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return comments
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/note/#comments">Note#comments - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="commentNote" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="noteId" type="java.lang.String"/>
      <param name="message" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Comments on the note.
 @param noteId the ID of the note
 @param message comment text
 @return The new comment ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/note/#comments">Note#comments - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getNoteLikes" return="facebook4j.ResponseList&lt;facebook4j.Like&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="noteId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the likes made on a note.
 @param noteId the ID of a note
 @return likes
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/note/#likes">Note#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getNoteLikes" return="facebook4j.ResponseList&lt;facebook4j.Like&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="noteId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the likes made on a note.
 @param noteId the ID of a note
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a> see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return likes
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/note/#likes">Note#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="likeNote" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="noteId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Likes the note.
 @param noteId the ID of the note
 @return true if like is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/note/#likes">Note#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="unlikeNote" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="noteId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Unlikes the note.
 @param noteId the ID of the note
 @return true if unlike is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/note/#likes">Note#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.api.NoteMethods -->
  <!-- start interface facebook4j.api.NotificationMethods -->
  <interface name="NotificationMethods"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getNotifications" return="facebook4j.ResponseList&lt;facebook4j.Notification&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the notifications for the current user.
 @return notifications
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#notifications">User#notifications - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getNotifications" return="facebook4j.ResponseList&lt;facebook4j.Notification&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="includeRead" type="boolean"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the notifications for the current user.
 @param includeRead enables you to see notifications that the user has already read in addition to the ones which are unread
 @return notifications
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#notifications">User#notifications - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getNotifications" return="facebook4j.ResponseList&lt;facebook4j.Notification&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the notifications for the current user.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return notifications
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#notifications">User#notifications - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getNotifications" return="facebook4j.ResponseList&lt;facebook4j.Notification&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <param name="includeRead" type="boolean"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the notifications for the current user.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @param includeRead enables you to see notifications that the user has already read in addition to the ones which are unread
 @return notifications
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#notifications">User#notifications - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getNotifications" return="facebook4j.ResponseList&lt;facebook4j.Notification&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the notifications for a user.
 @param userId the ID of a user
 @return notifications
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#notifications">User#notifications - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getNotifications" return="facebook4j.ResponseList&lt;facebook4j.Notification&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="includeRead" type="boolean"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the notifications for a user.
 @param userId the ID of a user
 @param includeRead enables you to see notifications that the user has already read in addition to the ones which are unread
 @return notifications
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#notifications">User#notifications - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getNotifications" return="facebook4j.ResponseList&lt;facebook4j.Notification&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the notifications for a user.
 @param userId the ID of a user
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return notifications
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#notifications">User#notifications - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getNotifications" return="facebook4j.ResponseList&lt;facebook4j.Notification&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <param name="includeRead" type="boolean"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the notifications for a user.
 @param userId the ID of a user
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @param includeRead enables you to see notifications that the user has already read in addition to the ones which are unread
 @return notifications
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#notifications">User#notifications - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="markNotificationAsRead" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="notificationId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Marks the notification as read.
 @param notificationId the ID of the notification
 @return true if mark as read is succressful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#notifications">User#notifications - Facebook Developers</a>]]>
      </doc>
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.api.NotificationMethods -->
  <!-- start interface facebook4j.api.PageMethods -->
  <interface name="PageMethods"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getPage" return="facebook4j.Page"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current page.
 @return page
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/">Page - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getPage" return="facebook4j.Page"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current page.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return page
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/">Page - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getPage" return="facebook4j.Page"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the page.
 @param pageId the ID of the page
 @return page
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/">Page - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getPage" return="facebook4j.Page"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the page.
 @param pageId the ID of the page
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return page
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/">Page - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getPagePictureURL" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the url of a page's profile picture.
 This method requires page access_token.
 @return url
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/">Page - Facebook Developers</a> - Connections - picture]]>
      </doc>
    </method>
    <method name="getPagePictureURL" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="size" type="facebook4j.PictureSize"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the url of a page's profile picture.
 This method requires page access_token.
 @param size {@link facebook4j.PictureSize picture size}
 @return url
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/">Page - Facebook Developers</a> - Connections - picture]]>
      </doc>
    </method>
    <method name="getPagePictureURL" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the url of a page's profile picture.
 @param pageId the ID of a page
 @return url
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/">Page - Facebook Developers</a> - Connections - picture]]>
      </doc>
    </method>
    <method name="getPagePictureURL" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <param name="size" type="facebook4j.PictureSize"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the url of a page's profile picture.
 @param pageId the ID of a page
 @param size {@link facebook4j.PictureSize picture size}
 @return url
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/">Page - Facebook Developers</a> - Connections - picture]]>
      </doc>
    </method>
    <method name="getPromotablePosts" return="facebook4j.ResponseList&lt;facebook4j.Post&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current Page's own posts, including unpublished and scheduled posts.
 This method requires page access_token.
 @return posts
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/">Page - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getPromotablePosts" return="facebook4j.ResponseList&lt;facebook4j.Post&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current Page's own posts, including unpublished and scheduled posts.
 This method requires page access_token.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return posts
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/">Page - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getPromotablePosts" return="facebook4j.ResponseList&lt;facebook4j.Post&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the Page's own posts, including unpublished and scheduled posts.
 @param pageId the ID of the page
 @return posts
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/">Page - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getPromotablePosts" return="facebook4j.ResponseList&lt;facebook4j.Post&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the Page's own posts, including unpublished and scheduled posts.
 @param pageId the ID of the page
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return posts
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/">Page - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="updatePageBasicAttributes" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageUpdate" type="facebook4j.PageUpdate"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Updates a Page's basic attributes.
 @param pageUpdate the page to be updated
 @return true if update is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#attributes">Page#attributes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="updatePageBasicAttributes" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <param name="pageUpdate" type="facebook4j.PageUpdate"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Updates a Page's basic attributes.
 @param pageId the ID of the page
 @param pageUpdate the page to be updated
 @return true if update is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#attributes">Page#attributes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="updatePageProfilePhoto" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="picture" type="java.net.URL"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Updates the profile photo for the current Page.
 @param picture A URL to the photo
 @return true if update is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#attributes">Page#attributes - Facebook Developers</a> - Setting a Page Profile Photo]]>
      </doc>
    </method>
    <method name="updatePageProfilePhoto" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <param name="picture" type="java.net.URL"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Updates the profile photo for a Page.
 @param pageId the ID of the page
 @param picture A URL to the photo
 @return true if update is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#attributes">Page#attributes - Facebook Developers</a> - Setting a Page Profile Photo]]>
      </doc>
    </method>
    <method name="updatePageProfilePhoto" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="source" type="facebook4j.Media"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Updates the profile photo for the current Page.
 @param source Photo content
 @return true if update is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#attributes">Page#attributes - Facebook Developers</a> - Setting a Page Profile Photo]]>
      </doc>
    </method>
    <method name="updatePageProfilePhoto" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <param name="source" type="facebook4j.Media"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Updates the profile photo for a Page.
 @param pageId the ID of the page
 @param source Photo content
 @return true if update is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#attributes">Page#attributes - Facebook Developers</a> - Setting a Page Profile Photo]]>
      </doc>
    </method>
    <method name="updatePageCoverPhoto" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageCoverUpdate" type="facebook4j.PageCoverUpdate"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Updates the profile photo for the current page.
 @param pageCoverUpdate the cover photo for the page to be updated
 @return true if update is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#attributes">Page#attributes - Facebook Developers</a> - Setting a Cover Photo]]>
      </doc>
    </method>
    <method name="updatePageCoverPhoto" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <param name="pageCoverUpdate" type="facebook4j.PageCoverUpdate"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Updates the profile photo for the current page.
 @param pageId the ID of the page
 @param pageCoverUpdate the cover photo for the page to be updated
 @return true if update is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#attributes">Page#attributes - Facebook Developers</a> - Setting a Cover Photo]]>
      </doc>
    </method>
    <method name="displayPagePost" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="postId" type="java.lang.String"/>
      <param name="isHidden" type="boolean"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Hides/Shows the page's post that is published by a non-admin user.
 @param postId the ID of the post in the page
 @param isHidden whether a post is hidden
 @return true if hide/show is successful
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#attributes">Page#attributes - Facebook Developers</a> - Hiding a Page Post]]>
      </doc>
    </method>
    <method name="getPageSettings" return="facebook4j.ResponseList&lt;facebook4j.PageSetting&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the settings for the current page.
 @return settings
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/">Page - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getPageSettings" return="facebook4j.ResponseList&lt;facebook4j.PageSetting&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the settings for the page.
 @param pageId the ID of the page
 @return settings
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/">Page - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="updatePageSetting" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageSettingUpdate" type="facebook4j.PageSettingUpdate"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Updates the setting for the current page.
 @param pageSettingUpdate setting
 @return true if the setting was successfully set or changed
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#settings">Page#settings - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="updatePageSetting" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <param name="pageSettingUpdate" type="facebook4j.PageSettingUpdate"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Updates the setting for the page.
 @param pageId the ID of the page
 @param pageSettingUpdate setting
 @return true if the setting was successfully set or changed
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#settings">Page#settings - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="postBackdatingFeed" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="backdatingPostUpdate" type="facebook4j.BackdatingPostUpdate"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Creates the post that's back-dated to the current page's wall.
 @param backdatingPostUpdate the post to be created
 @return The new post ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#backdating">Page#backdating - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="postBackdatingFeed" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <param name="backdatingPostUpdate" type="facebook4j.BackdatingPostUpdate"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Creates the post that's back-dated to a page's wall.
 @param pageId the ID of a page
 @param backdatingPostUpdate the post to be created
 @return The new post ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#backdating">Page#backdating - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="postPagePhoto" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pagePhotoUpdate" type="facebook4j.PagePhotoUpdate"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Posts a photo to the current page's wall.
 @param pagePhotoUpdate photo content, targeting and more
 @return The new photo ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#photos">Page#photos - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="postPagePhoto" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <param name="pagePhotoUpdate" type="facebook4j.PagePhotoUpdate"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Posts a photo to a page's wall.
 @param pageId the ID of a page
 @param pagePhotoUpdate photo content, targeting and more
 @return The new photo ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#photos">Page#photos - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getGlobalBrandChildren" return="facebook4j.ResponseList&lt;facebook4j.Page&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns all children pages of a specific page.
 @param pageId the ID of the page
 @return pages
 @throws FacebookException]]>
      </doc>
    </method>
    <method name="getGlobalBrandChildren" return="facebook4j.ResponseList&lt;facebook4j.Page&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns all children pages of a specific page.
 @param pageId the ID of the page
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return pages
 @throws FacebookException]]>
      </doc>
    </method>
    <method name="getPageInsights" return="facebook4j.ResponseList&lt;facebook4j.Insight&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the page's insights data.
 @param pageId the ID of the page
 @return insights
 @throws FacebookException]]>
      </doc>
    </method>
    <method name="getPageInsights" return="facebook4j.ResponseList&lt;facebook4j.Insight&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the page's insights data.
 @param pageId the ID of the page
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return pages
 @throws FacebookException]]>
      </doc>
    </method>
    <method name="getPageTagged" return="facebook4j.ResponseList&lt;facebook4j.Tagged&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the photos, videos, and posts in which the Page has been tagged.
 @param pageId the ID of the page
 @return pages
 @throws FacebookException]]>
      </doc>
    </method>
    <method name="getPageTagged" return="facebook4j.ResponseList&lt;facebook4j.Tagged&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the photos, videos, and posts in which the Page has been tagged.
 @param pageId the ID of the page
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return pages
 @throws FacebookException]]>
      </doc>
    </method>
    <method name="getMilestones" return="facebook4j.ResponseList&lt;facebook4j.Milestone&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a list of the Page's milestones.
 Note that this method requires 'page' access_token.
 @return milestones
 @throws FacebookException when Facebook service or network is unavailable]]>
      </doc>
    </method>
    <method name="getMilestones" return="facebook4j.ResponseList&lt;facebook4j.Milestone&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[/**
 Returns a list of the Page's milestones.
 Note that this method requires 'page' access_token.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return milestones
 @throws FacebookException when Facebook service or network is unavailable]]>
      </doc>
    </method>
    <method name="getMilestones" return="facebook4j.ResponseList&lt;facebook4j.Milestone&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a list of the Page's milestones.
 @param pageId the ID of the page
 @return milestones
 @throws FacebookException when Facebook service or network is unavailable]]>
      </doc>
    </method>
    <method name="getMilestones" return="facebook4j.ResponseList&lt;facebook4j.Milestone&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a list of the Page's milestones.
 @param pageId the ID of the page
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return milestones
 @throws FacebookException when Facebook service or network is unavailable]]>
      </doc>
    </method>
    <method name="createMilestone" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="milestoneUpdate" type="facebook4j.MilestoneUpdate"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Creates the milestone for the current page.
 Note that this method requires 'page' access_token.
 @param milestoneUpdate a milestone to be created
 @return The new milestone ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#milestones">Page#milestones - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="createMilestone" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <param name="milestoneUpdate" type="facebook4j.MilestoneUpdate"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Creates the milestone for the page.
 Note that this method requires 'page' access_token.
 @param pageId the ID of the page
 @param milestoneUpdate a milestone to be created
 @return The new milestone ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#milestones">Page#milestones - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="deleteMilestone" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="milestoneId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Deletes the milestone.
 Note that this method requires 'page' access_token.
 @param milestoneId the ID of a milestone
 @return true if delete is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#milestones">Page#milestones - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getPageAdmins" return="facebook4j.ResponseList&lt;facebook4j.Admin&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a list of the Page's Admins.
 Note that this method requires 'page' access_token.
 @return admins
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/">Page - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getPageAdmins" return="facebook4j.ResponseList&lt;facebook4j.Admin&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a list of the Page's Admins.
 Note that this method requires 'page' access_token.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return admins
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/">Page - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getPageAdmins" return="facebook4j.ResponseList&lt;facebook4j.Admin&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a list of the Page's Admins.
 Note that this method requires 'page' access_token.
 @param pageId the ID of the page
 @return admins
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/">Page - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getPageAdmins" return="facebook4j.ResponseList&lt;facebook4j.Admin&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a list of the Page's Admins.
 Note that this method requires 'page' access_token.
 @param pageId the ID of the page
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return admins
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/">Page - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getTabs" return="facebook4j.ResponseList&lt;facebook4j.Tab&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current Page's profile tabs.
 Note that this method requires 'page' access_token.
 @return tabs
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#tabs">Page#tabs - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getTabs" return="facebook4j.ResponseList&lt;facebook4j.Tab&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current Page's profile tabs.
 Note that this method requires 'page' access_token.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return tabs
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#tabs">Page#tabs - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getTabs" return="facebook4j.ResponseList&lt;facebook4j.Tab&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the Page's profile tabs.
 Note that this method requires 'page' access_token.
 @param pageId the ID of the page
 @return tabs
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#tabs">Page#tabs - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getTabs" return="facebook4j.ResponseList&lt;facebook4j.Tab&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the Page's profile tabs.
 Note that this method requires 'page' access_token.
 @param pageId the ID of the page
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return tabs
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#tabs">Page#tabs - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getInstalledTabs" return="facebook4j.ResponseList&lt;facebook4j.Tab&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="appIds" type="java.util.List&lt;java.lang.String&gt;"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current Page's profile tabs if a specific app is installed.
 @param appIds the IDs of app
 @return tabs
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#tabs">Page#tabs - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getInstalledTabs" return="facebook4j.ResponseList&lt;facebook4j.Tab&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="appIds" type="java.util.List&lt;java.lang.String&gt;"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current Page's profile tabs if a specific app is installed.
 @param appIds the IDs of app
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return tabs
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#tabs">Page#tabs - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getInstalledTabs" return="facebook4j.ResponseList&lt;facebook4j.Tab&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <param name="appIds" type="java.util.List&lt;java.lang.String&gt;"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the Page's profile tabs if a specific app is installed.
 @param pageId the ID of the page
 @param appIds the IDs of app
 @return tabs
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#tabs">Page#tabs - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getInstalledTabs" return="facebook4j.ResponseList&lt;facebook4j.Tab&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <param name="appIds" type="java.util.List&lt;java.lang.String&gt;"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the Page's profile tabs if a specific app is installed.
 @param pageId the ID of the page
 @param appIds the IDs of app
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return tabs
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#tabs">Page#tabs - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="installTab" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="appId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Installs a profile_tab at the end of the current list of installed tabs for the current page.
 @param appId the ID of the application for which to install the tab
 @return true if install is successful
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#tabs">Page#tabs - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="installTab" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <param name="appId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Installs a profile_tab at the end of the current list of installed tabs for the current page.
 @param pageId the ID of the page
 @param appId the ID of the application for which to install the tab
 @return true if install is successful
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#tabs">Page#tabs - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="updateTab" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="tabId" type="java.lang.String"/>
      <param name="tabUpdate" type="facebook4j.TabUpdate"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Updates an installed profile_tab for the current page.
 @param tabId the ID of the tab
 @param tabUpdate tab to be updated
 @return true if the update is successful
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#tabs">Page#tabs - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="updateTab" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <param name="tabId" type="java.lang.String"/>
      <param name="tabUpdate" type="facebook4j.TabUpdate"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Updates an installed profile_tab for the page.
 @param pageId the ID of the page
 @param tabId the ID of the tab
 @param tabUpdate tab to be updated
 @return true if the update is successful
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#tabs">Page#tabs - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="deleteTab" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="tabId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Deletes an installed profile_tab where is_permanent is not true for the current page.
 @param tabId the ID of the tab
 @return true if the delete is successful
 @throws FacebookException]]>
      </doc>
    </method>
    <method name="deleteTab" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <param name="tabId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Deletes an installed profile_tab where is_permanent is not true for the page.
 @param pageId the ID of the page
 @param tabId the ID of the tab
 @return true if the delete is successful
 @throws FacebookException]]>
      </doc>
    </method>
    <method name="getBlocked" return="facebook4j.ResponseList&lt;facebook4j.User&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a list of users blocked from the current Page.
 @return users
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#blocked">Page#blocked - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getBlocked" return="facebook4j.ResponseList&lt;facebook4j.User&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a list of users blocked from the current Page.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return users
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#blocked">Page#blocked - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getBlocked" return="facebook4j.ResponseList&lt;facebook4j.User&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a list of users blocked from the Page.
 @param pageId the ID of the page
 @return users
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#blocked">Page#blocked - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getBlocked" return="facebook4j.ResponseList&lt;facebook4j.User&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a list of users blocked from the Page.
 @param pageId the ID of the page
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return users
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#blocked">Page#blocked - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="block" return="java.util.Map&lt;java.lang.String, java.lang.Boolean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userIds" type="java.util.List&lt;java.lang.String&gt;"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Blocks users from posting content to the current page.
 @param userIds user IDs you wish to block
 @return Map where the keys are the user IDs and the values a boolean of whether or not the block was successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#blocked">Page#blocked - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="block" return="java.util.Map&lt;java.lang.String, java.lang.Boolean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <param name="userIds" type="java.util.List&lt;java.lang.String&gt;"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Blocks users from posting content to the current page.
 @param pageId the ID of the page
 @param userIds user IDs you wish to block
 @return Map where the keys are the user IDs and the values a boolean of whether or not the block was successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#blocked">Page#blocked - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="unblock" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Unblocks the blocked user for the current page.
 @param userId the IDs of the user
 @return true if unblock is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#blocked">Page#blocked - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="unblock" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Unblocks the blocked user for the page.
 @param pageId the ID of the page
 @param userId the IDs of the user
 @return true if unblock is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#blocked">Page#blocked - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getOffers" return="facebook4j.ResponseList&lt;facebook4j.Offer&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a list of offers of the current page.
 @return offers
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#offers">Page#offers - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getOffers" return="facebook4j.ResponseList&lt;facebook4j.Offer&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a list of offers of the current page.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return offers
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#offers">Page#offers - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getOffers" return="facebook4j.ResponseList&lt;facebook4j.Offer&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a list of offers of the current page.
 @param pageId the ID of the page
 @return offers
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#offers">Page#offers - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getOffers" return="facebook4j.ResponseList&lt;facebook4j.Offer&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a list of offers of the current page.
 @param pageId the ID of the page
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return offers
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#offers">Page#offers - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="createOffer" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="offerUpdate" type="facebook4j.OfferUpdate"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Creates an offer for the current page.
 @param offerUpdate a createOffer to be created
 @return The new createOffer ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#offers">Page#offers - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="createOffer" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <param name="offerUpdate" type="facebook4j.OfferUpdate"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Creates an offers for the page.
 @param pageId the ID of the page
 @param offerUpdate a createOffer to be created
 @return The new createOffer ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#offers">Page#offers - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="deleteOffer" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="offerId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Deletes the createOffer.
 @param offerId the ID of the createOffer
 @return true if delete is successful
 @throws FacebookException]]>
      </doc>
    </method>
    <method name="getOffer" return="facebook4j.Offer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="offerId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the offer.
 @param offerId the ID of the offer
 @return offer
 @throws FacebookException when Facebook service or network is unavailable]]>
      </doc>
    </method>
    <method name="getLikedPage" return="facebook4j.Page"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a specific page that the current user has liked.
 @param pageId the ID of a page
 @return page
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#likes">User#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getLikedPage" return="facebook4j.Page"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a specific page that the current user has liked.
 @param pageId the ID of a page
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return page
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#likes">User#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getLikedPage" return="facebook4j.Page"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="pageId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a specific page that a user has liked.
 @param userId the ID of a user
 @param pageId the ID of a page
 @return page
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#likes">User#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getLikedPage" return="facebook4j.Page"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="pageId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a specific page that a user has liked.
 @param userId the ID of a user
 @param pageId the ID of a page
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return page
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#likes">User#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com
 @since Facebook4J 2.0.0]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.api.PageMethods -->
  <!-- start interface facebook4j.api.PermissionMethods -->
  <interface name="PermissionMethods"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getPermissions" return="java.util.List&lt;facebook4j.Permission&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the permissions granted the current user to the current application.
 @return permission names
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#permissions">User#permissions - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getPermissions" return="java.util.List&lt;facebook4j.Permission&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the permissions granted a user to the current application.
 @param userId the ID of a user
 @return permission names
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#permissions">User#permissions - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="revokePermission" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="permissionName" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Revokes a specific permission from the current application.
 @param permissionName permission name
 @return true if revoke is succressful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#permissions">User#permissions - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="revokePermission" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="permissionName" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Revokes a specific permission from the current application.
 @param userId the ID of a user
 @param permissionName permission name
 @return true if revoke is succressful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#permissions">User#permissions - Facebook Developers</a>]]>
      </doc>
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.api.PermissionMethods -->
  <!-- start interface facebook4j.api.PhotoMethods -->
  <interface name="PhotoMethods"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getUploadedPhotos" return="facebook4j.ResponseList&lt;facebook4j.Photo&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns All of the updates photos of the current user/page.
 @return photos
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers (Connections - /photos/uploaded)</a>]]>
      </doc>
    </method>
    <method name="getUploadedPhotos" return="facebook4j.ResponseList&lt;facebook4j.Photo&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns All of the updates photos of the current user/page.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return photos
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers (Connections - /photos/uploaded)</a>]]>
      </doc>
    </method>
    <method name="getUploadedPhotos" return="facebook4j.ResponseList&lt;facebook4j.Photo&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns All of the updates photos of the current user/page.
 @param id the ID of a user/page
 @return photos
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers (Connections - /photos/uploaded)</a>]]>
      </doc>
    </method>
    <method name="getUploadedPhotos" return="facebook4j.ResponseList&lt;facebook4j.Photo&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns All of the updates photos of the current user/page.
 @param id the ID of a user/page
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return photos
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers (Connections - /photos/uploaded)</a>]]>
      </doc>
    </method>
    <method name="getPhotos" return="facebook4j.ResponseList&lt;facebook4j.Photo&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the photos the current user/page is tagged in.
 @return photos
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#photos">User#photos - Facebook Developers</a>
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#photos">Page#photos - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getPhotos" return="facebook4j.ResponseList&lt;facebook4j.Photo&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the photos the current user/page is tagged in.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return photos
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#photos">User#photos - Facebook Developers</a>
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#photos">Page#photos - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getPhotos" return="facebook4j.ResponseList&lt;facebook4j.Photo&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the photos a user is tagged in / uploaded to a page / published to an event.
 @param id the ID of a user/page/event
 @return photos
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#photos">User#photos - Facebook Developers</a>
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#photos">Page#photos - Facebook Developers</a>
 @see <a href="https://developers.facebook.com/docs/reference/api/event/#photos">Event#photos - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getPhotos" return="facebook4j.ResponseList&lt;facebook4j.Photo&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the photos a user is tagged in / uploaded to a page / published to an event.
 @param id the ID of a user/page/event
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return photos
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#photos">User#photos - Facebook Developers</a>
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#photos">Page#photos - Facebook Developers</a>
 @see <a href="https://developers.facebook.com/docs/reference/api/event/#photos">Event#photos - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="postPhoto" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="source" type="facebook4j.Media"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Posts a photo to the current user's wall.
 @param source photo content
 @return The new photo ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#photos">User#photos - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="postPhoto" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="photoUpdate" type="facebook4j.PhotoUpdate"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Posts a photo to the current user's wall.
 @param photoUpdate the photo to be created
 @return The new photo ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#photos">User#photos - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="postPhoto" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="source" type="facebook4j.Media"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Posts the photo to a user's wall.
 @param userId the ID of a user
 @param source photo content
 @return The new photo ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#photos">User#photos - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="postPhoto" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="photoUpdate" type="facebook4j.PhotoUpdate"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Posts the photo to a user's wall.
 @param userId the ID of a user
 @param photoUpdate the photo to be created
 @return The new photo ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#photos">User#photos - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="deletePhoto" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="photoId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Deletes the photo.
 @param photoId the ID of the photo
 @return true if delete is successful
 @throws FacebookException when Facebook service or network is unavailable]]>
      </doc>
    </method>
    <method name="getPhoto" return="facebook4j.Photo"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="photoId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a single photo.
 @param photoId the ID of the photo
 @return photo
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/photo/">Photo - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getPhoto" return="facebook4j.Photo"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="photoId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a single photo.
 @param photoId the ID of the photo
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return photo
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/photo/">Photo - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getPhotoComments" return="facebook4j.ResponseList&lt;facebook4j.Comment&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="photoId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the comments made on a photo.
 @param photoId the ID of a photo
 @return comments
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/photo/#comments">Photo#comments - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getPhotoComments" return="facebook4j.ResponseList&lt;facebook4j.Comment&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="photoId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the comments made on a photo.
 @param photoId the ID of a photo
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return comments
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/photo/#comments">Photo#comments - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="commentPhoto" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="photoId" type="java.lang.String"/>
      <param name="message" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Comments on the photo.
 @param photoId the ID of the photo
 @param message comment text
 @return The new comment ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/photo/#comments">Photo#comments - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getPhotoLikes" return="facebook4j.ResponseList&lt;facebook4j.Like&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="photoId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the likes made on a photo.
 @param photoId the ID of a photo
 @return likes
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/photo/#likes">Photo#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getPhotoLikes" return="facebook4j.ResponseList&lt;facebook4j.Like&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="photoId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the likes made on a photo.
 @param photoId the ID of a photo
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a> see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return likes
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/photo/#likes">Photo#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="likePhoto" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="photoId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Likes the photo.
 @param photoId the ID of the photo
 @return true if like is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/photo/#likes">Photo#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="unlikePhoto" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="photoId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Unlikes the photo.
 @param photoId the ID of the photo
 @return true if unlike is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/photo/#likes">Photo#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getPhotoURL" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="photoId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns url of a photo.
 @param photoId the ID of a photo
 @return url
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/photo/">Photo - Facebook Developers</a> - Connections - picture]]>
      </doc>
    </method>
    <method name="getTagsOnPhoto" return="facebook4j.ResponseList&lt;facebook4j.Tag&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="photoId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the Users tagged in a photo.
 @param photoId the ID of a photo
 @return tags
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/photo/">Photo - Facebook Developers</a> - Connections - tags]]>
      </doc>
    </method>
    <method name="getTagsOnPhoto" return="facebook4j.ResponseList&lt;facebook4j.Tag&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="photoId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the Users tagged in a photo.
 @param photoId the ID of a photo
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return tags
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/photo/">Photo - Facebook Developers</a> - Connections - tags]]>
      </doc>
    </method>
    <method name="addTagToPhoto" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="photoId" type="java.lang.String"/>
      <param name="toUserId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Adds the tag to a photo.
 @param photoId the ID of a photo
 @param toUserId the ID of the user to tag
 @return true if add is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/photo/#tags">Photo#tags - Facebook Developers</a> - Connections - tags]]>
      </doc>
    </method>
    <method name="addTagToPhoto" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="photoId" type="java.lang.String"/>
      <param name="toUserIds" type="java.util.List&lt;java.lang.String&gt;"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Adds the tag to a photo.
 @param photoId the ID of a photo
 @param toUserIds the IDs of the users to tag
 @return true if add is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/photo/#tags">Photo#tags - Facebook Developers</a> - Connections - tags]]>
      </doc>
    </method>
    <method name="addTagToPhoto" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="photoId" type="java.lang.String"/>
      <param name="tagUpdate" type="facebook4j.TagUpdate"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Adds the tag to a photo.
 @param photoId the ID of a photo
 @param tagUpdate tag information
 @return true if add is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/photo/#tags">Photo#tags - Facebook Developers</a> - Connections - tags]]>
      </doc>
    </method>
    <method name="updateTagOnPhoto" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="photoId" type="java.lang.String"/>
      <param name="tagUpdate" type="facebook4j.TagUpdate"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Updates the position of the tag on a photo.
 @param photoId the ID of a photo
 @param tagUpdate tag information, supports 'to', 'x', 'y'
 @return true if update is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/photo/#tags">Photo#tags - Facebook Developers</a> - Connections - tags]]>
      </doc>
    </method>
    <method name="deleteTagOnPhoto" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="photoId" type="java.lang.String"/>
      <param name="toUserId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Deletes a tag for a particular user in the photo.
 @param photoId the ID of a photo
 @param toUserId the ID of the user to tag
 @return true if delete is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/photo/#tags">Photo#tags - Facebook Developers</a> - Connections - tags
 @since Facebook4J 2.0.0]]>
      </doc>
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.api.PhotoMethods -->
  <!-- start interface facebook4j.api.PokeMethods -->
  <interface name="PokeMethods"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getPokes" return="facebook4j.ResponseList&lt;facebook4j.Poke&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current user's pokes.
 @return pokes
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - pokes]]>
      </doc>
    </method>
    <method name="getPokes" return="facebook4j.ResponseList&lt;facebook4j.Poke&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current user's pokes.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return pokes
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - pokes]]>
      </doc>
    </method>
    <method name="getPokes" return="facebook4j.ResponseList&lt;facebook4j.Poke&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a user's pokes.
 @param userId the ID of a user
 @return pokes
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - pokes]]>
      </doc>
    </method>
    <method name="getPokes" return="facebook4j.ResponseList&lt;facebook4j.Poke&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a user's pokes.
 @param userId the ID of a user
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return pokes
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - pokes]]>
      </doc>
    </method>
  </interface>
  <!-- end interface facebook4j.api.PokeMethods -->
  <!-- start interface facebook4j.api.PostMethods -->
  <interface name="PostMethods"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getFeed" return="facebook4j.ResponseList&lt;facebook4j.Post&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current user's/page's/event's wall.
 @return posts
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#feed">User#feed - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getFeed" return="facebook4j.ResponseList&lt;facebook4j.Post&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current user's/page's/event's wall.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return posts
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#feed">User#feed - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getFeed" return="facebook4j.ResponseList&lt;facebook4j.Post&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a user's/page's/event's wall.
 @param id the ID of a user/page/event
 @return posts
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#feed">User#feed - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getFeed" return="facebook4j.ResponseList&lt;facebook4j.Post&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a user's/page's/event's wall.
 @param id the ID of a user/page/event
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return posts
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#feed">User#feed - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getHome" return="facebook4j.ResponseList&lt;facebook4j.Post&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current user's news feed.
 @return posts
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#home">User#home - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getHome" return="facebook4j.ResponseList&lt;facebook4j.Post&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current user's news feed.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return posts
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#home">User#home - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getPosts" return="facebook4j.ResponseList&lt;facebook4j.Post&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current user's/page's own posts.
 @return posts
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#posts">User#posts - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getPosts" return="facebook4j.ResponseList&lt;facebook4j.Post&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current user's/page's own posts.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return posts
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#posts">User#posts - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getPosts" return="facebook4j.ResponseList&lt;facebook4j.Post&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the user's/page's own posts.
 @param id the ID of a user/page
 @return posts
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#posts">User#posts - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getPosts" return="facebook4j.ResponseList&lt;facebook4j.Post&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the user's/page's own posts.
 @param id the ID of a user/page
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return posts
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#posts">User#posts - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getStatuses" return="facebook4j.ResponseList&lt;facebook4j.Post&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current user's status updates.
 @return posts
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#statuses">User#statuses - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getStatuses" return="facebook4j.ResponseList&lt;facebook4j.Post&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current user's status updates.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return posts
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#statuses">User#statuses - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getStatuses" return="facebook4j.ResponseList&lt;facebook4j.Post&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the user's/page's status updates.
 @param id the ID of a user/page
 @return posts
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#statuses">User#statuses - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getStatuses" return="facebook4j.ResponseList&lt;facebook4j.Post&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the user's/page's status updates.
 @param id the ID of a user/page
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return posts
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#statuses">User#statuses - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getTagged" return="facebook4j.ResponseList&lt;facebook4j.Post&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the posts the current user is tagged in.
 @return posts
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - tagged]]>
      </doc>
    </method>
    <method name="getTagged" return="facebook4j.ResponseList&lt;facebook4j.Post&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the posts the current user is tagged in.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return posts
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - tagged]]>
      </doc>
    </method>
    <method name="getTagged" return="facebook4j.ResponseList&lt;facebook4j.Post&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the posts a user is tagged in.
 @param userId the ID of a user
 @return posts
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - tagged]]>
      </doc>
    </method>
    <method name="getTagged" return="facebook4j.ResponseList&lt;facebook4j.Post&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the posts the user is tagged in.
 @param userId the ID of a user
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return posts
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - tagged]]>
      </doc>
    </method>
    <method name="getPost" return="facebook4j.Post"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="postId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a single post.
 @param postId the ID of the post
 @return post
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/post/">Post - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getPost" return="facebook4j.Post"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="postId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a single post.
 @param postId the ID of the post
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return post
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/post/">Post - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getPostComments" return="facebook4j.ResponseList&lt;facebook4j.Comment&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="postId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns all of the comments on a post.
 @param postId the ID of a post
 @return comments
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/post/#comments">Post#comments - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getPostComments" return="facebook4j.ResponseList&lt;facebook4j.Comment&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="postId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns all of the comments on a post.
 @param postId the ID of a post
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return comments
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/post/#comments">Post#comments - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="commentPost" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="postId" type="java.lang.String"/>
      <param name="message" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Comments on the post.
 @param postId the ID of the post
 @param message comment text
 @return The new comment ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/post/#comments">Post#comments - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getPostLikes" return="facebook4j.ResponseList&lt;facebook4j.Like&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="postId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the likes on a post.
 @param postId the ID of a post
 @return likes
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/post/#likes">Post#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getPostLikes" return="facebook4j.ResponseList&lt;facebook4j.Like&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="postId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the likes on a post.
 @param postId the ID of a post
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a> see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return likes
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/post/#likes">Post#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="likePost" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="postId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Likes the post.
 @param postId the ID of the post
 @return true if like is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/post/#likes">Post#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="unlikePost" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="postId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Unlikes the post.
 @param postId the ID of the post
 @return true if unlike is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/post/#likes">Post#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="postFeed" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="postUpdate" type="facebook4j.PostUpdate"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Creates the post.
 @param postUpdate the post to be created
 @return The new post ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#posts">User#posts - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="postFeed" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="java.lang.String"/>
      <param name="postUpdate" type="facebook4j.PostUpdate"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Creates the post.
 @param id the ID of a user/page/event
 @param postUpdate the post to be created
 @return The new post ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#posts">User#posts - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="postLink" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="link" type="java.net.URL"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Creates the link.
 @param link link URL
 @return The new link ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#links">User#links - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="postLink" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="link" type="java.net.URL"/>
      <param name="message" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Creates the link.
 @param link link URL
 @param message link message
 @return The new link ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#links">User#links - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="postLink" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="link" type="java.net.URL"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Creates the link.
 @param userId the ID of a user
 @param link link URL
 @return The new link ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#links">User#links - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="postLink" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="link" type="java.net.URL"/>
      <param name="message" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Creates the link.
 @param userId the ID of a user
 @param link link URL
 @param message link message
 @return The new link ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#links">User#links - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="postStatusMessage" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="message" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Creates the status message.
 @param message link message
 @return The new status message ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#statuses">User#statuses - Facebook Developers</a>
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#statuses">Page#statuses - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="postStatusMessage" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="java.lang.String"/>
      <param name="message" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Creates the status message.
 @param id the ID of a user/page
 @param message link message
 @return The new status message ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#statuses">User#statuses - Facebook Developers</a>
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#statuses">Page#statuses - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="deletePost" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="postId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Deletes the post.
 @param postId the ID of the post
 @return true if delete is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/post/">Post - Facebook Developers</a>]]>
      </doc>
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.api.PostMethods -->
  <!-- start interface facebook4j.api.QuestionMethods -->
  <interface name="QuestionMethods"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getQuestions" return="facebook4j.ResponseList&lt;facebook4j.Question&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current user's/page's questions.
 @return questions
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#questions">User#questions - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getQuestions" return="facebook4j.ResponseList&lt;facebook4j.Question&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current user's/page's questions.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return questions
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#questions">User#questions - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getQuestions" return="facebook4j.ResponseList&lt;facebook4j.Question&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a user's/page's questions.
 @param id the ID of a user/page
 @return questions
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#questions">User#questions - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getQuestions" return="facebook4j.ResponseList&lt;facebook4j.Question&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a user's/page's questions.
 @param id the ID of a user/page
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return questions
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#questions">User#questions - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="createQuestion" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="questionUpdate" type="facebook4j.QuestionUpdate"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Creates a current page's question.
 @param questionUpdate the question to be created
 @return The new question ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#questions">User#questions - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="createQuestion" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="java.lang.String"/>
      <param name="questionUpdate" type="facebook4j.QuestionUpdate"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Creates the question.
 @param id the ID of a page
 @param questionUpdate the question to be created
 @return The new question ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#questions">User#questions - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getQuestion" return="facebook4j.Question"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="questionId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a single question.
 @param questionId the ID of the question
 @return question
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/question/">Question - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getQuestion" return="facebook4j.Question"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="questionId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a single question.
 @param questionId the ID of the question
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return question
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/question/">Question - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="deleteQuestion" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="questionId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Deletes the question.
 @param questionId the ID of the question
 @return true if delete is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#questions">User#questions - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getQuestionOptions" return="facebook4j.ResponseList&lt;facebook4j.Question.Option&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="questionId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the options available as answers to the question.
 @param questionId the ID of the question
 @return the options available as answers to the question
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/question/#options">Question#options - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getQuestionOptions" return="facebook4j.ResponseList&lt;facebook4j.Question.Option&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="questionId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the options available as answers to the question.
 @param questionId the ID of the question
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return the options available as answers to the question
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/question/#options">Question#options - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="addQuestionOption" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="questionId" type="java.lang.String"/>
      <param name="optionDescription" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Adds the option to a question.
 @param questionId the ID of the question
 @param optionDescription description
 @return option ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/question/#options">Question#options - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getQuestionOptionVotes" return="facebook4j.ResponseList&lt;facebook4j.QuestionVotes&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="questionId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the votes a particular option to a question has received.
 @param questionId the ID of the question
 @return option of users who have voted for this specific option
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/question_option/">QuestionOption - Facebook Developers</a>]]>
      </doc>
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.api.QuestionMethods -->
  <!-- start interface facebook4j.api.SearchMethods -->
  <interface name="SearchMethods"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="searchPosts" return="facebook4j.ResponseList&lt;facebook4j.Post&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="query" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Searches public posts.
 @param query the search condition
 @return posts
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/#searching">Graph API#searching - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="searchPosts" return="facebook4j.ResponseList&lt;facebook4j.Post&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="query" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Searches public posts.
 @param query the search condition
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return posts
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/#searching">Graph API#searching - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="searchUsers" return="facebook4j.ResponseList&lt;facebook4j.User&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="query" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Searches users.
 @param query the search condition
 @return users
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/#searching">Graph API#searching - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="searchUsers" return="facebook4j.ResponseList&lt;facebook4j.User&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="query" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Searches users.
 @param query the search condition
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return users
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/#searching">Graph API#searching - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="searchEvents" return="facebook4j.ResponseList&lt;facebook4j.Event&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="query" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Searches events.
 @param query the search condition
 @return events
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/#searching">Graph API#searching - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="searchEvents" return="facebook4j.ResponseList&lt;facebook4j.Event&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="query" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Searches events.
 @param query the search condition
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return events
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/#searching">Graph API#searching - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="searchGroups" return="facebook4j.ResponseList&lt;facebook4j.Group&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="query" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Searches groups.
 @param query the search condition
 @return groups
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/#searching">Graph API#searching - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="searchGroups" return="facebook4j.ResponseList&lt;facebook4j.Group&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="query" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Searches groups.
 @param query the search condition
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return groups
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/#searching">Graph API#searching - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="searchPlaces" return="facebook4j.ResponseList&lt;facebook4j.Place&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="query" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Searches places.
 @param query the search condition
 @return places
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/#searching">Graph API#searching - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="searchPlaces" return="facebook4j.ResponseList&lt;facebook4j.Place&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="query" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Searches places.
 @param query the search condition
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return places
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/#searching">Graph API#searching - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="searchPlaces" return="facebook4j.ResponseList&lt;facebook4j.Place&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="query" type="java.lang.String"/>
      <param name="center" type="facebook4j.GeoLocation"/>
      <param name="distance" type="int"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Searches places.
 @param query the search condition
 @param center latitude and longitude
 @param distance distance
 @return places
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/#searching">Graph API#searching - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="searchPlaces" return="facebook4j.ResponseList&lt;facebook4j.Place&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="query" type="java.lang.String"/>
      <param name="center" type="facebook4j.GeoLocation"/>
      <param name="distance" type="int"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Searches places. narrows the search to a specific location and distance.
 @param query the search condition
 @param center latitude and longitude
 @param distance distance
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return places
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/#searching">Graph API#searching - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="searchCheckins" return="facebook4j.ResponseList&lt;facebook4j.Checkin&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns latest checkins.
 @return checkins
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/#searching">Graph API#searching - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="searchCheckins" return="facebook4j.ResponseList&lt;facebook4j.Checkin&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns latest checkins.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return checkins
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/#searching">Graph API#searching - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="searchLocations" return="facebook4j.ResponseList&lt;facebook4j.Location&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="center" type="facebook4j.GeoLocation"/>
      <param name="distance" type="int"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns locations near a geographical location.
 @param center latitude and longitude
 @param distance distance
 @return locations
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/#searching">Graph API#searching - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="searchLocations" return="facebook4j.ResponseList&lt;facebook4j.Location&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="center" type="facebook4j.GeoLocation"/>
      <param name="distance" type="int"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns locations near a geographical location.
 @param center latitude and longitude
 @param distance distance
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return locations
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/#searching">Graph API#searching - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="searchLocations" return="facebook4j.ResponseList&lt;facebook4j.Location&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="placeId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a particular place.
 @param placeId specify the ID of the place
 @return locations
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/#searching">Graph API#searching - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="searchLocations" return="facebook4j.ResponseList&lt;facebook4j.Location&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="placeId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a particular place.
 @param placeId specify the ID of the place
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return locations
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/#searching">Graph API#searching - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="searchPages" return="facebook4j.ResponseList&lt;facebook4j.Page&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="query" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Searches pages.
 @param query the search condition
 @return pages
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/search/">Search - Facebook Developers</a>
 @since Facebook4J 2.0.0]]>
      </doc>
    </method>
    <method name="searchPages" return="facebook4j.ResponseList&lt;facebook4j.Page&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="query" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Searches pages.
 @param query the search condition
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return pages
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/search/">Search - Facebook Developers</a>
 @since Facebook4J 2.0.0]]>
      </doc>
    </method>
    <method name="search" return="facebook4j.ResponseList&lt;facebook4j.internal.org.json.JSONObject&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="query" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Searches every type all public objects.
 @param query the search condition
 @return objects
 @throws FacebookException when Facebook service or network is unavailable]]>
      </doc>
    </method>
    <method name="search" return="facebook4j.ResponseList&lt;facebook4j.internal.org.json.JSONObject&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="query" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Searches every type all public objects.
 @param query the search condition
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return objects
 @throws FacebookException when Facebook service or network is unavailable]]>
      </doc>
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.api.SearchMethods -->
  <!-- start interface facebook4j.api.SubscribeMethods -->
  <interface name="SubscribeMethods"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getSubscribedto" return="facebook4j.ResponseList&lt;facebook4j.Subscribedto&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns people the current user is subscribed to.
 @return users
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#subscribedto">User#subscribedto - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getSubscribedto" return="facebook4j.ResponseList&lt;facebook4j.Subscribedto&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns people the current user is subscribed to.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return users
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#subscribedto">User#subscribedto - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getSubscribedto" return="facebook4j.ResponseList&lt;facebook4j.Subscribedto&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns people a user is subscribed to.
 @param userId the ID of a user
 @return users
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#subscribedto">User#subscribedto - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getSubscribedto" return="facebook4j.ResponseList&lt;facebook4j.Subscribedto&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns people a user is subscribed to.
 @param userId the ID of a user
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return users
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#subscribedto">User#subscribedto - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getSubscribers" return="facebook4j.ResponseList&lt;facebook4j.Subscriber&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current user's subscribers.
 @return users
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#subscribers">User#subscribers - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getSubscribers" return="facebook4j.ResponseList&lt;facebook4j.Subscriber&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current user's subscribers.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return users
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#subscribers">User#subscribers - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getSubscribers" return="facebook4j.ResponseList&lt;facebook4j.Subscriber&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a user's subscribers.
 @param userId the ID of a user
 @return users
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#subscribers">User#subscribers - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getSubscribers" return="facebook4j.ResponseList&lt;facebook4j.Subscriber&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a user's subscribers.
 @param userId the ID of a user
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return users
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#subscribers">User#subscribers - Facebook Developers</a>]]>
      </doc>
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.api.SubscribeMethods -->
  <!-- start interface facebook4j.api.TestUserMethods -->
  <interface name="TestUserMethods"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="createTestUser" return="facebook4j.TestUser"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="appId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Creates a test user associated with a particular app.
 @param appId the ID of the app
 @return Test User
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/test_users/">Test Users - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="createTestUser" return="facebook4j.TestUser"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="appId" type="java.lang.String"/>
      <param name="name" type="java.lang.String"/>
      <param name="locale" type="java.lang.String"/>
      <param name="permissions" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Creates a test user associated with a particular app.
 @param appId the ID of the app
 @param name test user name
 @param locale locale
 @param permissions comma-separated list of permissions
 @return Test User
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/test_users/">Test Users - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getTestUsers" return="java.util.List&lt;facebook4j.TestUser&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="appId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns test users associated with a particular app.
 @param appId the ID of the app
 @return Test Users
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/test_users/">Test Users - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="deleteTestUser" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="testUserId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Deletes the test user.
 @param testUserId the ID of the test user
 @return true if delete is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/test_users/">Test Users - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="makeFriendTestUser" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="testUser1" type="facebook4j.TestUser"/>
      <param name="testUser2" type="facebook4j.TestUser"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Makes friends connections for a test user with other test users.
 @param testUser1 test user
 @param testUser2 test user
 @return true on success, false otherwise
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/test_users/">Test Users - Facebook Developers</a>]]>
      </doc>
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.api.TestUserMethods -->
  <!-- start interface facebook4j.api.UserMethods -->
  <interface name="UserMethods"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getMe" return="facebook4j.User"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current user.
 @return user
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getMe" return="facebook4j.User"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the current user.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return user
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getUser" return="facebook4j.User"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a given user, specified by ID.
 @param userId the ID of the user
 @return user
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getUser" return="facebook4j.User"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a given user, specified by ID.
 @param userId the ID of the user
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return user
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getPictureURL" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the url of the current user's profile picture.
 @return url
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - picture]]>
      </doc>
    </method>
    <method name="getPictureURL" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="size" type="facebook4j.PictureSize"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the url of the current user's profile picture.
 @param size {@link PictureSize picture size}
 @return url
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - picture]]>
      </doc>
    </method>
    <method name="getPictureURL" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the url of a user's profile picture.
 @param userId the ID of a user
 @return url
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - picture]]>
      </doc>
    </method>
    <method name="getPictureURL" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="size" type="facebook4j.PictureSize"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the url of a user's profile picture.
 @param userId the ID of a user
 @param size {@link PictureSize picture size}
 @return url
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - picture]]>
      </doc>
    </method>
    <method name="getSSLPictureURL" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the url of the current user's profile picture over a secure connection.
 @return url
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - picture
 @since Facebook4J 2.0.0]]>
      </doc>
    </method>
    <method name="getSSLPictureURL" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="size" type="facebook4j.PictureSize"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the url of the current user's profile picture over a secure connection.
 @param size {@link PictureSize picture size}
 @return url
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - picture
 @since Facebook4J 2.0.0]]>
      </doc>
    </method>
    <method name="getSSLPictureURL" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the url of a user's profile picture over a secure connection.
 @param userId the ID of a user
 @return url
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - picture
 @since Facebook4J 2.0.0]]>
      </doc>
    </method>
    <method name="getSSLPictureURL" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="userId" type="java.lang.String"/>
      <param name="size" type="facebook4j.PictureSize"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the url of a user's profile picture over a secure connection.
 @param userId the ID of a user
 @param size {@link PictureSize picture size}
 @return url
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/">User - Facebook Developers</a> - Connections - picture
 @since Facebook4J 2.0.0]]>
      </doc>
    </method>
    <method name="getUsers" return="java.util.List&lt;facebook4j.User&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ids" type="java.lang.String[]"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the users specified by IDs.
 @param ids the IDs of users
 @return users
 @throws FacebookException
 @see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>]]>
      </doc>
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.api.UserMethods -->
  <!-- start interface facebook4j.api.VideoMethods -->
  <interface name="VideoMethods"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getVideos" return="facebook4j.ResponseList&lt;facebook4j.Video&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the videos the current user has been tagged in / the current page has uploaded.
 @return videos
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#videos">User#videos - Facebook Developers</a>
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#videos">Page#videos - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getVideos" return="facebook4j.ResponseList&lt;facebook4j.Video&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the videos the current user has been tagged in / the current page has uploaded.
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return videos
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#videos">User#videos - Facebook Developers</a>
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#videos">Page#videos - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getVideos" return="facebook4j.ResponseList&lt;facebook4j.Video&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the videos a user has been tagged in / the current page has uploaded.
 @param id the ID of a user/page
 @return videos
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#videos">User#videos - Facebook Developers</a>
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#videos">Page#videos - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getVideos" return="facebook4j.ResponseList&lt;facebook4j.Video&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the videos a user has been tagged in / the current page has uploaded.
 @param id the ID of a user/page
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return videos
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#videos">User#videos - Facebook Developers</a>
 @see <a href="https://developers.facebook.com/docs/reference/api/page/#videos">Page#videos - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="postVideo" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="videoUpdate" type="facebook4j.VideoUpdate"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Posts the video to the current user's/page's wall.
 @param videoUpdate video content
 @return The new video ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#videos">User#videos - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="postVideo" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="java.lang.String"/>
      <param name="videoUpdate" type="facebook4j.VideoUpdate"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Posts the video to a user's/page's wall.
 @param id the ID of a user
 @param videoUpdate video content
 @return The new video ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/user/#videos">User#videos - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getVideo" return="facebook4j.Video"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="videoId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a single video.
 @param videoId the ID of the video
 @return video
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/video/">Video - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getVideo" return="facebook4j.Video"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="videoId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns a single video.
 @param videoId the ID of the video
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return video
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/video/">Video - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getVideoLikes" return="facebook4j.ResponseList&lt;facebook4j.Like&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="videoId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns all of the likes on a video.
 @param videoId the ID of a video
 @return videos
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/video/#likes">Video#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getVideoLikes" return="facebook4j.ResponseList&lt;facebook4j.Like&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="videoId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns all of the likes on a video.
 @param videoId the ID of a video
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a> see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return videos
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/video/#likes">Video#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="likeVideo" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="videoId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Likes the video.
 @param videoId the ID of the video
 @return true if like is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/video/#likes">Video#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="unlikeVideo" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="videoId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Unlikes the video.
 @param videoId the ID of the video
 @return true if unlike is successful
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/video/#likes">Video#likes - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getVideoComments" return="facebook4j.ResponseList&lt;facebook4j.Comment&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="videoId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the comments on a video.
 @param videoId the ID of a video
 @return comments
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/video/#comments">Video#comments - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getVideoComments" return="facebook4j.ResponseList&lt;facebook4j.Comment&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="videoId" type="java.lang.String"/>
      <param name="reading" type="facebook4j.Reading"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the comments on a video.
 @param videoId the ID of a video
 @param reading optional reading parameters. see <a href="https://developers.facebook.com/docs/reference/api/#reading">Graph API#reading - Facebook Developers</a>
 @return comments
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/video/#comments">Video#comments - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="commentVideo" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="videoId" type="java.lang.String"/>
      <param name="message" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Comments on the video.
 @param videoId the ID of the video
 @param message comment text
 @return The new comment ID
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/video/#comments">Video#comments - Facebook Developers</a>]]>
      </doc>
    </method>
    <method name="getVideoCover" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="videoId" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns url of the image which represents the content of a video.
 @param videoId the ID of a video
 @return url
 @throws FacebookException when Facebook service or network is unavailable
 @see <a href="https://developers.facebook.com/docs/reference/api/video/">Video - Facebook Developers</a> - Connections - picture]]>
      </doc>
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.api.VideoMethods -->
</package>
<package name="facebook4j.auth">
  <!-- start class facebook4j.auth.AccessToken -->
  <class name="AccessToken" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.io.Serializable"/>
    <constructor name="AccessToken" type="facebook4j.internal.http.HttpResponse"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </constructor>
    <constructor name="AccessToken" type="java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="AccessToken" type="java.lang.String, java.lang.Long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getParameter" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="parameter" type="java.lang.String"/>
    </method>
    <method name="getToken" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getExpires" return="java.lang.Long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="obj" type="java.lang.Object"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[Represents an access token (with expiration date).

 @author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </class>
  <!-- end class facebook4j.auth.AccessToken -->
  <!-- start interface facebook4j.auth.Authorization -->
  <interface name="Authorization"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.io.Serializable"/>
    <method name="isEnabled" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns true if authorization credentials are set.

 @return true if authorization credentials are set]]>
      </doc>
    </method>
    <doc>
    <![CDATA[An interface represents credentials.
 
 @author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.auth.Authorization -->
  <!-- start interface facebook4j.auth.AuthorizationConfiguration -->
  <interface name="AuthorizationConfiguration"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getOAuthAppId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getOAuthAppSecret" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getOAuthAccessToken" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getOAuthPermissions" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[An interface represents configuration for Authorization.

 @author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.auth.AuthorizationConfiguration -->
  <!-- start class facebook4j.auth.AuthorizationFactory -->
  <class name="AuthorizationFactory" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <constructor name="AuthorizationFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getInstance" return="facebook4j.auth.Authorization"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="conf" type="facebook4j.conf.Configuration"/>
    </method>
    <doc>
    <![CDATA[A static factory class for Authorization.
 
 @author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </class>
  <!-- end class facebook4j.auth.AuthorizationFactory -->
  <!-- start class facebook4j.auth.NullAuthorization -->
  <class name="NullAuthorization" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.auth.Authorization"/>
    <implements name="java.io.Serializable"/>
    <method name="getInstance" return="facebook4j.auth.NullAuthorization"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="isEnabled" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[An interface represents credentials.

 @author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </class>
  <!-- end class facebook4j.auth.NullAuthorization -->
  <!-- start class facebook4j.auth.OAuthAuthorization -->
  <class name="OAuthAuthorization" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.auth.Authorization"/>
    <implements name="java.io.Serializable"/>
    <implements name="facebook4j.auth.OAuthSupport"/>
    <constructor name="OAuthAuthorization" type="facebook4j.conf.Configuration"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@param conf Configuration]]>
      </doc>
    </constructor>
    <method name="isEnabled" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[#{inheritDoc}]]>
      </doc>
    </method>
    <method name="getOAuthAuthorizationURL" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="callbackURL" type="java.lang.String"/>
    </method>
    <method name="getOAuthAuthorizationURL" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="callbackURL" type="java.lang.String"/>
      <param name="state" type="java.lang.String"/>
    </method>
    <method name="getOAuthAccessToken" return="facebook4j.auth.AccessToken"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="oauthCode" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="getExchangeAccessTokenURL" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="oauthCode" type="java.lang.String"/>
    </method>
    <method name="getOAuthAccessToken" return="facebook4j.auth.AccessToken"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getOAuthAppAccessToken" return="facebook4j.auth.AccessToken"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="setOAuthAccessToken"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="accessToken" type="facebook4j.auth.AccessToken"/>
    </method>
    <method name="setOAuthAppId"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="appId" type="java.lang.String"/>
      <param name="appSecret" type="java.lang.String"/>
    </method>
    <method name="setOAuthPermissions"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="permissions" type="java.lang.String"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="obj" type="java.lang.Object"/>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com
 
 @see <a href="http://oauth.net/core/1.0a/">OAuth Core 1.0a</a>]]>
    </doc>
  </class>
  <!-- end class facebook4j.auth.OAuthAuthorization -->
  <!-- start interface facebook4j.auth.OAuthSupport -->
  <interface name="OAuthSupport"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="setOAuthAppId"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="appId" type="java.lang.String"/>
      <param name="appSecret" type="java.lang.String"/>
      <doc>
      <![CDATA[sets the OAuth AppID and App secret

 @param appId OAuth AppID
 @param appSecret OAuth App secret
 @throws IllegalStateException when OAuth AppId has already been set]]>
      </doc>
    </method>
    <method name="setOAuthPermissions"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="permissions" type="java.lang.String"/>
      <doc>
      <![CDATA[sets the permissions

 @param permissions comma-separated permission names
 @see <a href="https://developers.facebook.com/docs/authentication/permissions/">Permissions Reference</a>]]>
      </doc>
    </method>
    <method name="getOAuthAuthorizationURL" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="callbackURL" type="java.lang.String"/>
    </method>
    <method name="getOAuthAuthorizationURL" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="callbackURL" type="java.lang.String"/>
      <param name="state" type="java.lang.String"/>
    </method>
    <method name="getOAuthAccessToken" return="facebook4j.auth.AccessToken"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns an access token associated with this instance.

 @return access token
 @throws IllegalStateException when this instance has no access token
 @see <a href="https://developers.facebook.com/docs/authentication/server-side/">Server-Side Authentication</a>]]>
      </doc>
    </method>
    <method name="getOAuthAccessToken" return="facebook4j.auth.AccessToken"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="oauthCode" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Exchange the code for a User Access Token.

 @param oauthCode OAuth code.
 @return User Access Token
 @throws FacebookException when Facebook service or network is unavailable, or the user has not authorized
 @see <a href="https://developers.facebook.com/docs/authentication/server-side/">Server-Side Authentication</a>]]>
      </doc>
    </method>
    <method name="getOAuthAppAccessToken" return="facebook4j.auth.AccessToken"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns an App Access Token.

 @return App Access Token
 @throws FacebookException when Facebook service or network is unavailable, or the user has not authorized
 @see <a href="https://developers.facebook.com/docs/authentication/server-side/">Server-Side Authentication</a>]]>
      </doc>
    </method>
    <method name="setOAuthAccessToken"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="accessToken" type="facebook4j.auth.AccessToken"/>
      <doc>
      <![CDATA[Sets the access token

 @param accessToken accessToken]]>
      </doc>
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.auth.OAuthSupport -->
</package>
<package name="facebook4j.conf">
  <!-- start interface facebook4j.conf.Configuration -->
  <interface name="Configuration"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.internal.http.HttpClientConfiguration"/>
    <implements name="facebook4j.internal.http.HttpClientWrapperConfiguration"/>
    <implements name="facebook4j.auth.AuthorizationConfiguration"/>
    <implements name="java.io.Serializable"/>
    <method name="isDalvik" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="isGAE" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="isDebugEnabled" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getUserAgent" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getClientVersion" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getClientURL" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getRestBaseURL" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getVideoBaseURL" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getOAuthAuthorizationURL" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getOAuthAccessTokenURL" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="isJSONStoreEnabled" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="isMBeanEnabled" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[An interface represents configuration.
 
 @author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.conf.Configuration -->
  <!-- start class facebook4j.conf.ConfigurationBase -->
  <class name="ConfigurationBase" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.conf.Configuration"/>
    <implements name="java.io.Serializable"/>
    <constructor name="ConfigurationBase"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </constructor>
    <method name="isDalvik" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="isGAE" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="isDebugEnabled" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setDebug"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
      <param name="debug" type="boolean"/>
    </method>
    <method name="getUserAgent" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setUserAgent"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
      <param name="userAgent" type="java.lang.String"/>
    </method>
    <method name="isPrettyDebugEnabled" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setUseSSL"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
      <param name="useSSL" type="boolean"/>
    </method>
    <method name="setPrettyDebugEnabled"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
      <param name="prettyDebug" type="boolean"/>
    </method>
    <method name="setGZIPEnabled"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
      <param name="gzipEnabled" type="boolean"/>
    </method>
    <method name="isGZIPEnabled" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getRequestHeaders" return="java.util.Map&lt;java.lang.String, java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getHttpProxyHost" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setHttpProxyHost"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
      <param name="proxyHost" type="java.lang.String"/>
    </method>
    <method name="getHttpProxyUser" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setHttpProxyUser"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
      <param name="proxyUser" type="java.lang.String"/>
    </method>
    <method name="getHttpProxyPassword" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setHttpProxyPassword"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
      <param name="proxyPassword" type="java.lang.String"/>
    </method>
    <method name="getHttpProxyPort" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setHttpProxyPort"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
      <param name="proxyPort" type="int"/>
    </method>
    <method name="getHttpConnectionTimeout" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setHttpConnectionTimeout"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
      <param name="connectionTimeout" type="int"/>
    </method>
    <method name="getHttpReadTimeout" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setHttpReadTimeout"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
      <param name="readTimeout" type="int"/>
    </method>
    <method name="getHttpStreamingReadTimeout" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setHttpStreamingReadTimeout"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
      <param name="httpStreamingReadTimeout" type="int"/>
    </method>
    <method name="getHttpRetryCount" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setHttpRetryCount"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
      <param name="retryCount" type="int"/>
    </method>
    <method name="getHttpRetryIntervalSeconds" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setHttpRetryIntervalSeconds"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
      <param name="retryIntervalSeconds" type="int"/>
    </method>
    <method name="getHttpMaxTotalConnections" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setHttpMaxTotalConnections"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
      <param name="maxTotalConnections" type="int"/>
    </method>
    <method name="getHttpDefaultMaxPerRoute" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setHttpDefaultMaxPerRoute"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
      <param name="defaultMaxPerRoute" type="int"/>
    </method>
    <method name="getOAuthAppId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setOAuthAppId"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
      <param name="oAuthAppId" type="java.lang.String"/>
    </method>
    <method name="getOAuthAppSecret" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setOAuthAppSecret"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
      <param name="oAuthAppSecret" type="java.lang.String"/>
    </method>
    <method name="getOAuthAccessToken" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setOAuthAccessToken"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
      <param name="oAuthAccessToken" type="java.lang.String"/>
    </method>
    <method name="getClientVersion" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setClientVersion"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
      <param name="clientVersion" type="java.lang.String"/>
    </method>
    <method name="getClientURL" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setClientURL"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
      <param name="clientURL" type="java.lang.String"/>
    </method>
    <method name="getRestBaseURL" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getVideoBaseURL" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setRestBaseURL"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
      <param name="restBaseURL" type="java.lang.String"/>
    </method>
    <method name="setVideoBaseURL"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
      <param name="videoBaseURL" type="java.lang.String"/>
    </method>
    <method name="getOAuthAuthorizationURL" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setOAuthAuthorizationURL"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
      <param name="oAuthAuthorizationURL" type="java.lang.String"/>
    </method>
    <method name="getOAuthAccessTokenURL" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setOAuthAccessTokenURL"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
      <param name="oAuthAccessTokenURL" type="java.lang.String"/>
    </method>
    <method name="isJSONStoreEnabled" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setJSONStoreEnabled"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
      <param name="enabled" type="boolean"/>
    </method>
    <method name="isMBeanEnabled" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setMBeanEnabled"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
      <param name="enabled" type="boolean"/>
    </method>
    <method name="getOAuthPermissions" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setOAuthPermissions"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="oAuthPermissions" type="java.lang.String"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="o" type="java.lang.Object"/>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="cacheInstance"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </method>
    <method name="readResolve" return="java.lang.Object"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <exception name="ObjectStreamException" type="java.io.ObjectStreamException"/>
    </method>
    <field name="DALVIK" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="GAE" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <doc>
    <![CDATA[Configuration base class with default settings.
  
 @author Yusuke Yamamoto - yusuke at mac.com
 @author Ryuji Yamashita - roundrop at gmail.com
 <ul>
   <li>Changed for Facebook4J</li>
 </ul>]]>
    </doc>
  </class>
  <!-- end class facebook4j.conf.ConfigurationBase -->
  <!-- start class facebook4j.conf.ConfigurationBuilder -->
  <class name="ConfigurationBuilder" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <constructor name="ConfigurationBuilder"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="setUseSSL" return="facebook4j.conf.ConfigurationBuilder"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="useSSL" type="boolean"/>
    </method>
    <method name="setPrettyDebugEnabled" return="facebook4j.conf.ConfigurationBuilder"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="prettyDebugEnabled" type="boolean"/>
    </method>
    <method name="setGZIPEnabled" return="facebook4j.conf.ConfigurationBuilder"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="gzipEnabled" type="boolean"/>
    </method>
    <method name="setDebugEnabled" return="facebook4j.conf.ConfigurationBuilder"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="debugEnabled" type="boolean"/>
    </method>
    <method name="setHttpProxyHost" return="facebook4j.conf.ConfigurationBuilder"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="httpProxyHost" type="java.lang.String"/>
    </method>
    <method name="setHttpProxyUser" return="facebook4j.conf.ConfigurationBuilder"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="httpProxyUser" type="java.lang.String"/>
    </method>
    <method name="setHttpProxyPassword" return="facebook4j.conf.ConfigurationBuilder"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="httpProxyPassword" type="java.lang.String"/>
    </method>
    <method name="setHttpProxyPort" return="facebook4j.conf.ConfigurationBuilder"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="httpProxyPort" type="int"/>
    </method>
    <method name="setHttpConnectionTimeout" return="facebook4j.conf.ConfigurationBuilder"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="httpConnectionTimeout" type="int"/>
    </method>
    <method name="setHttpReadTimeout" return="facebook4j.conf.ConfigurationBuilder"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="httpReadTimeout" type="int"/>
    </method>
    <method name="setHttpStreamingReadTimeout" return="facebook4j.conf.ConfigurationBuilder"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="httpStreamingReadTimeout" type="int"/>
    </method>
    <method name="setHttpRetryCount" return="facebook4j.conf.ConfigurationBuilder"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="httpRetryCount" type="int"/>
    </method>
    <method name="setHttpMaxTotalConnections" return="facebook4j.conf.ConfigurationBuilder"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="httpMaxConnections" type="int"/>
    </method>
    <method name="setHttpDefaultMaxPerRoute" return="facebook4j.conf.ConfigurationBuilder"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="httpDefaultMaxPerRoute" type="int"/>
    </method>
    <method name="setHttpRetryIntervalSeconds" return="facebook4j.conf.ConfigurationBuilder"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="httpRetryIntervalSeconds" type="int"/>
    </method>
    <method name="setOAuthAppId" return="facebook4j.conf.ConfigurationBuilder"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="oAuthAppId" type="java.lang.String"/>
    </method>
    <method name="setOAuthAppSecret" return="facebook4j.conf.ConfigurationBuilder"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="oAuthAppSecret" type="java.lang.String"/>
    </method>
    <method name="setOAuthAccessToken" return="facebook4j.conf.ConfigurationBuilder"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="oAuthAccessToken" type="java.lang.String"/>
    </method>
    <method name="setOAuthPermissions" return="facebook4j.conf.ConfigurationBuilder"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="oAuthPermissions" type="java.lang.String"/>
    </method>
    <method name="setOAuthAuthorizationURL" return="facebook4j.conf.ConfigurationBuilder"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="oAuthAuthorizationURL" type="java.lang.String"/>
    </method>
    <method name="setOAuthAccessTokenURL" return="facebook4j.conf.ConfigurationBuilder"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="oAuthAccessTokenURL" type="java.lang.String"/>
    </method>
    <method name="setRestBaseURL" return="facebook4j.conf.ConfigurationBuilder"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="restBaseURL" type="java.lang.String"/>
    </method>
    <method name="setVideoBaseURL" return="facebook4j.conf.ConfigurationBuilder"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="videoBaseURL" type="java.lang.String"/>
    </method>
    <method name="setClientVersion" return="facebook4j.conf.ConfigurationBuilder"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="clientVersion" type="java.lang.String"/>
    </method>
    <method name="setClientURL" return="facebook4j.conf.ConfigurationBuilder"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="clientURL" type="java.lang.String"/>
    </method>
    <method name="setJSONStoreEnabled" return="facebook4j.conf.ConfigurationBuilder"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="enabled" type="boolean"/>
    </method>
    <method name="setMBeanEnabled" return="facebook4j.conf.ConfigurationBuilder"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="enabled" type="boolean"/>
    </method>
    <method name="build" return="facebook4j.conf.Configuration"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[A builder that can be used to construct a twitter4j configuration with desired settings.  This
 builder has sensible defaults such that {@code new ConfigurationBuilder().build()} would create a
 usable configuration.  This configuration builder is useful for clients that wish to configure
 twitter4j in unit tests or from command line flags for example.
 
 @author John Sirois - john.sirois at gmail.com
 @author Ryuji Yamashita - roundrop at gmail.com
 <ul>
   <li>Changed for Facebook4J</li>
 </ul>]]>
    </doc>
  </class>
  <!-- end class facebook4j.conf.ConfigurationBuilder -->
  <!-- start class facebook4j.conf.ConfigurationContext -->
  <class name="ConfigurationContext" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <constructor name="ConfigurationContext"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getInstance" return="facebook4j.conf.Configuration"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getInstance" return="facebook4j.conf.Configuration"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="configTreePath" type="java.lang.String"/>
    </method>
    <field name="DEFAULT_CONFIGURATION_FACTORY" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="CONFIGURATION_IMPL" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <doc>
    <![CDATA[Static factory of Configuration. This class wraps ConfigurationFactory implementations.<br>
 By default, facebook4j.conf.PropertyConfigurationFactory will be used and can be changed with -Dfacebook4j.configurationFactory system property.

 @author Yusuke Yamamoto - yusuke at mac.com]]>
    </doc>
  </class>
  <!-- end class facebook4j.conf.ConfigurationContext -->
  <!-- start interface facebook4j.conf.ConfigurationFactory -->
  <interface name="ConfigurationFactory"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getInstance" return="facebook4j.conf.Configuration"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[returns the root configuration

 @return root configuration]]>
      </doc>
    </method>
    <method name="getInstance" return="facebook4j.conf.Configuration"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="configTreePath" type="java.lang.String"/>
      <doc>
      <![CDATA[returns the configuration specified by the path

 @param configTreePath the path
 @return the configuratoin]]>
      </doc>
    </method>
    <method name="dispose"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[clean up resources acquired by this factory.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[@author Yusuke Yamamoto - yusuke at mac.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.conf.ConfigurationFactory -->
  <!-- start class facebook4j.conf.PropertyConfiguration -->
  <class name="PropertyConfiguration" extends="facebook4j.conf.ConfigurationBase"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <implements name="java.io.Serializable"/>
    <constructor name="PropertyConfiguration" type="java.io.InputStream"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="PropertyConfiguration" type="java.util.Properties"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="PropertyConfiguration" type="java.util.Properties, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getBoolean" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="props" type="java.util.Properties"/>
      <param name="prefix" type="java.lang.String"/>
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getIntProperty" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="props" type="java.util.Properties"/>
      <param name="prefix" type="java.lang.String"/>
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="props" type="java.util.Properties"/>
      <param name="prefix" type="java.lang.String"/>
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="readResolve" return="java.lang.Object"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <exception name="ObjectStreamException" type="java.io.ObjectStreamException"/>
    </method>
    <field name="DEBUG" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="HTTP_USER_AGENT" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="HTTP_USE_SSL" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="HTTP_PRETTY_DEBUG" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="HTTP_GZIP" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="HTTP_PROXY_HOST" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="HTTP_PROXY_HOST_FALLBACK" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="HTTP_PROXY_USER" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="HTTP_PROXY_PASSWORD" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="HTTP_PROXY_PORT" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="HTTP_PROXY_PORT_FALLBACK" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="HTTP_CONNECTION_TIMEOUT" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="HTTP_READ_TIMEOUT" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="HTTP_RETRY_COUNT" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="HTTP_RETRY_INTERVAL_SECS" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="HTTP_MAX_TOTAL_CONNECTIONS" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="HTTP_DEFAULT_MAX_PER_ROUTE" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="OAUTH_APP_ID" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="OAUTH_APP_SECRET" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="OAUTH_ACCESS_TOKEN" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="OAUTH_PERMISSIONS" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="OAUTH_AUTHORIZATION_URL" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="OAUTH_ACCESS_TOKEN_URL" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="REST_BASE_URL" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="VIDEO_BASE_URL" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="JSON_STORE_ENABLED" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="MBEAN_ENABLED" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="CLIENT_VERSION" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="CLIENT_URL" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <doc>
    <![CDATA[@author Yusuke Yamamoto - yusuke at mac.com
 @author Ryuji Yamashita - roundrop at gmail.com
 <ul>
   <li>Changed for Facebook4J</li>
 </ul>]]>
    </doc>
  </class>
  <!-- end class facebook4j.conf.PropertyConfiguration -->
</package>
<package name="facebook4j.internal.http">
  <!-- start class facebook4j.internal.http.BASE64Encoder -->
  <class name="BASE64Encoder" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="encode" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="from" type="byte[]"/>
    </method>
    <doc>
    <![CDATA[A utility class encodes byte array into String using Base64 encoding scheme.

 @author Yusuke Yamamoto - yusuke at mac.com
 @see HttpClient]]>
    </doc>
  </class>
  <!-- end class facebook4j.internal.http.BASE64Encoder -->
  <!-- start class facebook4j.internal.http.HTMLEntity -->
  <class name="HTMLEntity" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <constructor name="HTMLEntity"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="escape" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="original" type="java.lang.String"/>
    </method>
    <method name="escape"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="original" type="java.lang.StringBuilder"/>
    </method>
    <method name="unescape" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="original" type="java.lang.String"/>
    </method>
    <method name="unescape"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="original" type="java.lang.StringBuilder"/>
    </method>
  </class>
  <!-- end class facebook4j.internal.http.HTMLEntity -->
  <!-- start interface facebook4j.internal.http.HttpClient -->
  <interface name="HttpClient"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="request" return="facebook4j.internal.http.HttpResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="req" type="facebook4j.internal.http.HttpRequest"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="shutdown"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[A utility class to handle HTTP request/response.

 @author Yusuke Yamamoto - yusuke at mac.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.internal.http.HttpClient -->
  <!-- start class facebook4j.internal.http.HttpClientBase -->
  <class name="HttpClientBase" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.io.Serializable"/>
    <constructor name="HttpClientBase" type="facebook4j.internal.http.HttpClientConfiguration"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="shutdown"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="isProxyConfigured" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </method>
    <method name="write"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="out" type="java.io.DataOutputStream"/>
      <param name="outStr" type="java.lang.String"/>
      <exception name="IOException" type="java.io.IOException"/>
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="o" type="java.lang.Object"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <field name="CONF" type="facebook4j.internal.http.HttpClientConfiguration"
      transient="false" volatile="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
    </field>
  </class>
  <!-- end class facebook4j.internal.http.HttpClientBase -->
  <!-- start interface facebook4j.internal.http.HttpClientConfiguration -->
  <interface name="HttpClientConfiguration"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getHttpProxyHost" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getHttpProxyPort" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getHttpProxyUser" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getHttpProxyPassword" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getHttpConnectionTimeout" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getHttpReadTimeout" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getHttpRetryCount" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getHttpRetryIntervalSeconds" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getHttpMaxTotalConnections" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getHttpDefaultMaxPerRoute" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="isPrettyDebugEnabled" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="isGZIPEnabled" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Yusuke Yamamoto - yusuke at mac.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.internal.http.HttpClientConfiguration -->
  <!-- start class facebook4j.internal.http.HttpClientFactory -->
  <class name="HttpClientFactory" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <constructor name="HttpClientFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getInstance" return="facebook4j.internal.http.HttpClient"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="conf" type="facebook4j.internal.http.HttpClientConfiguration"/>
    </method>
    <doc>
    <![CDATA[@author Yusuke Yamamoto - yusuke at mac.com
 @since Twitter4J 2.1.2]]>
    </doc>
  </class>
  <!-- end class facebook4j.internal.http.HttpClientFactory -->
  <!-- start class facebook4j.internal.http.HttpClientImpl -->
  <class name="HttpClientImpl" extends="facebook4j.internal.http.HttpClientBase"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.internal.http.HttpClient"/>
    <implements name="facebook4j.internal.http.HttpResponseCode"/>
    <implements name="java.io.Serializable"/>
    <constructor name="HttpClientImpl"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="HttpClientImpl" type="facebook4j.internal.http.HttpClientConfiguration"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getInstance" return="facebook4j.internal.http.HttpClient"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="conf" type="facebook4j.internal.http.HttpClientConfiguration"/>
    </method>
    <method name="get" return="facebook4j.internal.http.HttpResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="url" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="post" return="facebook4j.internal.http.HttpResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="url" type="java.lang.String"/>
      <param name="params" type="facebook4j.internal.http.HttpParameter[]"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="request" return="facebook4j.internal.http.HttpResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="req" type="facebook4j.internal.http.HttpRequest"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="encode" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="str" type="java.lang.String"/>
    </method>
    <method name="getConnection" return="java.net.HttpURLConnection"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="url" type="java.lang.String"/>
      <exception name="IOException" type="java.io.IOException"/>
    </method>
    <doc>
    <![CDATA[@author Yusuke Yamamoto - yusuke at mac.com
 @since Twitter4J 2.1.2
 @author Ryuji Yamashita - roundrop at gmail.com
 <ul>
 <li>Changed for Facebook</li>
 </ul>]]>
    </doc>
  </class>
  <!-- end class facebook4j.internal.http.HttpClientImpl -->
  <!-- start class facebook4j.internal.http.HttpClientWrapper -->
  <class name="HttpClientWrapper" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.io.Serializable"/>
    <constructor name="HttpClientWrapper" type="facebook4j.internal.http.HttpClientWrapperConfiguration"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="HttpClientWrapper"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="shutdown"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="request" return="facebook4j.internal.http.HttpResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="req" type="facebook4j.internal.http.HttpRequest"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="setHttpResponseListener"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="listener" type="facebook4j.internal.http.HttpResponseListener"/>
    </method>
    <method name="get" return="facebook4j.internal.http.HttpResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="url" type="java.lang.String"/>
      <param name="parameters" type="facebook4j.internal.http.HttpParameter[]"/>
      <param name="authorization" type="facebook4j.auth.Authorization"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="get" return="facebook4j.internal.http.HttpResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="url" type="java.lang.String"/>
      <param name="parameters" type="facebook4j.internal.http.HttpParameter[]"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="get" return="facebook4j.internal.http.HttpResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="url" type="java.lang.String"/>
      <param name="authorization" type="facebook4j.auth.Authorization"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="get" return="facebook4j.internal.http.HttpResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="url" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="post" return="facebook4j.internal.http.HttpResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="url" type="java.lang.String"/>
      <param name="parameters" type="facebook4j.internal.http.HttpParameter[]"/>
      <param name="authorization" type="facebook4j.auth.Authorization"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="post" return="facebook4j.internal.http.HttpResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="url" type="java.lang.String"/>
      <param name="parameters" type="facebook4j.internal.http.HttpParameter[]"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="post" return="facebook4j.internal.http.HttpResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="url" type="java.lang.String"/>
      <param name="parameters" type="facebook4j.internal.http.HttpParameter[]"/>
      <param name="requestHeaders" type="java.util.Map&lt;java.lang.String, java.lang.String&gt;"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="post" return="facebook4j.internal.http.HttpResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="url" type="java.lang.String"/>
      <param name="authorization" type="facebook4j.auth.Authorization"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="post" return="facebook4j.internal.http.HttpResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="url" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="delete" return="facebook4j.internal.http.HttpResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="url" type="java.lang.String"/>
      <param name="parameters" type="facebook4j.internal.http.HttpParameter[]"/>
      <param name="authorization" type="facebook4j.auth.Authorization"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="delete" return="facebook4j.internal.http.HttpResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="url" type="java.lang.String"/>
      <param name="parameters" type="facebook4j.internal.http.HttpParameter[]"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="delete" return="facebook4j.internal.http.HttpResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="url" type="java.lang.String"/>
      <param name="authorization" type="facebook4j.auth.Authorization"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="delete" return="facebook4j.internal.http.HttpResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="url" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="head" return="facebook4j.internal.http.HttpResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="url" type="java.lang.String"/>
      <param name="parameters" type="facebook4j.internal.http.HttpParameter[]"/>
      <param name="authorization" type="facebook4j.auth.Authorization"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="head" return="facebook4j.internal.http.HttpResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="url" type="java.lang.String"/>
      <param name="parameters" type="facebook4j.internal.http.HttpParameter[]"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="head" return="facebook4j.internal.http.HttpResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="url" type="java.lang.String"/>
      <param name="authorization" type="facebook4j.auth.Authorization"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="head" return="facebook4j.internal.http.HttpResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="url" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="put" return="facebook4j.internal.http.HttpResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="url" type="java.lang.String"/>
      <param name="parameters" type="facebook4j.internal.http.HttpParameter[]"/>
      <param name="authorization" type="facebook4j.auth.Authorization"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="put" return="facebook4j.internal.http.HttpResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="url" type="java.lang.String"/>
      <param name="parameters" type="facebook4j.internal.http.HttpParameter[]"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="put" return="facebook4j.internal.http.HttpResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="url" type="java.lang.String"/>
      <param name="authorization" type="facebook4j.auth.Authorization"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="put" return="facebook4j.internal.http.HttpResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="url" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="o" type="java.lang.Object"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[HTTP Client wrapper with handy request methods, ResponseListener mechanism

 @author Yusuke Yamamoto - yusuke at mac.com]]>
    </doc>
  </class>
  <!-- end class facebook4j.internal.http.HttpClientWrapper -->
  <!-- start interface facebook4j.internal.http.HttpClientWrapperConfiguration -->
  <interface name="HttpClientWrapperConfiguration"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.internal.http.HttpClientConfiguration"/>
    <method name="getRequestHeaders" return="java.util.Map&lt;java.lang.String, java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return request headers]]>
      </doc>
    </method>
  </interface>
  <!-- end interface facebook4j.internal.http.HttpClientWrapperConfiguration -->
  <!-- start class facebook4j.internal.http.HttpParameter -->
  <class name="HttpParameter" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <implements name="java.lang.Comparable"/>
    <implements name="java.io.Serializable"/>
    <constructor name="HttpParameter" type="java.lang.String, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="HttpParameter" type="java.lang.String, java.io.File"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="HttpParameter" type="java.lang.String, java.lang.String, java.io.InputStream"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="HttpParameter" type="java.lang.String, int"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="HttpParameter" type="java.lang.String, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="HttpParameter" type="java.lang.String, double"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="HttpParameter" type="java.lang.String, boolean"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getValue" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getFile" return="java.io.File"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getFileBody" return="java.io.InputStream"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="isFile" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="hasFileBody" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getContentType" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return content-type]]>
      </doc>
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="o" type="java.lang.Object"/>
    </method>
    <method name="containsFile" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="params" type="facebook4j.internal.http.HttpParameter[]"/>
    </method>
    <method name="getParameterArray" return="facebook4j.internal.http.HttpParameter[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <param name="value" type="java.lang.String"/>
    </method>
    <method name="getParameterArray" return="facebook4j.internal.http.HttpParameter[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <param name="value" type="int"/>
    </method>
    <method name="getParameterArray" return="facebook4j.internal.http.HttpParameter[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name1" type="java.lang.String"/>
      <param name="value1" type="java.lang.String"/>
      <param name="name2" type="java.lang.String"/>
      <param name="value2" type="java.lang.String"/>
    </method>
    <method name="getParameterArray" return="facebook4j.internal.http.HttpParameter[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name1" type="java.lang.String"/>
      <param name="value1" type="int"/>
      <param name="name2" type="java.lang.String"/>
      <param name="value2" type="int"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="compareTo" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="o" type="java.lang.Object"/>
    </method>
    <method name="encodeParameters" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="httpParams" type="facebook4j.internal.http.HttpParameter[]"/>
    </method>
    <method name="encode" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="value" type="java.lang.String"/>
      <doc>
      <![CDATA[@param value string to be encoded
 @return encoded string
 @see <a href="http://wiki.oauth.net/TestCases">OAuth / TestCases</a>
 @see <a href="http://groups.google.com/group/oauth/browse_thread/thread/a8398d0521f4ae3d/9d79b698ab217df2?hl=en&lnk=gst&q=space+encoding#9d79b698ab217df2">Space encoding - OAuth | Google Groups</a>
 @see <a href="http://tools.ietf.org/html/rfc3986#section-2.1">RFC 3986 - Uniform Resource Identifier (URI): Generic Syntax - 2.1. Percent-Encoding</a>]]>
      </doc>
    </method>
    <method name="merge" return="facebook4j.internal.http.HttpParameter[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="params1" type="facebook4j.internal.http.HttpParameter[]"/>
      <param name="params2" type="facebook4j.internal.http.HttpParameter[]"/>
    </method>
    <method name="merge" return="facebook4j.internal.http.HttpParameter[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="params1" type="facebook4j.internal.http.HttpParameter[]"/>
      <param name="params2" type="facebook4j.internal.http.HttpParameter"/>
    </method>
    <doc>
    <![CDATA[A data class representing HTTP Post parameter

 @author Yusuke Yamamoto - yusuke at mac.com
 @author Ryuji Yamashita - roundrop at gmail.com
 <ul>
 <li>Added {@link HttpParameter#merge(HttpParameter[], HttpParameter[])} method</li>
 <li>Added {@link HttpParameter#merge(HttpParameter[], HttpParameter)} method</li>
 </ul>]]>
    </doc>
  </class>
  <!-- end class facebook4j.internal.http.HttpParameter -->
  <!-- start class facebook4j.internal.http.HttpRequest -->
  <class name="HttpRequest" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <implements name="java.io.Serializable"/>
    <constructor name="HttpRequest" type="facebook4j.internal.http.RequestMethod, java.lang.String, facebook4j.internal.http.HttpParameter[], facebook4j.auth.Authorization, java.util.Map&lt;java.lang.String, java.lang.String&gt;"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@param method         Specifies the HTTP method
 @param url            the request to request
 @param parameters     parameters
 @param authorization  Authentication implementation. Currently BasicAuthentication, OAuthAuthentication and NullAuthentication are supported.
 @param requestHeaders]]>
      </doc>
    </constructor>
    <method name="getMethod" return="facebook4j.internal.http.RequestMethod"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getParameters" return="facebook4j.internal.http.HttpParameter[]"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getURL" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAuthorization" return="facebook4j.auth.Authorization"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getRequestHeaders" return="java.util.Map&lt;java.lang.String, java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="o" type="java.lang.Object"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[HTTP Request parameter object

 @author Yusuke Yamamoto - yusuke at mac.com
 @author Ryuji Yamashita - roundrop at gmail.com
 <ul>
 <li>Changed constructor to set access token for Facebook4J</li>
 <li>Improved join of url and parameter when url contains '?'</li>
 </ul>]]>
    </doc>
  </class>
  <!-- end class facebook4j.internal.http.HttpRequest -->
  <!-- start class facebook4j.internal.http.HttpResponse -->
  <class name="HttpResponse" extends="java.lang.Object"
    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="HttpResponse" type="facebook4j.internal.http.HttpClientConfiguration"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getStatusCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getResponseHeader" return="java.lang.String"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getResponseHeaderFields" return="java.util.Map&lt;java.lang.String, java.util.List&lt;java.lang.String&gt;&gt;"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="asStream" return="java.io.InputStream"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns the response stream.<br>
 This method cannot be called after calling asString() or asDcoument()<br>
 It is suggested to call disconnect() after consuming the stream.
 <p/>
 Disconnects the internal HttpURLConnection silently.

 @return response body stream
 @throws FacebookException
 @see #disconnect()]]>
      </doc>
    </method>
    <method name="asString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the response body as string.<br>
 Disconnects the internal HttpURLConnection silently.

 @return response body
 @throws FacebookException]]>
      </doc>
    </method>
    <method name="asJSONObject" return="facebook4j.internal.org.json.JSONObject"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the response body as facebook4j.internal.org.json.JSONObject.<br>
 Disconnects the internal HttpURLConnection silently.

 @return response body as facebook4j.internal.org.json.JSONObject
 @throws FacebookException]]>
      </doc>
    </method>
    <method name="asJSONArray" return="facebook4j.internal.org.json.JSONArray"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Returns the response body as facebook4j.internal.org.json.JSONArray.<br>
 Disconnects the internal HttpURLConnection silently.

 @return response body as facebook4j.internal.org.json.JSONArray
 @throws FacebookException]]>
      </doc>
    </method>
    <method name="asReader" return="java.io.Reader"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="disconnect"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="IOException" type="java.io.IOException"/>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <field name="CONF" type="facebook4j.internal.http.HttpClientConfiguration"
      transient="false" volatile="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="statusCode" type="int"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="responseAsString" type="java.lang.String"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="is" type="java.io.InputStream"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <doc>
    <![CDATA[A data class representing HTTP Response

 @author Yusuke Yamamoto - yusuke at mac.com]]>
    </doc>
  </class>
  <!-- end class facebook4j.internal.http.HttpResponse -->
  <!-- start interface facebook4j.internal.http.HttpResponseCode -->
  <interface name="HttpResponseCode"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <field name="OK" type="int"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="MULTIPLE_CHOICES" type="int"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="FOUND" type="int"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="NOT_MODIFIED" type="int"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="BAD_REQUEST" type="int"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="UNAUTHORIZED" type="int"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="FORBIDDEN" type="int"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="NOT_FOUND" type="int"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="NOT_ACCEPTABLE" type="int"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="TOO_LONG" type="int"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="ENHANCE_YOUR_CLAIM" type="int"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@see <a href="http://groups.google.com/group/twitter-api-announce/browse_thread/thread/3f3b0fd38deb9b0f?hl=en">Search API: new HTTP response code 420 for rate limiting starting 1/18/2010</a>]]>
      </doc>
    </field>
    <field name="INTERNAL_SERVER_ERROR" type="int"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="BAD_GATEWAY" type="int"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="SERVICE_UNAVAILABLE" type="int"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <doc>
    <![CDATA[@author Yusuke Yamamoto - yusuke at mac.com
 @since Twitter4J 2.1.2]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.internal.http.HttpResponseCode -->
  <!-- start class facebook4j.internal.http.HttpResponseEvent -->
  <class name="HttpResponseEvent" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="getRequest" return="facebook4j.internal.http.HttpRequest"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[returns the request associated with the event

 @return the request associated with the event]]>
      </doc>
    </method>
    <method name="getResponse" return="facebook4j.internal.http.HttpResponse"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[returns the response associated with the event

 @return the response associated with the event]]>
      </doc>
    </method>
    <method name="getFacebookException" return="facebook4j.FacebookException"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[returns the FacebookException associated with the event

 @return the FacebookException associated with the event]]>
      </doc>
    </method>
    <method name="isAuthenticated" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="o" type="java.lang.Object"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Andrew Hedges - andrew.hedges at gmail.com]]>
    </doc>
  </class>
  <!-- end class facebook4j.internal.http.HttpResponseEvent -->
  <!-- start class facebook4j.internal.http.HttpResponseImpl -->
  <class name="HttpResponseImpl" extends="facebook4j.internal.http.HttpResponse"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getResponseHeader" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getResponseHeaderFields" return="java.util.Map&lt;java.lang.String, java.util.List&lt;java.lang.String&gt;&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="disconnect"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[{@inheritDoc}]]>
      </doc>
    </method>
    <doc>
    <![CDATA[@author Yusuke Yamamoto - yusuke at mac.com
 @since Twitter4J 2.1.2]]>
    </doc>
  </class>
  <!-- end class facebook4j.internal.http.HttpResponseImpl -->
  <!-- start interface facebook4j.internal.http.HttpResponseListener -->
  <interface name="HttpResponseListener"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="httpResponseReceived"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="event" type="facebook4j.internal.http.HttpResponseEvent"/>
    </method>
    <doc>
    <![CDATA[@author Andrew Hedges - andrew.hedges at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.internal.http.HttpResponseListener -->
  <!-- start class facebook4j.internal.http.RequestMethod -->
  <class name="RequestMethod" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <implements name="java.io.Serializable"/>
    <method name="name" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="o" type="java.lang.Object"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <field name="GET" type="facebook4j.internal.http.RequestMethod"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="POST" type="facebook4j.internal.http.RequestMethod"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="DELETE" type="facebook4j.internal.http.RequestMethod"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="HEAD" type="facebook4j.internal.http.RequestMethod"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="PUT" type="facebook4j.internal.http.RequestMethod"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <doc>
    <![CDATA[@author Dan Checkoway - dcheckoway at gmail.com]]>
    </doc>
  </class>
  <!-- end class facebook4j.internal.http.RequestMethod -->
</package>
<package name="facebook4j.internal.json">
  <!-- start class facebook4j.internal.json.DataObjectFactoryUtil -->
  <class name="DataObjectFactoryUtil" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="clearThreadLocalMap"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[provides a public access to {DAOFactory#clearThreadLocalMap}]]>
      </doc>
    </method>
    <method name="registerJSONObject" return="T"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="T"/>
      <param name="json" type="java.lang.Object"/>
      <doc>
      <![CDATA[provides a public access to {DAOFactory#registerJSONObject}]]>
      </doc>
    </method>
    <doc>
    <![CDATA[provides public access to package private methods of facebook4j.json.DataObjectFactory class.<br>
 This class is not intended to be used by Twitter4J client.

 @author Yusuke Yamamoto - yusuke at mac.com]]>
    </doc>
  </class>
  <!-- end class facebook4j.internal.json.DataObjectFactoryUtil -->
  <!-- start class facebook4j.internal.json.InboxResponseListImpl -->
  <class name="InboxResponseListImpl" extends="facebook4j.internal.json.ResponseListImpl&lt;T&gt;"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.InboxResponseList&lt;T&gt;"/>
    <method name="getSummary" return="facebook4j.InboxResponseList.Summary"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
  </class>
  <!-- end class facebook4j.internal.json.InboxResponseListImpl -->
  <!-- start class facebook4j.internal.json.PageSettingJSONImpl -->
  <class name="PageSettingJSONImpl" extends="facebook4j.internal.json.FacebookResponseImpl"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.PageSetting"/>
    <implements name="java.io.Serializable"/>
    <method name="getSetting" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getValue" return="java.lang.Boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="o" type="java.lang.Object"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com
 @since Facebook4J 1.2.0]]>
    </doc>
  </class>
  <!-- end class facebook4j.internal.json.PageSettingJSONImpl -->
  <!-- start class facebook4j.internal.json.TaggedJSONImpl -->
  <class name="TaggedJSONImpl" extends="facebook4j.internal.json.FacebookResponseImpl"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.Tagged"/>
    <implements name="java.io.Serializable"/>
    <method name="getId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getType" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPost" return="facebook4j.Post"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPhoto" return="facebook4j.Photo"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getVideo" return="facebook4j.Video"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getMessage" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getMessageTags" return="java.util.Map&lt;java.lang.String, facebook4j.Tag[]&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getObjectId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPrivacy" return="facebook4j.Privacy"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getTo" return="java.util.List&lt;facebook4j.Category&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getUpdatedTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="o" type="java.lang.Object"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </class>
  <!-- end class facebook4j.internal.json.TaggedJSONImpl -->
  <!-- start class facebook4j.internal.json.TargetingJSONImpl -->
  <class name="TargetingJSONImpl" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.Targeting"/>
    <implements name="java.io.Serializable"/>
    <method name="getCountries" return="java.util.List&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCities" return="java.util.List&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getRegions" return="java.util.List&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLocales" return="java.util.List&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="o" type="java.lang.Object"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </class>
  <!-- end class facebook4j.internal.json.TargetingJSONImpl -->
  <!-- start interface facebook4j.internal.json.z_F4JInternalFactory -->
  <interface name="z_F4JInternalFactory"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.io.Serializable"/>
    <method name="createUser" return="facebook4j.User"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="json" type="facebook4j.internal.org.json.JSONObject"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createUser" return="facebook4j.User"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createUserList" return="facebook4j.ResponseList&lt;facebook4j.User&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createUserArray" return="java.util.List&lt;facebook4j.User&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createIdNameEntity" return="facebook4j.IdNameEntity"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createIdNameEntityList" return="facebook4j.ResponseList&lt;facebook4j.IdNameEntity&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createAccountList" return="facebook4j.ResponseList&lt;facebook4j.Account&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createAchievementList" return="facebook4j.ResponseList&lt;facebook4j.Achievement&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createActivityList" return="facebook4j.ResponseList&lt;facebook4j.Activity&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createAlbum" return="facebook4j.Album"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createAlbumList" return="facebook4j.ResponseList&lt;facebook4j.Album&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createBookList" return="facebook4j.ResponseList&lt;facebook4j.Book&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createCheckin" return="facebook4j.Checkin"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createCheckinList" return="facebook4j.ResponseList&lt;facebook4j.Checkin&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createComment" return="facebook4j.Comment"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createCommentList" return="facebook4j.ResponseList&lt;facebook4j.Comment&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createDomain" return="facebook4j.Domain"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createDomainArray" return="java.util.List&lt;facebook4j.Domain&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createEvent" return="facebook4j.Event"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createEventList" return="facebook4j.ResponseList&lt;facebook4j.Event&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createRSVPStatusList" return="facebook4j.ResponseList&lt;facebook4j.RSVPStatus&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createFamilyList" return="facebook4j.ResponseList&lt;facebook4j.Family&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createPostList" return="facebook4j.ResponseList&lt;facebook4j.Post&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createPost" return="facebook4j.Post"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createFriendlist" return="facebook4j.Friendlist"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createFriendlistList" return="facebook4j.ResponseList&lt;facebook4j.Friendlist&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createFriendRequestList" return="facebook4j.ResponseList&lt;facebook4j.FriendRequest&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createFriendList" return="facebook4j.ResponseList&lt;facebook4j.Friend&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createGameList" return="facebook4j.ResponseList&lt;facebook4j.Game&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createGroup" return="facebook4j.Group"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createGroupList" return="facebook4j.ResponseList&lt;facebook4j.Group&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createGroupDocList" return="facebook4j.ResponseList&lt;facebook4j.GroupDoc&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createInboxList" return="facebook4j.InboxResponseList&lt;facebook4j.Message&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createInterestList" return="facebook4j.ResponseList&lt;facebook4j.Interest&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createLikeList" return="facebook4j.ResponseList&lt;facebook4j.Like&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createLink" return="facebook4j.Link"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createLinkList" return="facebook4j.ResponseList&lt;facebook4j.Link&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createLocationList" return="facebook4j.ResponseList&lt;facebook4j.Location&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createMovieList" return="facebook4j.ResponseList&lt;facebook4j.Movie&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createMusicList" return="facebook4j.ResponseList&lt;facebook4j.Music&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createNote" return="facebook4j.Note"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createNoteList" return="facebook4j.ResponseList&lt;facebook4j.Note&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createNotificationList" return="facebook4j.ResponseList&lt;facebook4j.Notification&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createPage" return="facebook4j.Page"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createPageList" return="facebook4j.ResponseList&lt;facebook4j.Page&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createPageSettingList" return="facebook4j.ResponseList&lt;facebook4j.PageSetting&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createMessage" return="facebook4j.Message"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createMessageList" return="facebook4j.ResponseList&lt;facebook4j.Message&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createPermissions" return="java.util.List&lt;facebook4j.Permission&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createPlaceList" return="facebook4j.ResponseList&lt;facebook4j.Place&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createPhoto" return="facebook4j.Photo"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createPhotoList" return="facebook4j.ResponseList&lt;facebook4j.Photo&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createPokeList" return="facebook4j.ResponseList&lt;facebook4j.Poke&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createQuestion" return="facebook4j.Question"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createQuestionList" return="facebook4j.ResponseList&lt;facebook4j.Question&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createQuestionOptionList" return="facebook4j.ResponseList&lt;facebook4j.Question.Option&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createQuestionVotesList" return="facebook4j.ResponseList&lt;facebook4j.QuestionVotes&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createScoreList" return="facebook4j.ResponseList&lt;facebook4j.Score&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createSubscribedtoList" return="facebook4j.ResponseList&lt;facebook4j.Subscribedto&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createSubscriberList" return="facebook4j.ResponseList&lt;facebook4j.Subscriber&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createTelevisionList" return="facebook4j.ResponseList&lt;facebook4j.Television&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createVideo" return="facebook4j.Video"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createVideoList" return="facebook4j.ResponseList&lt;facebook4j.Video&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createTagList" return="facebook4j.ResponseList&lt;facebook4j.Tag&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createGroupMemberList" return="facebook4j.ResponseList&lt;facebook4j.GroupMember&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createInsightList" return="facebook4j.ResponseList&lt;facebook4j.Insight&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createTaggedList" return="facebook4j.ResponseList&lt;facebook4j.Tagged&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createMilestoneList" return="facebook4j.ResponseList&lt;facebook4j.Milestone&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createAdminList" return="facebook4j.ResponseList&lt;facebook4j.Admin&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createTabList" return="facebook4j.ResponseList&lt;facebook4j.Tab&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createOfferList" return="facebook4j.ResponseList&lt;facebook4j.Offer&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createOffer" return="facebook4j.Offer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createApplication" return="facebook4j.Application"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createTestUser" return="facebook4j.TestUser"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createTestUser" return="facebook4j.TestUser"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="json" type="facebook4j.internal.org.json.JSONObject"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createJSONObjectList" return="facebook4j.ResponseList&lt;facebook4j.internal.org.json.JSONObject&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createResponseList" return="facebook4j.ResponseList&lt;T&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <param name="jsonObjectType" type="java.lang.Class&lt;T&gt;"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.internal.json.z_F4JInternalFactory -->
  <!-- start class facebook4j.internal.json.z_F4JInternalJSONImplFactory -->
  <class name="z_F4JInternalJSONImplFactory" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.internal.json.z_F4JInternalFactory"/>
    <constructor name="z_F4JInternalJSONImplFactory" type="facebook4j.conf.Configuration"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="createUser" return="facebook4j.User"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createUser" return="facebook4j.User"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="json" type="facebook4j.internal.org.json.JSONObject"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createUserList" return="facebook4j.ResponseList&lt;facebook4j.User&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createUserArray" return="java.util.List&lt;facebook4j.User&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createIdNameEntity" return="facebook4j.IdNameEntity"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createIdNameEntityList" return="facebook4j.ResponseList&lt;facebook4j.IdNameEntity&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createAccountList" return="facebook4j.ResponseList&lt;facebook4j.Account&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createAchievementList" return="facebook4j.ResponseList&lt;facebook4j.Achievement&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createActivityList" return="facebook4j.ResponseList&lt;facebook4j.Activity&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createAlbum" return="facebook4j.Album"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createAlbumList" return="facebook4j.ResponseList&lt;facebook4j.Album&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createBookList" return="facebook4j.ResponseList&lt;facebook4j.Book&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createCheckin" return="facebook4j.Checkin"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createCheckinList" return="facebook4j.ResponseList&lt;facebook4j.Checkin&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createComment" return="facebook4j.Comment"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createCommentList" return="facebook4j.ResponseList&lt;facebook4j.Comment&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createDomain" return="facebook4j.Domain"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createDomainArray" return="java.util.List&lt;facebook4j.Domain&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createEvent" return="facebook4j.Event"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createEventList" return="facebook4j.ResponseList&lt;facebook4j.Event&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createRSVPStatusList" return="facebook4j.ResponseList&lt;facebook4j.RSVPStatus&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createFamilyList" return="facebook4j.ResponseList&lt;facebook4j.Family&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createPost" return="facebook4j.Post"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createPostList" return="facebook4j.ResponseList&lt;facebook4j.Post&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createFriendlist" return="facebook4j.Friendlist"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createFriendlistList" return="facebook4j.ResponseList&lt;facebook4j.Friendlist&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createFriendRequestList" return="facebook4j.ResponseList&lt;facebook4j.FriendRequest&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createFriendList" return="facebook4j.ResponseList&lt;facebook4j.Friend&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createGameList" return="facebook4j.ResponseList&lt;facebook4j.Game&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createGroup" return="facebook4j.Group"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createGroupList" return="facebook4j.ResponseList&lt;facebook4j.Group&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createGroupDocList" return="facebook4j.ResponseList&lt;facebook4j.GroupDoc&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createInboxList" return="facebook4j.InboxResponseList&lt;facebook4j.Message&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createInterestList" return="facebook4j.ResponseList&lt;facebook4j.Interest&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createLikeList" return="facebook4j.ResponseList&lt;facebook4j.Like&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createLink" return="facebook4j.Link"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createLinkList" return="facebook4j.ResponseList&lt;facebook4j.Link&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createLocationList" return="facebook4j.ResponseList&lt;facebook4j.Location&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createMovieList" return="facebook4j.ResponseList&lt;facebook4j.Movie&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createMusicList" return="facebook4j.ResponseList&lt;facebook4j.Music&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createNoteList" return="facebook4j.ResponseList&lt;facebook4j.Note&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createNotificationList" return="facebook4j.ResponseList&lt;facebook4j.Notification&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createMessage" return="facebook4j.Message"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createMessageList" return="facebook4j.ResponseList&lt;facebook4j.Message&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createNote" return="facebook4j.Note"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createPage" return="facebook4j.Page"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createPageList" return="facebook4j.ResponseList&lt;facebook4j.Page&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createPageSettingList" return="facebook4j.ResponseList&lt;facebook4j.PageSetting&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createPermissions" return="java.util.List&lt;facebook4j.Permission&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createPlaceList" return="facebook4j.ResponseList&lt;facebook4j.Place&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createPhoto" return="facebook4j.Photo"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createPhotoList" return="facebook4j.ResponseList&lt;facebook4j.Photo&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createPokeList" return="facebook4j.ResponseList&lt;facebook4j.Poke&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createQuestion" return="facebook4j.Question"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createQuestionList" return="facebook4j.ResponseList&lt;facebook4j.Question&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createQuestionOptionList" return="facebook4j.ResponseList&lt;facebook4j.Question.Option&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createQuestionVotesList" return="facebook4j.ResponseList&lt;facebook4j.QuestionVotes&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createScoreList" return="facebook4j.ResponseList&lt;facebook4j.Score&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createSubscribedtoList" return="facebook4j.ResponseList&lt;facebook4j.Subscribedto&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createSubscriberList" return="facebook4j.ResponseList&lt;facebook4j.Subscriber&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createTagList" return="facebook4j.ResponseList&lt;facebook4j.Tag&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createTelevisionList" return="facebook4j.ResponseList&lt;facebook4j.Television&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createVideo" return="facebook4j.Video"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createVideoList" return="facebook4j.ResponseList&lt;facebook4j.Video&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createGroupMemberList" return="facebook4j.ResponseList&lt;facebook4j.GroupMember&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createInsightList" return="facebook4j.ResponseList&lt;facebook4j.Insight&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createTaggedList" return="facebook4j.ResponseList&lt;facebook4j.Tagged&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createMilestoneList" return="facebook4j.ResponseList&lt;facebook4j.Milestone&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createAdminList" return="facebook4j.ResponseList&lt;facebook4j.Admin&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createTabList" return="facebook4j.ResponseList&lt;facebook4j.Tab&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createOfferList" return="facebook4j.ResponseList&lt;facebook4j.Offer&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createOffer" return="facebook4j.Offer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createApplication" return="facebook4j.Application"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createTestUser" return="facebook4j.TestUser"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createTestUser" return="facebook4j.TestUser"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="json" type="facebook4j.internal.org.json.JSONObject"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="createJSONObjectList" return="facebook4j.ResponseList&lt;facebook4j.internal.org.json.JSONObject&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="o" type="java.lang.Object"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="createResponseList" return="facebook4j.ResponseList&lt;T&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="res" type="facebook4j.internal.http.HttpResponse"/>
      <param name="jsonObjectType" type="java.lang.Class&lt;T&gt;"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </class>
  <!-- end class facebook4j.internal.json.z_F4JInternalJSONImplFactory -->
</package>
<package name="facebook4j.internal.logging">
  <!-- start class facebook4j.internal.logging.Logger -->
  <class name="Logger" extends="java.lang.Object"
    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="Logger"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getLogger" return="facebook4j.internal.logging.Logger"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="clazz" type="java.lang.Class"/>
      <doc>
      <![CDATA[Returns a Logger instance associated with the specified class.

 @param clazz class
 @return logger instance]]>
      </doc>
    </method>
    <method name="isDebugEnabled" return="boolean"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[tests if debug level logging is enabled

 @return if debug level logging is enabled]]>
      </doc>
    </method>
    <method name="isInfoEnabled" return="boolean"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[tests if info level logging is enabled

 @return if info level logging is enabled]]>
      </doc>
    </method>
    <method name="isWarnEnabled" return="boolean"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[tests if warn level logging is enabled

 @return if warn level logging is enabled]]>
      </doc>
    </method>
    <method name="isErrorEnabled" return="boolean"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[tests if error level logging is enabled

 @return if error level logging is enabled]]>
      </doc>
    </method>
    <method name="debug"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="message" type="java.lang.String"/>
      <doc>
      <![CDATA[@param message message]]>
      </doc>
    </method>
    <method name="debug"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="message" type="java.lang.String"/>
      <param name="message2" type="java.lang.String"/>
      <doc>
      <![CDATA[@param message  message
 @param message2 message2]]>
      </doc>
    </method>
    <method name="info"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="message" type="java.lang.String"/>
      <doc>
      <![CDATA[@param message message]]>
      </doc>
    </method>
    <method name="info"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="message" type="java.lang.String"/>
      <param name="message2" type="java.lang.String"/>
      <doc>
      <![CDATA[@param message  message
 @param message2 message2]]>
      </doc>
    </method>
    <method name="warn"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="message" type="java.lang.String"/>
      <doc>
      <![CDATA[@param message message]]>
      </doc>
    </method>
    <method name="warn"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="message" type="java.lang.String"/>
      <param name="message2" type="java.lang.String"/>
      <doc>
      <![CDATA[@param message  message
 @param message2 message2]]>
      </doc>
    </method>
    <method name="error"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="message" type="java.lang.String"/>
      <doc>
      <![CDATA[@param message message]]>
      </doc>
    </method>
    <method name="error"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="message" type="java.lang.String"/>
      <param name="th" type="java.lang.Throwable"/>
      <doc>
      <![CDATA[@param message message
 @param th      throwable]]>
      </doc>
    </method>
    <doc>
    <![CDATA[@author Yusuke Yamamoto - yusuke at mac.com
 @since Twitter4J 2.1.0]]>
    </doc>
  </class>
  <!-- end class facebook4j.internal.logging.Logger -->
  <!-- start class facebook4j.internal.logging.LoggerFactory -->
  <class name="LoggerFactory" extends="java.lang.Object"
    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="LoggerFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getLogger" return="facebook4j.internal.logging.Logger"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="clazz" type="java.lang.Class"/>
      <doc>
      <![CDATA[Returns a logger associated with the specified class.

 @param clazz class
 @return a logger instance]]>
      </doc>
    </method>
    <doc>
    <![CDATA[@author Yusuke Yamamoto - yusuke at mac.com
 @since Twitter4J 2.1.1]]>
    </doc>
  </class>
  <!-- end class facebook4j.internal.logging.LoggerFactory -->
</package>
<package name="facebook4j.internal.org.json">
  <!-- start class facebook4j.internal.org.json.CDL -->
  <class name="CDL" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="CDL"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="rowToJSONArray" return="facebook4j.internal.org.json.JSONArray"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="x" type="facebook4j.internal.org.json.JSONTokener"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Produce a JSONArray of strings from a row of comma delimited values.
 @param x A JSONTokener of the source text.
 @return A JSONArray of strings.
 @throws JSONException]]>
      </doc>
    </method>
    <method name="rowToJSONObject" return="facebook4j.internal.org.json.JSONObject"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="names" type="facebook4j.internal.org.json.JSONArray"/>
      <param name="x" type="facebook4j.internal.org.json.JSONTokener"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Produce a JSONObject from a row of comma delimited text, using a
 parallel JSONArray of strings to provides the names of the elements.
 @param names A JSONArray of names. This is commonly obtained from the
  first row of a comma delimited text file using the rowToJSONArray
  method.
 @param x A JSONTokener of the source text.
 @return A JSONObject combining the names and values.
 @throws JSONException]]>
      </doc>
    </method>
    <method name="rowToString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ja" type="facebook4j.internal.org.json.JSONArray"/>
      <doc>
      <![CDATA[Produce a comma delimited text row from a JSONArray. Values containing
 the comma character will be quoted. Troublesome characters may be 
 removed.
 @param ja A JSONArray of strings.
 @return A string ending in NEWLINE.]]>
      </doc>
    </method>
    <method name="toJSONArray" return="facebook4j.internal.org.json.JSONArray"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="string" type="java.lang.String"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Produce a JSONArray of JSONObjects from a comma delimited text string,
 using the first row as a source of names.
 @param string The comma delimited text.
 @return A JSONArray of JSONObjects.
 @throws JSONException]]>
      </doc>
    </method>
    <method name="toJSONArray" return="facebook4j.internal.org.json.JSONArray"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="x" type="facebook4j.internal.org.json.JSONTokener"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Produce a JSONArray of JSONObjects from a comma delimited text string,
 using the first row as a source of names.
 @param x The JSONTokener containing the comma delimited text.
 @return A JSONArray of JSONObjects.
 @throws JSONException]]>
      </doc>
    </method>
    <method name="toJSONArray" return="facebook4j.internal.org.json.JSONArray"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="names" type="facebook4j.internal.org.json.JSONArray"/>
      <param name="string" type="java.lang.String"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Produce a JSONArray of JSONObjects from a comma delimited text string
 using a supplied JSONArray as the source of element names.
 @param names A JSONArray of strings.
 @param string The comma delimited text.
 @return A JSONArray of JSONObjects.
 @throws JSONException]]>
      </doc>
    </method>
    <method name="toJSONArray" return="facebook4j.internal.org.json.JSONArray"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="names" type="facebook4j.internal.org.json.JSONArray"/>
      <param name="x" type="facebook4j.internal.org.json.JSONTokener"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Produce a JSONArray of JSONObjects from a comma delimited text string
 using a supplied JSONArray as the source of element names.
 @param names A JSONArray of strings.
 @param x A JSONTokener of the source text.
 @return A JSONArray of JSONObjects.
 @throws JSONException]]>
      </doc>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ja" type="facebook4j.internal.org.json.JSONArray"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Produce a comma delimited text from a JSONArray of JSONObjects. The
 first row will be a list of names obtained by inspecting the first
 JSONObject.
 @param ja A JSONArray of JSONObjects.
 @return A comma delimited text.
 @throws JSONException]]>
      </doc>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="names" type="facebook4j.internal.org.json.JSONArray"/>
      <param name="ja" type="facebook4j.internal.org.json.JSONArray"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Produce a comma delimited text from a JSONArray of JSONObjects using
 a provided list of names. The list of names is not included in the
 output.
 @param names A JSONArray of strings.
 @param ja A JSONArray of JSONObjects.
 @return A comma delimited text.
 @throws JSONException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[This provides static methods to convert comma delimited text into a
 JSONArray, and to covert a JSONArray into comma delimited text. Comma
 delimited text is a very popular format for data interchange. It is
 understood by most database, spreadsheet, and organizer programs.
 <p>
 Each row of text represents a row in a table or a data record. Each row
 ends with a NEWLINE character. Each row contains one or more values.
 Values are separated by commas. A value can contain any character except
 for comma, unless is is wrapped in single quotes or double quotes.
 <p>
 The first row usually contains the names of the columns.
 <p>
 A comma delimited list can be converted into a JSONArray of JSONObjects.
 The names for the elements in the JSONObjects can be taken from the names
 in the first row.
 @author JSON.org
 @version 2010-12-24]]>
    </doc>
  </class>
  <!-- end class facebook4j.internal.org.json.CDL -->
  <!-- start class facebook4j.internal.org.json.Cookie -->
  <class name="Cookie" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="Cookie"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="escape" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="string" type="java.lang.String"/>
      <doc>
      <![CDATA[Produce a copy of a string in which the characters '+', '%', '=', ';'
 and control characters are replaced with "%hh". This is a gentle form
 of URL encoding, attempting to cause as little distortion to the
 string as possible. The characters '=' and ';' are meta characters in
 cookies. By convention, they are escaped using the URL-encoding. This is
 only a convention, not a standard. Often, cookies are expected to have
 encoded values. We encode '=' and ';' because we must. We encode '%' and
 '+' because they are meta characters in URL encoding.
 @param string The source string.
 @return       The escaped result.]]>
      </doc>
    </method>
    <method name="toJSONObject" return="facebook4j.internal.org.json.JSONObject"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="string" type="java.lang.String"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Convert a cookie specification string into a JSONObject. The string
 will contain a name value pair separated by '='. The name and the value
 will be unescaped, possibly converting '+' and '%' sequences. The
 cookie properties may follow, separated by ';', also represented as
 name=value (except the secure property, which does not have a value).
 The name will be stored under the key "name", and the value will be
 stored under the key "value". This method does not do checking or
 validation of the parameters. It only converts the cookie string into
 a JSONObject.
 @param string The cookie specification string.
 @return A JSONObject containing "name", "value", and possibly other
  members.
 @throws JSONException]]>
      </doc>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="jo" type="facebook4j.internal.org.json.JSONObject"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Convert a JSONObject into a cookie specification string. The JSONObject
 must contain "name" and "value" members.
 If the JSONObject contains "expires", "domain", "path", or "secure"
 members, they will be appended to the cookie specification string.
 All other members are ignored.
 @param jo A JSONObject
 @return A cookie specification string
 @throws JSONException]]>
      </doc>
    </method>
    <method name="unescape" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="string" type="java.lang.String"/>
      <doc>
      <![CDATA[Convert <code>%</code><i>hh</i> sequences to single characters, and
 convert plus to space.
 @param string A string that may contain
      <code>+</code>&nbsp;<small>(plus)</small> and
      <code>%</code><i>hh</i> sequences.
 @return The unescaped string.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Convert a web browser cookie specification to a JSONObject and back.
 JSON and Cookies are both notations for name/value pairs.
 @author JSON.org
 @version 2010-12-24]]>
    </doc>
  </class>
  <!-- end class facebook4j.internal.org.json.Cookie -->
  <!-- start class facebook4j.internal.org.json.CookieList -->
  <class name="CookieList" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="CookieList"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="toJSONObject" return="facebook4j.internal.org.json.JSONObject"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="string" type="java.lang.String"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Convert a cookie list into a JSONObject. A cookie list is a sequence
 of name/value pairs. The names are separated from the values by '='.
 The pairs are separated by ';'. The names and the values
 will be unescaped, possibly converting '+' and '%' sequences.

 To add a cookie to a cooklist,
 cookielistJSONObject.put(cookieJSONObject.getString("name"),
     cookieJSONObject.getString("value"));
 @param string  A cookie list string
 @return A JSONObject
 @throws JSONException]]>
      </doc>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="jo" type="facebook4j.internal.org.json.JSONObject"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Convert a JSONObject into a cookie list. A cookie list is a sequence
 of name/value pairs. The names are separated from the values by '='.
 The pairs are separated by ';'. The characters '%', '+', '=', and ';'
 in the names and values are replaced by "%hh".
 @param jo A JSONObject
 @return A cookie list string
 @throws JSONException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Convert a web browser cookie list string to a JSONObject and back.
 @author JSON.org
 @version 2010-12-24]]>
    </doc>
  </class>
  <!-- end class facebook4j.internal.org.json.CookieList -->
  <!-- start class facebook4j.internal.org.json.HTTP -->
  <class name="HTTP" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="HTTP"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="toJSONObject" return="facebook4j.internal.org.json.JSONObject"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="string" type="java.lang.String"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Convert an HTTP header string into a JSONObject. It can be a request
 header or a response header. A request header will contain
 <pre>{
    Method: "POST" (for example),
    "Request-URI": "/" (for example),
    "HTTP-Version": "HTTP/1.1" (for example)
 }</pre>
 A response header will contain
 <pre>{
    "HTTP-Version": "HTTP/1.1" (for example),
    "Status-Code": "200" (for example),
    "Reason-Phrase": "OK" (for example)
 }</pre>
 In addition, the other parameters in the header will be captured, using
 the HTTP field names as JSON names, so that <pre>
    Date: Sun, 26 May 2002 18:06:04 GMT
    Cookie: Q=q2=PPEAsg--; B=677gi6ouf29bn&b=2&f=s
    Cache-Control: no-cache</pre>
 become
 <pre>{...
    Date: "Sun, 26 May 2002 18:06:04 GMT",
    Cookie: "Q=q2=PPEAsg--; B=677gi6ouf29bn&b=2&f=s",
    "Cache-Control": "no-cache",
 ...}</pre>
 It does no further checking or conversion. It does not parse dates.
 It does not do '%' transforms on URLs.
 @param string An HTTP header string.
 @return A JSONObject containing the elements and attributes
 of the XML string.
 @throws JSONException]]>
      </doc>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="jo" type="facebook4j.internal.org.json.JSONObject"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Convert a JSONObject into an HTTP header. A request header must contain
 <pre>{
    Method: "POST" (for example),
    "Request-URI": "/" (for example),
    "HTTP-Version": "HTTP/1.1" (for example)
 }</pre>
 A response header must contain
 <pre>{
    "HTTP-Version": "HTTP/1.1" (for example),
    "Status-Code": "200" (for example),
    "Reason-Phrase": "OK" (for example)
 }</pre>
 Any other members of the JSONObject will be output as HTTP fields.
 The result will end with two CRLF pairs.
 @param jo A JSONObject
 @return An HTTP header string.
 @throws JSONException if the object does not contain enough
  information.]]>
      </doc>
    </method>
    <field name="CRLF" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Carriage return/line feed.]]>
      </doc>
    </field>
    <doc>
    <![CDATA[Convert an HTTP header to a JSONObject and back.
 @author JSON.org
 @version 2010-12-24]]>
    </doc>
  </class>
  <!-- end class facebook4j.internal.org.json.HTTP -->
  <!-- start class facebook4j.internal.org.json.HTTPTokener -->
  <class name="HTTPTokener" extends="facebook4j.internal.org.json.JSONTokener"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="HTTPTokener" type="java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Construct an HTTPTokener from a string.
 @param string A source string.]]>
      </doc>
    </constructor>
    <method name="nextToken" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Get the next token or string. This is used in parsing HTTP headers.
 @throws JSONException
 @return A String.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[The HTTPTokener extends the JSONTokener to provide additional methods
 for the parsing of HTTP headers.
 @author JSON.org
 @version 2010-12-24]]>
    </doc>
  </class>
  <!-- end class facebook4j.internal.org.json.HTTPTokener -->
  <!-- start class facebook4j.internal.org.json.JSONArray -->
  <class name="JSONArray" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="JSONArray"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Construct an empty JSONArray.]]>
      </doc>
    </constructor>
    <constructor name="JSONArray" type="facebook4j.internal.org.json.JSONTokener"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Construct a JSONArray from a JSONTokener.

 @param x A JSONTokener
 @throws JSONException If there is a syntax error.]]>
      </doc>
    </constructor>
    <constructor name="JSONArray" type="java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Construct a JSONArray from a source JSON text.

 @param source A string that begins with
               <code>[</code>&nbsp;<small>(left bracket)</small>
               and ends with <code>]</code>&nbsp;<small>(right bracket)</small>.
 @throws JSONException If there is a syntax error.]]>
      </doc>
    </constructor>
    <constructor name="JSONArray" type="java.util.Collection"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Construct a JSONArray from a Collection.

 @param collection A Collection.]]>
      </doc>
    </constructor>
    <constructor name="JSONArray" type="java.lang.Object"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Construct a JSONArray from an array

 @throws JSONException If not an array.]]>
      </doc>
    </constructor>
    <method name="get" return="java.lang.Object"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="index" type="int"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Get the object value associated with an index.

 @param index The index must be between 0 and length() - 1.
 @return An object value.
 @throws JSONException If there is no value for the index.]]>
      </doc>
    </method>
    <method name="getBoolean" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="index" type="int"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Get the boolean value associated with an index.
 The string values "true" and "false" are converted to boolean.

 @param index The index must be between 0 and length() - 1.
 @return The truth.
 @throws JSONException If there is no value for the index or if the
                       value is not convertible to boolean.]]>
      </doc>
    </method>
    <method name="getDouble" return="double"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="index" type="int"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Get the double value associated with an index.

 @param index The index must be between 0 and length() - 1.
 @return The value.
 @throws JSONException If the key is not found or if the value cannot
                       be converted to a number.]]>
      </doc>
    </method>
    <method name="getInt" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="index" type="int"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Get the int value associated with an index.

 @param index The index must be between 0 and length() - 1.
 @return The value.
 @throws JSONException If the key is not found or if the value is not a number.]]>
      </doc>
    </method>
    <method name="getJSONArray" return="facebook4j.internal.org.json.JSONArray"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="index" type="int"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Get the JSONArray associated with an index.

 @param index The index must be between 0 and length() - 1.
 @return A JSONArray value.
 @throws JSONException If there is no value for the index. or if the
                       value is not a JSONArray]]>
      </doc>
    </method>
    <method name="getJSONObject" return="facebook4j.internal.org.json.JSONObject"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="index" type="int"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Get the JSONObject associated with an index.

 @param index subscript
 @return A JSONObject value.
 @throws JSONException If there is no value for the index or if the
                       value is not a JSONObject]]>
      </doc>
    </method>
    <method name="getLong" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="index" type="int"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Get the long value associated with an index.

 @param index The index must be between 0 and length() - 1.
 @return The value.
 @throws JSONException If the key is not found or if the value cannot
                       be converted to a number.]]>
      </doc>
    </method>
    <method name="getString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="index" type="int"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Get the string associated with an index.

 @param index The index must be between 0 and length() - 1.
 @return A string value.
 @throws JSONException If there is no value for the index.]]>
      </doc>
    </method>
    <method name="isNull" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="index" type="int"/>
      <doc>
      <![CDATA[Determine if the value is null.

 @param index The index must be between 0 and length() - 1.
 @return true if the value at the index is null, or if there is no value.]]>
      </doc>
    </method>
    <method name="join" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="separator" type="java.lang.String"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Make a string from the contents of this JSONArray. The
 <code>separator</code> string is inserted between each element.
 Warning: This method assumes that the data structure is acyclical.

 @param separator A string that will be inserted between the elements.
 @return a string.
 @throws JSONException If the array contains an invalid number.]]>
      </doc>
    </method>
    <method name="length" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the number of elements in the JSONArray, included nulls.

 @return The length (or size).]]>
      </doc>
    </method>
    <method name="opt" return="java.lang.Object"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="index" type="int"/>
      <doc>
      <![CDATA[Get the optional object value associated with an index.

 @param index The index must be between 0 and length() - 1.
 @return An object value, or null if there is no
         object at that index.]]>
      </doc>
    </method>
    <method name="optBoolean" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="index" type="int"/>
      <doc>
      <![CDATA[Get the optional boolean value associated with an index.
 It returns false if there is no value at that index,
 or if the value is not Boolean.TRUE or the String "true".

 @param index The index must be between 0 and length() - 1.
 @return The truth.]]>
      </doc>
    </method>
    <method name="optBoolean" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="index" type="int"/>
      <param name="defaultValue" type="boolean"/>
      <doc>
      <![CDATA[Get the optional boolean value associated with an index.
 It returns the defaultValue if there is no value at that index or if
 it is not a Boolean or the String "true" or "false" (case insensitive).

 @param index        The index must be between 0 and length() - 1.
 @param defaultValue A boolean default.
 @return The truth.]]>
      </doc>
    </method>
    <method name="optDouble" return="double"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="index" type="int"/>
      <doc>
      <![CDATA[Get the optional double value associated with an index.
 NaN is returned if there is no value for the index,
 or if the value is not a number and cannot be converted to a number.

 @param index The index must be between 0 and length() - 1.
 @return The value.]]>
      </doc>
    </method>
    <method name="optDouble" return="double"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="index" type="int"/>
      <param name="defaultValue" type="double"/>
      <doc>
      <![CDATA[Get the optional double value associated with an index.
 The defaultValue is returned if there is no value for the index,
 or if the value is not a number and cannot be converted to a number.

 @param index        subscript
 @param defaultValue The default value.
 @return The value.]]>
      </doc>
    </method>
    <method name="optInt" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="index" type="int"/>
      <doc>
      <![CDATA[Get the optional int value associated with an index.
 Zero is returned if there is no value for the index,
 or if the value is not a number and cannot be converted to a number.

 @param index The index must be between 0 and length() - 1.
 @return The value.]]>
      </doc>
    </method>
    <method name="optInt" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="index" type="int"/>
      <param name="defaultValue" type="int"/>
      <doc>
      <![CDATA[Get the optional int value associated with an index.
 The defaultValue is returned if there is no value for the index,
 or if the value is not a number and cannot be converted to a number.

 @param index        The index must be between 0 and length() - 1.
 @param defaultValue The default value.
 @return The value.]]>
      </doc>
    </method>
    <method name="optJSONArray" return="facebook4j.internal.org.json.JSONArray"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="index" type="int"/>
      <doc>
      <![CDATA[Get the optional JSONArray associated with an index.

 @param index subscript
 @return A JSONArray value, or null if the index has no value,
         or if the value is not a JSONArray.]]>
      </doc>
    </method>
    <method name="optJSONObject" return="facebook4j.internal.org.json.JSONObject"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="index" type="int"/>
      <doc>
      <![CDATA[Get the optional JSONObject associated with an index.
 Null is returned if the key is not found, or null if the index has
 no value, or if the value is not a JSONObject.

 @param index The index must be between 0 and length() - 1.
 @return A JSONObject value.]]>
      </doc>
    </method>
    <method name="optLong" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="index" type="int"/>
      <doc>
      <![CDATA[Get the optional long value associated with an index.
 Zero is returned if there is no value for the index,
 or if the value is not a number and cannot be converted to a number.

 @param index The index must be between 0 and length() - 1.
 @return The value.]]>
      </doc>
    </method>
    <method name="optLong" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="index" type="int"/>
      <param name="defaultValue" type="long"/>
      <doc>
      <![CDATA[Get the optional long value associated with an index.
 The defaultValue is returned if there is no value for the index,
 or if the value is not a number and cannot be converted to a number.

 @param index        The index must be between 0 and length() - 1.
 @param defaultValue The default value.
 @return The value.]]>
      </doc>
    </method>
    <method name="optString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="index" type="int"/>
      <doc>
      <![CDATA[Get the optional string value associated with an index. It returns an
 empty string if there is no value at that index. If the value
 is not a string and is not null, then it is coverted to a string.

 @param index The index must be between 0 and length() - 1.
 @return A String value.]]>
      </doc>
    </method>
    <method name="optString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="index" type="int"/>
      <param name="defaultValue" type="java.lang.String"/>
      <doc>
      <![CDATA[Get the optional string associated with an index.
 The defaultValue is returned if the key is not found.

 @param index        The index must be between 0 and length() - 1.
 @param defaultValue The default value.
 @return A String value.]]>
      </doc>
    </method>
    <method name="put" return="facebook4j.internal.org.json.JSONArray"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="value" type="boolean"/>
      <doc>
      <![CDATA[Append a boolean value. This increases the array's length by one.

 @param value A boolean value.
 @return this.]]>
      </doc>
    </method>
    <method name="put" return="facebook4j.internal.org.json.JSONArray"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="value" type="java.util.Collection"/>
      <doc>
      <![CDATA[Put a value in the JSONArray, where the value will be a
 JSONArray which is produced from a Collection.

 @param value A Collection value.
 @return this.]]>
      </doc>
    </method>
    <method name="put" return="facebook4j.internal.org.json.JSONArray"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="value" type="double"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Append a double value. This increases the array's length by one.

 @param value A double value.
 @return this.
 @throws JSONException if the value is not finite.]]>
      </doc>
    </method>
    <method name="put" return="facebook4j.internal.org.json.JSONArray"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="value" type="int"/>
      <doc>
      <![CDATA[Append an int value. This increases the array's length by one.

 @param value An int value.
 @return this.]]>
      </doc>
    </method>
    <method name="put" return="facebook4j.internal.org.json.JSONArray"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="value" type="long"/>
      <doc>
      <![CDATA[Append an long value. This increases the array's length by one.

 @param value A long value.
 @return this.]]>
      </doc>
    </method>
    <method name="put" return="facebook4j.internal.org.json.JSONArray"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="value" type="java.util.Map"/>
      <doc>
      <![CDATA[Put a value in the JSONArray, where the value will be a
 JSONObject which is produced from a Map.

 @param value A Map value.
 @return this.]]>
      </doc>
    </method>
    <method name="put" return="facebook4j.internal.org.json.JSONArray"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="value" type="java.lang.Object"/>
      <doc>
      <![CDATA[Append an object value. This increases the array's length by one.

 @param value An object value.  The value should be a
              Boolean, Double, Integer, JSONArray, JSONObject, Long, or String, or the
              JSONObject.NULL object.
 @return this.]]>
      </doc>
    </method>
    <method name="put" return="facebook4j.internal.org.json.JSONArray"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="index" type="int"/>
      <param name="value" type="boolean"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Put or replace a boolean value in the JSONArray. If the index is greater
 than the length of the JSONArray, then null elements will be added as
 necessary to pad it out.

 @param index The subscript.
 @param value A boolean value.
 @return this.
 @throws JSONException If the index is negative.]]>
      </doc>
    </method>
    <method name="put" return="facebook4j.internal.org.json.JSONArray"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="index" type="int"/>
      <param name="value" type="java.util.Collection"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Put a value in the JSONArray, where the value will be a
 JSONArray which is produced from a Collection.

 @param index The subscript.
 @param value A Collection value.
 @return this.
 @throws JSONException If the index is negative or if the value is
                       not finite.]]>
      </doc>
    </method>
    <method name="put" return="facebook4j.internal.org.json.JSONArray"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="index" type="int"/>
      <param name="value" type="double"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Put or replace a double value. If the index is greater than the length of
 the JSONArray, then null elements will be added as necessary to pad
 it out.

 @param index The subscript.
 @param value A double value.
 @return this.
 @throws JSONException If the index is negative or if the value is
                       not finite.]]>
      </doc>
    </method>
    <method name="put" return="facebook4j.internal.org.json.JSONArray"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="index" type="int"/>
      <param name="value" type="int"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Put or replace an int value. If the index is greater than the length of
 the JSONArray, then null elements will be added as necessary to pad
 it out.

 @param index The subscript.
 @param value An int value.
 @return this.
 @throws JSONException If the index is negative.]]>
      </doc>
    </method>
    <method name="put" return="facebook4j.internal.org.json.JSONArray"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="index" type="int"/>
      <param name="value" type="long"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Put or replace a long value. If the index is greater than the length of
 the JSONArray, then null elements will be added as necessary to pad
 it out.

 @param index The subscript.
 @param value A long value.
 @return this.
 @throws JSONException If the index is negative.]]>
      </doc>
    </method>
    <method name="put" return="facebook4j.internal.org.json.JSONArray"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="index" type="int"/>
      <param name="value" type="java.util.Map"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Put a value in the JSONArray, where the value will be a
 JSONObject which is produced from a Map.

 @param index The subscript.
 @param value The Map value.
 @return this.
 @throws JSONException If the index is negative or if the the value is
                       an invalid number.]]>
      </doc>
    </method>
    <method name="put" return="facebook4j.internal.org.json.JSONArray"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="index" type="int"/>
      <param name="value" type="java.lang.Object"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Put or replace an object value in the JSONArray. If the index is greater
 than the length of the JSONArray, then null elements will be added as
 necessary to pad it out.

 @param index The subscript.
 @param value The value to put into the array. The value should be a
              Boolean, Double, Integer, JSONArray, JSONObject, Long, or String, or the
              JSONObject.NULL object.
 @return this.
 @throws JSONException If the index is negative or if the the value is
                       an invalid number.]]>
      </doc>
    </method>
    <method name="remove" return="java.lang.Object"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="index" type="int"/>
      <doc>
      <![CDATA[Remove an index and close the hole.

 @param index The index of the element to be removed.
 @return The value that was associated with the index,
         or null if there was no value.]]>
      </doc>
    </method>
    <method name="toJSONObject" return="facebook4j.internal.org.json.JSONObject"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="names" type="facebook4j.internal.org.json.JSONArray"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Produce a JSONObject by combining a JSONArray of names with the values
 of this JSONArray.

 @param names A JSONArray containing a list of key strings. These will be
              paired with the values.
 @return A JSONObject, or null if there are no names or if this JSONArray
         has no values.
 @throws JSONException If any of the names are null.]]>
      </doc>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Make a JSON text of this JSONArray. For compactness, no
 unnecessary whitespace is added. If it is not possible to produce a
 syntactically correct JSON text then null will be returned instead. This
 could occur if the array contains an invalid number.
 <p/>
 Warning: This method assumes that the data structure is acyclical.

 @return a printable, displayable, transmittable
         representation of the array.]]>
      </doc>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="indentFactor" type="int"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Make a prettyprinted JSON text of this JSONArray.
 Warning: This method assumes that the data structure is acyclical.

 @param indentFactor The number of spaces to add to each level of
                     indentation.
 @return a printable, displayable, transmittable
         representation of the object, beginning
         with <code>[</code>&nbsp;<small>(left bracket)</small> and ending
         with <code>]</code>&nbsp;<small>(right bracket)</small>.
 @throws JSONException]]>
      </doc>
    </method>
    <method name="write" return="java.io.Writer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="writer" type="java.io.Writer"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Write the contents of the JSONArray as JSON text to a writer.
 For compactness, no whitespace is added.
 <p/>
 Warning: This method assumes that the data structure is acyclical.

 @return The writer.
 @throws JSONException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[A JSONArray is an ordered sequence of values. Its external text form is a
 string wrapped in square brackets with commas separating the values. The
 internal form is an object having <code>get</code> and <code>opt</code>
 methods for accessing the values by index, and <code>put</code> methods for
 adding or replacing values. The values can be any of these types:
 <code>Boolean</code>, <code>JSONArray</code>, <code>JSONObject</code>,
 <code>Number</code>, <code>String</code>, or the
 <code>JSONObject.NULL object</code>.
 <p/>
 The constructor can convert a JSON text into a Java object. The
 <code>toString</code> method converts to JSON text.
 <p/>
 A <code>get</code> method returns a value if one can be found, and throws an
 exception if one cannot be found. An <code>opt</code> method returns a
 default value instead of throwing an exception, and so is useful for
 obtaining optional values.
 <p/>
 The generic <code>get()</code> and <code>opt()</code> methods return an
 object which you can cast or query for type. There are also typed
 <code>get</code> and <code>opt</code> methods that do type checking and type
 coercion for you.
 <p/>
 The texts produced by the <code>toString</code> methods strictly conform to
 JSON syntax rules. The constructors are more forgiving in the texts they will
 accept:
 <ul>
 <li>An extra <code>,</code>&nbsp;<small>(comma)</small> may appear just
 before the closing bracket.</li>
 <li>The <code>null</code> value will be inserted when there
 is <code>,</code>&nbsp;<small>(comma)</small> elision.</li>
 <li>Strings may be quoted with <code>'</code>&nbsp;<small>(single
 quote)</small>.</li>
 <li>Strings do not need to be quoted at all if they do not begin with a quote
 or single quote, and if they do not contain leading or trailing spaces,
 and if they do not contain any of these characters:
 <code>{ } [ ] / \ : , = ; #</code> and if they do not look like numbers
 and if they are not the reserved words <code>true</code>,
 <code>false</code>, or <code>null</code>.</li>
 <li>Values can be separated by <code>;</code> <small>(semicolon)</small> as
 well as by <code>,</code> <small>(comma)</small>.</li>
 <li>Numbers may have the
 <code>0x-</code> <small>(hex)</small> prefix.</li>
 </ul>

 @author JSON.org
 @version 2010-12-28]]>
    </doc>
  </class>
  <!-- end class facebook4j.internal.org.json.JSONArray -->
  <!-- start class facebook4j.internal.org.json.JSONException -->
  <class name="JSONException" extends="java.lang.Exception"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="JSONException" type="java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructs a JSONException with an explanatory message.
 @param message Detail about the reason for the exception.]]>
      </doc>
    </constructor>
    <constructor name="JSONException" type="java.lang.Throwable"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getCause" return="java.lang.Throwable"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[The JSONException is thrown by the JSON.org classes when things are amiss.
 @author JSON.org
 @version 2010-12-24]]>
    </doc>
  </class>
  <!-- end class facebook4j.internal.org.json.JSONException -->
  <!-- start class facebook4j.internal.org.json.JSONML -->
  <class name="JSONML" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="JSONML"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="toJSONArray" return="facebook4j.internal.org.json.JSONArray"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="string" type="java.lang.String"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      
      </doc>
    </method>
    <method name="toJSONArray" return="facebook4j.internal.org.json.JSONArray"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="x" type="facebook4j.internal.org.json.XMLTokener"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      
      </doc>
    </method>
    <method name="toJSONObject" return="facebook4j.internal.org.json.JSONObject"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="x" type="facebook4j.internal.org.json.XMLTokener"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      
      </doc>
    </method>
    <method name="toJSONObject" return="facebook4j.internal.org.json.JSONObject"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="string" type="java.lang.String"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      
      </doc>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ja" type="facebook4j.internal.org.json.JSONArray"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Reverse the JSONML transformation, making an XML text from a JSONArray.
 @param ja A JSONArray.
 @return An XML string.
 @throws JSONException]]>
      </doc>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="jo" type="facebook4j.internal.org.json.JSONObject"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Reverse the JSONML transformation, making an XML text from a JSONObject.
 The JSONObject must contain a "tagName" property. If it has children, 
 then it must have a "childNodes" property containing an array of objects. 
 The other properties are attributes with string values.
 @param jo A JSONObject.
 @return An XML string.
 @throws JSONException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[This provides static methods to convert an XML text into a JSONArray or 
 JSONObject, and to covert a JSONArray or JSONObject into an XML text using 
 the JsonML transform.
 @author JSON.org
 @version 2010-12-23]]>
    </doc>
  </class>
  <!-- end class facebook4j.internal.org.json.JSONML -->
  <!-- start class facebook4j.internal.org.json.JSONObject -->
  <class name="JSONObject" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="JSONObject"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Construct an empty JSONObject.]]>
      </doc>
    </constructor>
    <constructor name="JSONObject" type="facebook4j.internal.org.json.JSONObject, java.lang.String[]"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Construct a JSONObject from a subset of another JSONObject.
 An array of strings is used to identify the keys that should be copied.
 Missing keys are ignored.

 @param jo    A JSONObject.
 @param names An array of strings.
 @throws JSONException
 @throws JSONException If a value is a non-finite number or if a name is duplicated.]]>
      </doc>
    </constructor>
    <constructor name="JSONObject" type="facebook4j.internal.org.json.JSONTokener"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Construct a JSONObject from a JSONTokener.

 @param x A JSONTokener object containing the source string.
 @throws JSONException If there is a syntax error in the source string
                       or a duplicated key.]]>
      </doc>
    </constructor>
    <constructor name="JSONObject" type="java.util.Map"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Construct a JSONObject from a Map.

 @param map A map object that can be used to initialize the contents of
            the JSONObject.
 @throws JSONException]]>
      </doc>
    </constructor>
    <constructor name="JSONObject" type="java.lang.Object"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Construct a JSONObject from an Object using bean getters.
 It reflects on all of the public methods of the object.
 For each of the methods with no parameters and a name starting
 with <code>"get"</code> or <code>"is"</code> followed by an uppercase letter,
 the method is invoked, and a key and the value returned from the getter method
 are put into the new JSONObject.
 <p/>
 The key is formed by removing the <code>"get"</code> or <code>"is"</code> prefix.
 If the second remaining character is not upper case, then the first
 character is converted to lower case.
 <p/>
 For example, if an object has a method named <code>"getName"</code>, and
 if the result of calling <code>object.getName()</code> is <code>"Larry Fine"</code>,
 then the JSONObject will contain <code>"name": "Larry Fine"</code>.

 @param bean An object that has getter methods that should be used
             to make a JSONObject.]]>
      </doc>
    </constructor>
    <constructor name="JSONObject" type="java.lang.Object, java.lang.String[]"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Construct a JSONObject from an Object, using reflection to find the
 public members. The resulting JSONObject's keys will be the strings
 from the names array, and the values will be the field values associated
 with those keys in the object. If a key is not found or not visible,
 then it will not be copied into the new JSONObject.

 @param object An object that has fields that should be used to make a
               JSONObject.
 @param names  An array of strings, the names of the fields to be obtained
               from the object.]]>
      </doc>
    </constructor>
    <constructor name="JSONObject" type="java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Construct a JSONObject from a source JSON text string.
 This is the most commonly used JSONObject constructor.

 @param source A string beginning
               with <code>{</code>&nbsp;<small>(left brace)</small> and ending
               with <code>}</code>&nbsp;<small>(right brace)</small>.
 @throws JSONException If there is a syntax error in the source
                       string or a duplicated key.]]>
      </doc>
    </constructor>
    <constructor name="JSONObject" type="java.lang.String, java.util.Locale"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Construct a JSONObject from a ResourceBundle.

 @param baseName The ResourceBundle base name.
 @param locale   The Locale to load the ResourceBundle for.
 @throws JSONException If any JSONExceptions are detected.]]>
      </doc>
    </constructor>
    <method name="accumulate" return="facebook4j.internal.org.json.JSONObject"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="java.lang.String"/>
      <param name="value" type="java.lang.Object"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Accumulate values under a key. It is similar to the put method except
 that if there is already an object stored under the key then a
 JSONArray is stored under the key to hold all of the accumulated values.
 If there is already a JSONArray, then the new value is appended to it.
 In contrast, the put method replaces the previous value.

 @param key   A key string.
 @param value An object to be accumulated under the key.
 @return this.
 @throws JSONException If the value is an invalid number
                       or if the key is null.]]>
      </doc>
    </method>
    <method name="append" return="facebook4j.internal.org.json.JSONObject"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="java.lang.String"/>
      <param name="value" type="java.lang.Object"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Append values to the array under a key. If the key does not exist in the
 JSONObject, then the key is put in the JSONObject with its value being a
 JSONArray containing the value parameter. If the key was already
 associated with a JSONArray, then the value parameter is appended to it.

 @param key   A key string.
 @param value An object to be accumulated under the key.
 @return this.
 @throws JSONException If the key is null or if the current value
                       associated with the key is not a JSONArray.]]>
      </doc>
    </method>
    <method name="doubleToString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="d" type="double"/>
      <doc>
      <![CDATA[Produce a string from a double. The string "null" will be returned if
 the number is not finite.

 @param d A double.
 @return A String.]]>
      </doc>
    </method>
    <method name="get" return="java.lang.Object"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="java.lang.String"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Get the value object associated with a key.

 @param key A key string.
 @return The object associated with the key.
 @throws JSONException if the key is not found.]]>
      </doc>
    </method>
    <method name="getBoolean" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="java.lang.String"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Get the boolean value associated with a key.

 @param key A key string.
 @return The truth.
 @throws JSONException if the value is not a Boolean or the String "true" or "false".]]>
      </doc>
    </method>
    <method name="getDouble" return="double"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="java.lang.String"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Get the double value associated with a key.

 @param key A key string.
 @return The numeric value.
 @throws JSONException if the key is not found or
                       if the value is not a Number object and cannot be converted to a number.]]>
      </doc>
    </method>
    <method name="getInt" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="java.lang.String"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Get the int value associated with a key.

 @param key A key string.
 @return The integer value.
 @throws JSONException if the key is not found or if the value cannot
                       be converted to an integer.]]>
      </doc>
    </method>
    <method name="getJSONArray" return="facebook4j.internal.org.json.JSONArray"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="java.lang.String"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Get the JSONArray value associated with a key.

 @param key A key string.
 @return A JSONArray which is the value.
 @throws JSONException if the key is not found or
                       if the value is not a JSONArray.]]>
      </doc>
    </method>
    <method name="getJSONObject" return="facebook4j.internal.org.json.JSONObject"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="java.lang.String"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Get the JSONObject value associated with a key.

 @param key A key string.
 @return A JSONObject which is the value.
 @throws JSONException if the key is not found or
                       if the value is not a JSONObject.]]>
      </doc>
    </method>
    <method name="getLong" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="java.lang.String"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Get the long value associated with a key.

 @param key A key string.
 @return The long value.
 @throws JSONException if the key is not found or if the value cannot
                       be converted to a long.]]>
      </doc>
    </method>
    <method name="getNames" return="java.lang.String[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="jo" type="facebook4j.internal.org.json.JSONObject"/>
      <doc>
      <![CDATA[Get an array of field names from a JSONObject.

 @return An array of field names, or null if there are no names.]]>
      </doc>
    </method>
    <method name="getNames" return="java.lang.String[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="object" type="java.lang.Object"/>
      <doc>
      <![CDATA[Get an array of field names from an Object.

 @return An array of field names, or null if there are no names.]]>
      </doc>
    </method>
    <method name="getString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="java.lang.String"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Get the string associated with a key.

 @param key A key string.
 @return A string which is the value.
 @throws JSONException if the key is not found.]]>
      </doc>
    </method>
    <method name="has" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="java.lang.String"/>
      <doc>
      <![CDATA[Determine if the JSONObject contains a specific key.

 @param key A key string.
 @return true if the key exists in the JSONObject.]]>
      </doc>
    </method>
    <method name="increment" return="facebook4j.internal.org.json.JSONObject"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="java.lang.String"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Increment a property of a JSONObject. If there is no such property,
 create one with a value of 1. If there is such a property, and if
 it is an Integer, Long, Double, or Float, then add one to it.

 @param key A key string.
 @return this.
 @throws JSONException If there is already a property with this name
                       that is not an Integer, Long, Double, or Float.]]>
      </doc>
    </method>
    <method name="isNull" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="java.lang.String"/>
      <doc>
      <![CDATA[Determine if the value associated with the key is null or if there is
 no value.

 @param key A key string.
 @return true if there is no value associated with the key or if
         the value is the JSONObject.NULL object.]]>
      </doc>
    </method>
    <method name="keys" return="java.util.Iterator"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get an enumeration of the keys of the JSONObject.

 @return An iterator of the keys.]]>
      </doc>
    </method>
    <method name="length" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the number of keys stored in the JSONObject.

 @return The number of keys in the JSONObject.]]>
      </doc>
    </method>
    <method name="names" return="facebook4j.internal.org.json.JSONArray"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Produce a JSONArray containing the names of the elements of this
 JSONObject.

 @return A JSONArray containing the key strings, or null if the JSONObject
         is empty.]]>
      </doc>
    </method>
    <method name="numberToString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="number" type="java.lang.Number"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Produce a string from a Number.

 @param number A Number
 @return A String.
 @throws JSONException If n is a non-finite number.]]>
      </doc>
    </method>
    <method name="opt" return="java.lang.Object"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="java.lang.String"/>
      <doc>
      <![CDATA[Get an optional value associated with a key.

 @param key A key string.
 @return An object which is the value, or null if there is no value.]]>
      </doc>
    </method>
    <method name="optBoolean" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="java.lang.String"/>
      <doc>
      <![CDATA[Get an optional boolean associated with a key.
 It returns false if there is no such key, or if the value is not
 Boolean.TRUE or the String "true".

 @param key A key string.
 @return The truth.]]>
      </doc>
    </method>
    <method name="optBoolean" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="java.lang.String"/>
      <param name="defaultValue" type="boolean"/>
      <doc>
      <![CDATA[Get an optional boolean associated with a key.
 It returns the defaultValue if there is no such key, or if it is not
 a Boolean or the String "true" or "false" (case insensitive).

 @param key          A key string.
 @param defaultValue The default.
 @return The truth.]]>
      </doc>
    </method>
    <method name="optDouble" return="double"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="java.lang.String"/>
      <doc>
      <![CDATA[Get an optional double associated with a key,
 or NaN if there is no such key or if its value is not a number.
 If the value is a string, an attempt will be made to evaluate it as
 a number.

 @param key A string which is the key.
 @return An object which is the value.]]>
      </doc>
    </method>
    <method name="optDouble" return="double"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="java.lang.String"/>
      <param name="defaultValue" type="double"/>
      <doc>
      <![CDATA[Get an optional double associated with a key, or the
 defaultValue if there is no such key or if its value is not a number.
 If the value is a string, an attempt will be made to evaluate it as
 a number.

 @param key          A key string.
 @param defaultValue The default.
 @return An object which is the value.]]>
      </doc>
    </method>
    <method name="optInt" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="java.lang.String"/>
      <doc>
      <![CDATA[Get an optional int value associated with a key,
 or zero if there is no such key or if the value is not a number.
 If the value is a string, an attempt will be made to evaluate it as
 a number.

 @param key A key string.
 @return An object which is the value.]]>
      </doc>
    </method>
    <method name="optInt" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="java.lang.String"/>
      <param name="defaultValue" type="int"/>
      <doc>
      <![CDATA[Get an optional int value associated with a key,
 or the default if there is no such key or if the value is not a number.
 If the value is a string, an attempt will be made to evaluate it as
 a number.

 @param key          A key string.
 @param defaultValue The default.
 @return An object which is the value.]]>
      </doc>
    </method>
    <method name="optJSONArray" return="facebook4j.internal.org.json.JSONArray"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="java.lang.String"/>
      <doc>
      <![CDATA[Get an optional JSONArray associated with a key.
 It returns null if there is no such key, or if its value is not a
 JSONArray.

 @param key A key string.
 @return A JSONArray which is the value.]]>
      </doc>
    </method>
    <method name="optJSONObject" return="facebook4j.internal.org.json.JSONObject"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="java.lang.String"/>
      <doc>
      <![CDATA[Get an optional JSONObject associated with a key.
 It returns null if there is no such key, or if its value is not a
 JSONObject.

 @param key A key string.
 @return A JSONObject which is the value.]]>
      </doc>
    </method>
    <method name="optLong" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="java.lang.String"/>
      <doc>
      <![CDATA[Get an optional long value associated with a key,
 or zero if there is no such key or if the value is not a number.
 If the value is a string, an attempt will be made to evaluate it as
 a number.

 @param key A key string.
 @return An object which is the value.]]>
      </doc>
    </method>
    <method name="optLong" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="java.lang.String"/>
      <param name="defaultValue" type="long"/>
      <doc>
      <![CDATA[Get an optional long value associated with a key,
 or the default if there is no such key or if the value is not a number.
 If the value is a string, an attempt will be made to evaluate it as
 a number.

 @param key          A key string.
 @param defaultValue The default.
 @return An object which is the value.]]>
      </doc>
    </method>
    <method name="optString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="java.lang.String"/>
      <doc>
      <![CDATA[Get an optional string associated with a key.
 It returns an empty string if there is no such key. If the value is not
 a string and is not null, then it is converted to a string.

 @param key A key string.
 @return A string which is the value.]]>
      </doc>
    </method>
    <method name="optString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="java.lang.String"/>
      <param name="defaultValue" type="java.lang.String"/>
      <doc>
      <![CDATA[Get an optional string associated with a key.
 It returns the defaultValue if there is no such key.

 @param key          A key string.
 @param defaultValue The default.
 @return A string which is the value.]]>
      </doc>
    </method>
    <method name="put" return="facebook4j.internal.org.json.JSONObject"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="java.lang.String"/>
      <param name="value" type="boolean"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Put a key/boolean pair in the JSONObject.

 @param key   A key string.
 @param value A boolean which is the value.
 @return this.
 @throws JSONException If the key is null.]]>
      </doc>
    </method>
    <method name="put" return="facebook4j.internal.org.json.JSONObject"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="java.lang.String"/>
      <param name="value" type="java.util.Collection"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Put a key/value pair in the JSONObject, where the value will be a
 JSONArray which is produced from a Collection.

 @param key   A key string.
 @param value A Collection value.
 @return this.
 @throws JSONException]]>
      </doc>
    </method>
    <method name="put" return="facebook4j.internal.org.json.JSONObject"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="java.lang.String"/>
      <param name="value" type="double"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Put a key/double pair in the JSONObject.

 @param key   A key string.
 @param value A double which is the value.
 @return this.
 @throws JSONException If the key is null or if the number is invalid.]]>
      </doc>
    </method>
    <method name="put" return="facebook4j.internal.org.json.JSONObject"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="java.lang.String"/>
      <param name="value" type="int"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Put a key/int pair in the JSONObject.

 @param key   A key string.
 @param value An int which is the value.
 @return this.
 @throws JSONException If the key is null.]]>
      </doc>
    </method>
    <method name="put" return="facebook4j.internal.org.json.JSONObject"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="java.lang.String"/>
      <param name="value" type="long"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Put a key/long pair in the JSONObject.

 @param key   A key string.
 @param value A long which is the value.
 @return this.
 @throws JSONException If the key is null.]]>
      </doc>
    </method>
    <method name="put" return="facebook4j.internal.org.json.JSONObject"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="java.lang.String"/>
      <param name="value" type="java.util.Map"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Put a key/value pair in the JSONObject, where the value will be a
 JSONObject which is produced from a Map.

 @param key   A key string.
 @param value A Map value.
 @return this.
 @throws JSONException]]>
      </doc>
    </method>
    <method name="put" return="facebook4j.internal.org.json.JSONObject"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="java.lang.String"/>
      <param name="value" type="java.lang.Object"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Put a key/value pair in the JSONObject. If the value is null,
 then the key will be removed from the JSONObject if it is present.

 @param key   A key string.
 @param value An object which is the value. It should be of one of these
              types: Boolean, Double, Integer, JSONArray, JSONObject, Long, String,
              or the JSONObject.NULL object.
 @return this.
 @throws JSONException If the value is non-finite number
                       or if the key is null.]]>
      </doc>
    </method>
    <method name="putOnce" return="facebook4j.internal.org.json.JSONObject"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="java.lang.String"/>
      <param name="value" type="java.lang.Object"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Put a key/value pair in the JSONObject, but only if the key and the
 value are both non-null, and only if there is not already a member
 with that name.

 @param key
 @param value
 @return his.
 @throws JSONException if the key is a duplicate]]>
      </doc>
    </method>
    <method name="putOpt" return="facebook4j.internal.org.json.JSONObject"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="java.lang.String"/>
      <param name="value" type="java.lang.Object"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Put a key/value pair in the JSONObject, but only if the
 key and the value are both non-null.

 @param key   A key string.
 @param value An object which is the value. It should be of one of these
              types: Boolean, Double, Integer, JSONArray, JSONObject, Long, String,
              or the JSONObject.NULL object.
 @return this.
 @throws JSONException If the value is a non-finite number.]]>
      </doc>
    </method>
    <method name="quote" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="string" type="java.lang.String"/>
      <doc>
      <![CDATA[Produce a string in double quotes with backslash sequences in all the
 right places. A backslash will be inserted within </, producing <\/,
 allowing JSON text to be delivered in HTML. In JSON text, a string
 cannot contain a control character or an unescaped quote or backslash.

 @param string A String
 @return A String correctly formatted for insertion in a JSON text.]]>
      </doc>
    </method>
    <method name="remove" return="java.lang.Object"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="java.lang.String"/>
      <doc>
      <![CDATA[Remove a name and its value, if present.

 @param key The name to be removed.
 @return The value that was associated with the name,
         or null if there was no value.]]>
      </doc>
    </method>
    <method name="sortedKeys" return="java.util.Iterator"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get an enumeration of the keys of the JSONObject.
 The keys will be sorted alphabetically.

 @return An iterator of the keys.]]>
      </doc>
    </method>
    <method name="stringToValue" return="java.lang.Object"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="string" type="java.lang.String"/>
      <doc>
      <![CDATA[Try to convert a string into a number, boolean, or null. If the string
 can't be converted, return the string.

 @param string A String.
 @return A simple JSON value.]]>
      </doc>
    </method>
    <method name="testValidity"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="o" type="java.lang.Object"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Throw an exception if the object is a NaN or infinite number.

 @param o The object to test.
 @throws JSONException If o is a non-finite number.]]>
      </doc>
    </method>
    <method name="toJSONArray" return="facebook4j.internal.org.json.JSONArray"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="names" type="facebook4j.internal.org.json.JSONArray"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Produce a JSONArray containing the values of the members of this
 JSONObject.

 @param names A JSONArray containing a list of key strings. This
              determines the sequence of the values in the result.
 @return A JSONArray of values.
 @throws JSONException If any of the values are non-finite numbers.]]>
      </doc>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Make a JSON text of this JSONObject. For compactness, no whitespace
 is added. If this would not result in a syntactically correct JSON text,
 then null will be returned instead.
 <p/>
 Warning: This method assumes that the data structure is acyclical.

 @return a printable, displayable, portable, transmittable
         representation of the object, beginning
         with <code>{</code>&nbsp;<small>(left brace)</small> and ending
         with <code>}</code>&nbsp;<small>(right brace)</small>.]]>
      </doc>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="indentFactor" type="int"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Make a prettyprinted JSON text of this JSONObject.
 <p/>
 Warning: This method assumes that the data structure is acyclical.

 @param indentFactor The number of spaces to add to each level of
                     indentation.
 @return a printable, displayable, portable, transmittable
         representation of the object, beginning
         with <code>{</code>&nbsp;<small>(left brace)</small> and ending
         with <code>}</code>&nbsp;<small>(right brace)</small>.
 @throws JSONException If the object contains an invalid number.]]>
      </doc>
    </method>
    <method name="valueToString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="value" type="java.lang.Object"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Make a JSON text of an Object value. If the object has an
 value.toJSONString() method, then that method will be used to produce
 the JSON text. The method is required to produce a strictly
 conforming text. If the object does not contain a toJSONString
 method (which is the most common case), then a text will be
 produced by other means. If the value is an array or Collection,
 then a JSONArray will be made from it and its toJSONString method
 will be called. If the value is a MAP, then a JSONObject will be made
 from it and its toJSONString method will be called. Otherwise, the
 value's toString method will be called, and the result will be quoted.
 <p/>
 <p/>
 Warning: This method assumes that the data structure is acyclical.

 @param value The value to be serialized.
 @return a printable, displayable, transmittable
         representation of the object, beginning
         with <code>{</code>&nbsp;<small>(left brace)</small> and ending
         with <code>}</code>&nbsp;<small>(right brace)</small>.
 @throws JSONException If the value is or contains an invalid number.]]>
      </doc>
    </method>
    <method name="wrap" return="java.lang.Object"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="object" type="java.lang.Object"/>
      <doc>
      <![CDATA[Wrap an object, if necessary. If the object is null, return the NULL
 object. If it is an array or collection, wrap it in a JSONArray. If
 it is a map, wrap it in a JSONObject. If it is a standard property
 (Double, String, et al) then it is already wrapped. Otherwise, if it
 comes from one of the java packages, turn it into a string. And if
 it doesn't, try to wrap it in a JSONObject. If the wrapping fails,
 then null is returned.

 @param object The object to wrap
 @return The wrapped value]]>
      </doc>
    </method>
    <method name="write" return="java.io.Writer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="writer" type="java.io.Writer"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Write the contents of the JSONObject as JSON text to a writer.
 For compactness, no whitespace is added.
 <p/>
 Warning: This method assumes that the data structure is acyclical.

 @return The writer.
 @throws JSONException]]>
      </doc>
    </method>
    <field name="NULL" type="java.lang.Object"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[It is sometimes more convenient and less ambiguous to have a
 <code>NULL</code> object than to use Java's <code>null</code> value.
 <code>JSONObject.NULL.equals(null)</code> returns <code>true</code>.
 <code>JSONObject.NULL.toString()</code> returns <code>"null"</code>.]]>
      </doc>
    </field>
    <doc>
    <![CDATA[A JSONObject is an unordered collection of name/value pairs. Its
 external form is a string wrapped in curly braces with colons between the
 names and values, and commas between the values and names. The internal form
 is an object having <code>get</code> and <code>opt</code> methods for
 accessing the values by name, and <code>put</code> methods for adding or
 replacing values by name. The values can be any of these types:
 <code>Boolean</code>, <code>JSONArray</code>, <code>JSONObject</code>,
 <code>Number</code>, <code>String</code>, or the <code>JSONObject.NULL</code>
 object. A JSONObject constructor can be used to convert an external form
 JSON text into an internal form whose values can be retrieved with the
 <code>get</code> and <code>opt</code> methods, or to convert values into a
 JSON text using the <code>put</code> and <code>toString</code> methods.
 A <code>get</code> method returns a value if one can be found, and throws an
 exception if one cannot be found. An <code>opt</code> method returns a
 default value instead of throwing an exception, and so is useful for
 obtaining optional values.
 <p/>
 The generic <code>get()</code> and <code>opt()</code> methods return an
 object, which you can cast or query for type. There are also typed
 <code>get</code> and <code>opt</code> methods that do type checking and type
 coercion for you. The opt methods differ from the get methods in that they
 do not throw. Instead, they return a specified value, such as null.
 <p/>
 The <code>put</code> methods add or replace values in an object. For example,
 <pre>myString = new JSONObject().put("JSON", "Hello, World!").toString();</pre>
 produces the string <code>{"JSON": "Hello, World"}</code>.
 <p/>
 The texts produced by the <code>toString</code> methods strictly conform to
 the JSON syntax rules.
 The constructors are more forgiving in the texts they will accept:
 <ul>
 <li>An extra <code>,</code>&nbsp;<small>(comma)</small> may appear just
 before the closing brace.</li>
 <li>Strings may be quoted with <code>'</code>&nbsp;<small>(single
 quote)</small>.</li>
 <li>Strings do not need to be quoted at all if they do not begin with a quote
 or single quote, and if they do not contain leading or trailing spaces,
 and if they do not contain any of these characters:
 <code>{ } [ ] / \ : , = ; #</code> and if they do not look like numbers
 and if they are not the reserved words <code>true</code>,
 <code>false</code>, or <code>null</code>.</li>
 <li>Keys can be followed by <code>=</code> or <code>=></code> as well as
 by <code>:</code>.</li>
 <li>Values can be followed by <code>;</code> <small>(semicolon)</small> as
 well as by <code>,</code> <small>(comma)</small>.</li>
 <li>Numbers may have the <code>0x-</code> <small>(hex)</small> prefix.</li>
 </ul>

 @author JSON.org
 @version 2010-12-28]]>
    </doc>
  </class>
  <!-- end class facebook4j.internal.org.json.JSONObject -->
  <!-- start interface facebook4j.internal.org.json.JSONString -->
  <interface name="JSONString"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="toJSONString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The <code>toJSONString</code> method allows a class to produce its own JSON 
 serialization. 
 
 @return A strictly syntactically correct JSON text.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[The <code>JSONString</code> interface allows a <code>toJSONString()</code> 
 method so that a class can change the behavior of 
 <code>JSONObject.toString()</code>, <code>JSONArray.toString()</code>,
 and <code>JSONWriter.value(</code>Object<code>)</code>. The 
 <code>toJSONString</code> method will be used instead of the default behavior 
 of using the Object's <code>toString()</code> method and quoting the result.]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.internal.org.json.JSONString -->
  <!-- start class facebook4j.internal.org.json.JSONTokener -->
  <class name="JSONTokener" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="JSONTokener" type="java.io.Reader"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Construct a JSONTokener from a Reader.

 @param reader     A reader.]]>
      </doc>
    </constructor>
    <constructor name="JSONTokener" type="java.io.InputStream"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Construct a JSONTokener from an InputStream.]]>
      </doc>
    </constructor>
    <constructor name="JSONTokener" type="java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Construct a JSONTokener from a string.

 @param s     A source string.]]>
      </doc>
    </constructor>
    <method name="back"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Back up one character. This provides a sort of lookahead capability,
 so that you can test for a digit or letter before attempting to parse
 the next number or identifier.]]>
      </doc>
    </method>
    <method name="dehexchar" return="int"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="c" type="char"/>
      <doc>
      <![CDATA[Get the hex value of a character (base16).
 @param c A character between '0' and '9' or between 'A' and 'F' or
 between 'a' and 'f'.
 @return  An int between 0 and 15, or -1 if c was not a hex digit.]]>
      </doc>
    </method>
    <method name="end" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="more" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Determine if the source string still contains characters that next()
 can consume.
 @return true if not yet at the end of the source.]]>
      </doc>
    </method>
    <method name="next" return="char"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Get the next character in the source string.

 @return The next character, or 0 if past the end of the source string.]]>
      </doc>
    </method>
    <method name="next" return="char"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="c" type="char"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Consume the next character, and check that it matches a specified
 character.
 @param c The character to match.
 @return The character.
 @throws JSONException if the character does not match.]]>
      </doc>
    </method>
    <method name="next" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="n" type="int"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Get the next n characters.

 @param n     The number of characters to take.
 @return      A string of n characters.
 @throws JSONException
   Substring bounds error if there are not
   n characters remaining in the source string.]]>
      </doc>
    </method>
    <method name="nextClean" return="char"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Get the next char in the string, skipping whitespace.
 @throws JSONException
 @return  A character, or 0 if there are no more characters.]]>
      </doc>
    </method>
    <method name="nextString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="quote" type="char"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Return the characters up to the next close quote character.
 Backslash processing is done. The formal JSON format does not
 allow strings in single quotes, but an implementation is allowed to
 accept them.
 @param quote The quoting character, either
      <code>"</code>&nbsp;<small>(double quote)</small> or
      <code>'</code>&nbsp;<small>(single quote)</small>.
 @return      A String.
 @throws JSONException Unterminated string.]]>
      </doc>
    </method>
    <method name="nextTo" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="delimiter" type="char"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Get the text up but not including the specified character or the
 end of line, whichever comes first.
 @param  delimiter A delimiter character.
 @return   A string.]]>
      </doc>
    </method>
    <method name="nextTo" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="delimiters" type="java.lang.String"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Get the text up but not including one of the specified delimiter
 characters or the end of line, whichever comes first.
 @param delimiters A set of delimiter characters.
 @return A string, trimmed.]]>
      </doc>
    </method>
    <method name="nextValue" return="java.lang.Object"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Get the next value. The value can be a Boolean, Double, Integer,
 JSONArray, JSONObject, Long, or String, or the JSONObject.NULL object.
 @throws JSONException If syntax error.

 @return An object.]]>
      </doc>
    </method>
    <method name="skipTo" return="char"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="to" type="char"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Skip characters until the next character is the requested character.
 If the requested character is not found, no characters are skipped.
 @param to A character to skip to.
 @return The requested character, or zero if the requested character
 is not found.]]>
      </doc>
    </method>
    <method name="syntaxError" return="facebook4j.internal.org.json.JSONException"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="message" type="java.lang.String"/>
      <doc>
      <![CDATA[Make a JSONException to signal a syntax error.

 @param message The error message.
 @return  A JSONException object, suitable for throwing]]>
      </doc>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Make a printable string of this JSONTokener.

 @return " at {index} [character {character} line {line}]"]]>
      </doc>
    </method>
    <doc>
    <![CDATA[A JSONTokener takes a source string and extracts characters and tokens from
 it. It is used by the JSONObject and JSONArray constructors to parse
 JSON source strings.
 @author JSON.org
 @version 2010-12-24]]>
    </doc>
  </class>
  <!-- end class facebook4j.internal.org.json.JSONTokener -->
  <!-- start class facebook4j.internal.org.json.JSONWriter -->
  <class name="JSONWriter" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="JSONWriter" type="java.io.Writer"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Make a fresh JSONWriter. It can be used to build one JSON text.]]>
      </doc>
    </constructor>
    <method name="array" return="facebook4j.internal.org.json.JSONWriter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Begin appending a new array. All values until the balancing
 <code>endArray</code> will be appended to this array. The
 <code>endArray</code> method must be called to mark the array's end.

 @return this
 @throws JSONException If the nesting is too deep, or if the object is
                       started in the wrong place (for example as a key or after the end of the
                       outermost array or object).]]>
      </doc>
    </method>
    <method name="endArray" return="facebook4j.internal.org.json.JSONWriter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[End an array. This method most be called to balance calls to
 <code>array</code>.

 @return this
 @throws JSONException If incorrectly nested.]]>
      </doc>
    </method>
    <method name="endObject" return="facebook4j.internal.org.json.JSONWriter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[End an object. This method most be called to balance calls to
 <code>object</code>.

 @return this
 @throws JSONException If incorrectly nested.]]>
      </doc>
    </method>
    <method name="key" return="facebook4j.internal.org.json.JSONWriter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="string" type="java.lang.String"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Append a key. The key will be associated with the next value. In an
 object, every value must be preceded by a key.

 @param string A key string.
 @return this
 @throws JSONException If the key is out of place. For example, keys
                       do not belong in arrays or if the key is null.]]>
      </doc>
    </method>
    <method name="object" return="facebook4j.internal.org.json.JSONWriter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Begin appending a new object. All keys and values until the balancing
 <code>endObject</code> will be appended to this object. The
 <code>endObject</code> method must be called to mark the object's end.

 @return this
 @throws JSONException If the nesting is too deep, or if the object is
                       started in the wrong place (for example as a key or after the end of the
                       outermost array or object).]]>
      </doc>
    </method>
    <method name="value" return="facebook4j.internal.org.json.JSONWriter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="b" type="boolean"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Append either the value <code>true</code> or the value
 <code>false</code>.

 @param b A boolean.
 @return this
 @throws JSONException]]>
      </doc>
    </method>
    <method name="value" return="facebook4j.internal.org.json.JSONWriter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="d" type="double"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Append a double value.

 @param d A double.
 @return this
 @throws JSONException If the number is not finite.]]>
      </doc>
    </method>
    <method name="value" return="facebook4j.internal.org.json.JSONWriter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="l" type="long"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Append a long value.

 @param l A long.
 @return this
 @throws JSONException]]>
      </doc>
    </method>
    <method name="value" return="facebook4j.internal.org.json.JSONWriter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="object" type="java.lang.Object"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Append an object value.

 @param object The object to append. It can be null, or a Boolean, Number,
               String, JSONObject, or JSONArray, or an object that implements JSONString.
 @return this
 @throws JSONException If the value is out of sequence.]]>
      </doc>
    </method>
    <field name="mode" type="char"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The current mode. Values:
 'a' (array),
 'd' (done),
 'i' (initial),
 'k' (key),
 'o' (object).]]>
      </doc>
    </field>
    <field name="writer" type="java.io.Writer"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The writer that will receive the output.]]>
      </doc>
    </field>
    <doc>
    <![CDATA[JSONWriter provides a quick and convenient way of producing JSON text.
 The texts produced strictly conform to JSON syntax rules. No whitespace is
 added, so the results are ready for transmission or storage. Each instance of
 JSONWriter can produce one JSON text.
 <p/>
 A JSONWriter instance provides a <code>value</code> method for appending
 values to the
 text, and a <code>key</code>
 method for adding keys before values in objects. There are <code>array</code>
 and <code>endArray</code> methods that make and bound array values, and
 <code>object</code> and <code>endObject</code> methods which make and bound
 object values. All of these methods return the JSONWriter instance,
 permitting a cascade style. For example, <pre>
 new JSONWriter(myWriter)
     .object()
         .key("JSON")
         .value("Hello, World!")
     .endObject();</pre> which writes <pre>
 {"JSON":"Hello, World!"}</pre>
 <p/>
 The first method called must be <code>array</code> or <code>object</code>.
 There are no methods for adding commas or colons. JSONWriter adds them for
 you. Objects and arrays can be nested up to 20 levels deep.
 <p/>
 This can sometimes be easier than using a JSONObject to build a string.

 @author JSON.org
 @version 2010-12-24]]>
    </doc>
  </class>
  <!-- end class facebook4j.internal.org.json.JSONWriter -->
  <!-- start class facebook4j.internal.org.json.XML -->
  <class name="XML" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="XML"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="escape" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="string" type="java.lang.String"/>
      <doc>
      <![CDATA[Replace special characters with XML escapes:
 <pre>
 &amp; <small>(ampersand)</small> is replaced by &amp;amp;
 &lt; <small>(less than)</small> is replaced by &amp;lt;
 &gt; <small>(greater than)</small> is replaced by &amp;gt;
 &quot; <small>(double quote)</small> is replaced by &amp;quot;
 </pre>
 @param string The string to be escaped.
 @return The escaped string.]]>
      </doc>
    </method>
    <method name="noSpace"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="string" type="java.lang.String"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Throw an exception if the string contains whitespace. 
 Whitespace is not allowed in tagNames and attributes.
 @param string
 @throws JSONException]]>
      </doc>
    </method>
    <method name="stringToValue" return="java.lang.Object"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="string" type="java.lang.String"/>
      <doc>
      <![CDATA[Try to convert a string into a number, boolean, or null. If the string
 can't be converted, return the string. This is much less ambitious than
 JSONObject.stringToValue, especially because it does not attempt to
 convert plus forms, octal forms, hex forms, or E forms lacking decimal 
 points.
 @param string A String.
 @return A simple JSON value.]]>
      </doc>
    </method>
    <method name="toJSONObject" return="facebook4j.internal.org.json.JSONObject"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="string" type="java.lang.String"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      
      </doc>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="object" type="java.lang.Object"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Convert a JSONObject into a well-formed, element-normal XML string.
 @param object A JSONObject.
 @return  A string.
 @throws  JSONException]]>
      </doc>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="object" type="java.lang.Object"/>
      <param name="tagName" type="java.lang.String"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Convert a JSONObject into a well-formed, element-normal XML string.
 @param object A JSONObject.
 @param tagName The optional name of the enclosing tag.
 @return A string.
 @throws JSONException]]>
      </doc>
    </method>
    <field name="AMP" type="java.lang.Character"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The Character '&'.]]>
      </doc>
    </field>
    <field name="APOS" type="java.lang.Character"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The Character '''.]]>
      </doc>
    </field>
    <field name="BANG" type="java.lang.Character"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The Character '!'.]]>
      </doc>
    </field>
    <field name="EQ" type="java.lang.Character"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The Character '='.]]>
      </doc>
    </field>
    <field name="GT" type="java.lang.Character"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The Character '>'.]]>
      </doc>
    </field>
    <field name="LT" type="java.lang.Character"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The Character '<'.]]>
      </doc>
    </field>
    <field name="QUEST" type="java.lang.Character"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The Character '?'.]]>
      </doc>
    </field>
    <field name="QUOT" type="java.lang.Character"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The Character '"'.]]>
      </doc>
    </field>
    <field name="SLASH" type="java.lang.Character"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The Character '/'.]]>
      </doc>
    </field>
    <doc>
    <![CDATA[This provides static methods to convert an XML text into a JSONObject,
 and to covert a JSONObject into an XML text.
 @author JSON.org
 @version 2010-12-24]]>
    </doc>
  </class>
  <!-- end class facebook4j.internal.org.json.XML -->
  <!-- start class facebook4j.internal.org.json.XMLTokener -->
  <class name="XMLTokener" extends="facebook4j.internal.org.json.JSONTokener"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="XMLTokener" type="java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Construct an XMLTokener from a string.
 @param s A source string.]]>
      </doc>
    </constructor>
    <method name="nextCDATA" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Get the text in the CDATA block.
 @return The string up to the <code>]]&gt;</code>.
 @throws JSONException If the <code>]]&gt;</code> is not found.]]>
      </doc>
    </method>
    <method name="nextContent" return="java.lang.Object"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Get the next XML outer token, trimming whitespace. There are two kinds
 of tokens: the '<' character which begins a markup tag, and the content
 text between markup tags.

 @return  A string, or a '<' Character, or null if there is no more
 source text.
 @throws JSONException]]>
      </doc>
    </method>
    <method name="nextEntity" return="java.lang.Object"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ampersand" type="char"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Return the next entity. These entities are translated to Characters:
     <code>&amp;  &apos;  &gt;  &lt;  &quot;</code>.
 @param ampersand An ampersand character.
 @return  A Character or an entity String if the entity is not recognized.
 @throws JSONException If missing ';' in XML entity.]]>
      </doc>
    </method>
    <method name="nextMeta" return="java.lang.Object"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Returns the next XML meta token. This is used for skipping over <!...>
 and <?...?> structures.
 @return Syntax characters (<code>< > / = ! ?</code>) are returned as
  Character, and strings and names are returned as Boolean. We don't care
  what the values actually are.
 @throws JSONException If a string is not properly closed or if the XML
  is badly structured.]]>
      </doc>
    </method>
    <method name="nextToken" return="java.lang.Object"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Get the next XML Token. These tokens are found inside of angle
 brackets. It may be one of these characters: <code>/ > = ! ?</code> or it
 may be a string wrapped in single quotes or double quotes, or it may be a
 name.
 @return a String or a Character.
 @throws JSONException If the XML is not well formed.]]>
      </doc>
    </method>
    <method name="skipPast" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="to" type="java.lang.String"/>
      <exception name="JSONException" type="facebook4j.internal.org.json.JSONException"/>
      <doc>
      <![CDATA[Skip characters until past the requested string.
 If it is not found, we are left at the end of the source with a result of false.
 @param to A string to skip past.
 @throws JSONException]]>
      </doc>
    </method>
    <field name="entity" type="java.util.HashMap"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The table of entity values. It initially contains Character values for
 amp, apos, gt, lt, quot.]]>
      </doc>
    </field>
    <doc>
    <![CDATA[The XMLTokener extends the JSONTokener to provide additional methods
 for the parsing of XML texts.
 @author JSON.org
 @version 2010-12-24]]>
    </doc>
  </class>
  <!-- end class facebook4j.internal.org.json.XMLTokener -->
</package>
<package name="facebook4j.internal.util">
  <!-- start class facebook4j.internal.util.z_F4JInternalParseUtil -->
  <class name="z_F4JInternalParseUtil" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="getRawString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <param name="json" type="facebook4j.internal.org.json.JSONObject"/>
    </method>
    <method name="getPrimitiveInt" return="int"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <param name="json" type="facebook4j.internal.org.json.JSONObject"/>
    </method>
    <method name="getPrimitiveInt" return="int"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="str" type="java.lang.String"/>
    </method>
    <method name="getInt" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <param name="json" type="facebook4j.internal.org.json.JSONObject"/>
    </method>
    <method name="getInt" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="str" type="java.lang.String"/>
    </method>
    <method name="getPrimitiveLong" return="long"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <param name="json" type="facebook4j.internal.org.json.JSONObject"/>
    </method>
    <method name="getPrimitiveLong" return="long"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="str" type="java.lang.String"/>
    </method>
    <method name="getLong" return="java.lang.Long"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <param name="json" type="facebook4j.internal.org.json.JSONObject"/>
    </method>
    <method name="getLong" return="java.lang.Long"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="str" type="java.lang.String"/>
    </method>
    <method name="getDouble" return="java.lang.Double"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <param name="json" type="facebook4j.internal.org.json.JSONObject"/>
    </method>
    <method name="getBoolean" return="java.lang.Boolean"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <param name="json" type="facebook4j.internal.org.json.JSONObject"/>
    </method>
    <method name="getFlag" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <param name="json" type="facebook4j.internal.org.json.JSONObject"/>
    </method>
    <method name="getISO8601Datetime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <param name="json" type="facebook4j.internal.org.json.JSONObject"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="getURL" return="java.net.URL"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <param name="json" type="facebook4j.internal.org.json.JSONObject"/>
    </method>
    <method name="getURI" return="java.net.URI"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <param name="json" type="facebook4j.internal.org.json.JSONObject"/>
    </method>
    <method name="getTimeZone" return="java.util.TimeZone"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <param name="json" type="facebook4j.internal.org.json.JSONObject"/>
    </method>
    <method name="getStringMap" return="java.util.Map&lt;java.lang.String, java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <param name="json" type="facebook4j.internal.org.json.JSONObject"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="getLongMap" return="java.util.Map&lt;java.lang.String, java.lang.Long&gt;"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <param name="json" type="facebook4j.internal.org.json.JSONObject"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="getBooleanMap" return="java.util.Map&lt;java.lang.String, java.lang.Boolean&gt;"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <param name="json" type="facebook4j.internal.org.json.JSONObject"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <method name="getStringList" return="java.util.List&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <param name="json" type="facebook4j.internal.org.json.JSONObject"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
    </method>
    <doc>
    <![CDATA[A tiny parse utility class.

 @author Yusuke Yamamoto - yusuke at mac.com
 @author Ryuji Yamashita - roundrop at gmail.com
 <ul>
 <li>Deleted parseTrendsDate() method</li>
 <li>Deleted toAccessLevel() method</li>
 <li>Added getPrimitiveInt() methods</li>
 <li>Added getPrimitiveLong() methods</li>
 <li>Added getFlag() method</li>
 <li>Added getFacebookDatetime() method</li>
 <li>Added getURL() method</li>
 <li>Added getStringMap() method</li>
 <li>Added getBooleanMap() method</li>
 <li>Added getStringList() method</li>
 <li>Deleted getDate() methods</li>
 </ul>]]>
    </doc>
  </class>
  <!-- end class facebook4j.internal.util.z_F4JInternalParseUtil -->
  <!-- start class facebook4j.internal.util.z_F4JInternalStringUtil -->
  <class name="z_F4JInternalStringUtil" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="maskString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="str" type="java.lang.String"/>
    </method>
    <method name="join" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="follows" type="int[]"/>
    </method>
    <method name="join" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="follows" type="long[]"/>
    </method>
    <method name="join" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="track" type="java.lang.String[]"/>
    </method>
    <method name="join" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="track" type="java.lang.String[]"/>
      <param name="separator" type="java.lang.String"/>
    </method>
    <method name="formatISO8601Datetime" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="cal" type="java.util.Calendar"/>
    </method>
    <doc>
    <![CDATA[@author Yusuke Yamamoto - yusuke at mac.com
 @since Twitter4J 2.1.4
 
 @author Ryuji Yamashita - roundrop at gmail.com
 <ul>
 <li>Gave up JDK1.4 compatibility</li>
 <li>Added {@link z_F4JInternalStringUtil#join(String[], String)}</li>
 <li>Added {@link z_F4JInternalStringUtil#formatFacebookDatetime(Date)}</li>
 </ul>]]>
    </doc>
  </class>
  <!-- end class facebook4j.internal.util.z_F4JInternalStringUtil -->
</package>
<package name="facebook4j.json">
  <!-- start class facebook4j.json.DataObjectFactory -->
  <class name="DataObjectFactory" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="getRawJSON" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="obj" type="java.lang.Object"/>
      <doc>
      <![CDATA[Returns a raw JSON form of the provided object.<br>
 Note that raw JSON forms can be retrieved only from the same thread invoked the last method call and will become inaccessible once another method call

 @param obj
 @return raw JSON]]>
      </doc>
    </method>
    <method name="createAccount" return="facebook4j.Account"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Account object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Account
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createAchievement" return="facebook4j.Achievement"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Achievement object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Achievement
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createActivity" return="facebook4j.Activity"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Activity object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Activity
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createAdmin" return="facebook4j.Admin"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Admin object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Admin
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createAlbum" return="facebook4j.Album"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Album object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Album
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createBook" return="facebook4j.Book"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Book object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Book
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createCategory" return="facebook4j.Category"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Category object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Category
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createCheckin" return="facebook4j.Checkin"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Checkin object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Checkin
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createComment" return="facebook4j.Comment"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Comment object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Comment
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createDomain" return="facebook4j.Domain"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Domain object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Domain
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createEvent" return="facebook4j.Event"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Event object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Event
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createFamily" return="facebook4j.Family"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Family object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Family
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createFriend" return="facebook4j.Friend"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Friend object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Friend
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createFriendlist" return="facebook4j.Friendlist"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Friendlist object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Friendlist
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createFriendRequest" return="facebook4j.FriendRequest"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a FriendRequest object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return FriendRequest
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createGame" return="facebook4j.Game"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Game object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Game
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createGroupDoc" return="facebook4j.GroupDoc"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a GroupDoc object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return GroupDoc
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createGroup" return="facebook4j.Group"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Group object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Group
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createGroupMember" return="facebook4j.GroupMember"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a GroupMember object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return GroupMember
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createInsight" return="facebook4j.Insight"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Insight object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Insight
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createInterest" return="facebook4j.Interest"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Interest object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Interest
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createLike" return="facebook4j.Like"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Like object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Like
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createLink" return="facebook4j.Link"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Link object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Link
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createLocation" return="facebook4j.Location"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Location object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Location
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createMessage" return="facebook4j.Message"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Message object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Message
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createMilestone" return="facebook4j.Milestone"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Milestone object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Milestone
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createMovie" return="facebook4j.Movie"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Movie object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Movie
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createMusic" return="facebook4j.Music"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Music object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Music
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createNote" return="facebook4j.Note"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Note object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Note
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createNotification" return="facebook4j.Notification"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Notification object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Notification
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createOffer" return="facebook4j.Offer"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Offer object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Offer
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createPage" return="facebook4j.Page"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Page object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Page
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createPageSetting" return="facebook4j.PageSetting"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a PageSetting object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return PageSetting
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createPhoto" return="facebook4j.Photo"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Photo object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Photo
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createPlace" return="facebook4j.Place"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Place object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Place
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createPoke" return="facebook4j.Poke"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Poke object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Poke
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createPost" return="facebook4j.Post"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Post object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Post
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createQuestion" return="facebook4j.Question"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Question object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Question
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createQuestionVotes" return="facebook4j.QuestionVotes"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a QuestionVotes object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return QuestionVotes
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createRSVPStatus" return="facebook4j.RSVPStatus"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a RSVPStatus object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return RSVPStatus
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createScore" return="facebook4j.Score"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Score object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Score
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createSubscribedto" return="facebook4j.Subscribedto"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Subscribedto object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Subscribedto
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createSubscriber" return="facebook4j.Subscriber"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Subscriber object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Subscriber
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createTab" return="facebook4j.Tab"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Tab object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Tab
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createTagged" return="facebook4j.Tagged"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Tagged object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Tagged
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createTag" return="facebook4j.Tag"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Tag object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Tag
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createTelevision" return="facebook4j.Television"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Television object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Television
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createUser" return="facebook4j.User"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a User object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return User
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <method name="createVideo" return="facebook4j.Video"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rawJSON" type="java.lang.String"/>
      <exception name="FacebookException" type="facebook4j.FacebookException"/>
      <doc>
      <![CDATA[Constructs a Video object from rawJSON string.

 @param rawJSON raw JSON form as String
 @return Video
 @throws FacebookException when provided string is not a valid JSON string.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[@author Ryuji Yamashita - roundrop at gmail.com]]>
    </doc>
  </class>
  <!-- end class facebook4j.json.DataObjectFactory -->
</package>
<package name="facebook4j.management">
  <!-- start class facebook4j.management.APIStatistics -->
  <class name="APIStatistics" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.management.APIStatisticsMBean"/>
    <constructor name="APIStatistics" type="int"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@param historySize the number of calls to track (for invocation time averaging)]]>
      </doc>
    </constructor>
    <method name="methodCalled"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="method" type="java.lang.String"/>
      <param name="time" type="long"/>
      <param name="success" type="boolean"/>
      <doc>
      <![CDATA[@param method the method invoked
 @param time   the method execution time]]>
      </doc>
    </method>
    <method name="getInvocationStatistics" return="java.lang.Iterable&lt;? extends facebook4j.management.InvocationStatistics&gt;"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="reset"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[APIStatisticsMBean implementation]]>
      </doc>
    </method>
    <method name="getCallCount" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getErrorCount" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getTotalTime" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAverageTime" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getMethodLevelSummariesAsString" return="java.util.Map&lt;java.lang.String, java.lang.String&gt;"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getMethodLevelSummary" return="java.lang.String"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="methodName" type="java.lang.String"/>
    </method>
    <doc>
    <![CDATA[Container for all InvocationStatisticsCalculators in a given API (like Twitter)

 @author Nick Dellamaggiore (nick.dellamaggiore <at> gmail.com)]]>
    </doc>
  </class>
  <!-- end class facebook4j.management.APIStatistics -->
  <!-- start interface facebook4j.management.APIStatisticsMBean -->
  <interface name="APIStatisticsMBean"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.management.InvocationStatistics"/>
    <method name="getMethodLevelSummariesAsString" return="java.util.Map&lt;java.lang.String, java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getMethodLevelSummary" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="methodName" type="java.lang.String"/>
    </method>
    <method name="getInvocationStatistics" return="java.lang.Iterable&lt;? extends facebook4j.management.InvocationStatistics&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[Simple MBean interface for APIStatistics. Method-level statistics are exposed
 as a Map of formatted strings

 @author Nick Dellamaggiore (nick.dellamaggiore <at> gmail.com)
 @see APIStatisticsOpenMBean for a dynamic version of this mbean with tabular representation]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.management.APIStatisticsMBean -->
  <!-- start class facebook4j.management.APIStatisticsOpenMBean -->
  <class name="APIStatisticsOpenMBean" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="javax.management.DynamicMBean"/>
    <constructor name="APIStatisticsOpenMBean" type="facebook4j.management.APIStatistics"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getMBeanInfo" return="javax.management.MBeanInfo"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getStatistics" return="javax.management.openmbean.TabularDataSupport"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="reset"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAttribute" return="java.lang.Object"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="attribute" type="java.lang.String"/>
      <exception name="AttributeNotFoundException" type="javax.management.AttributeNotFoundException"/>
      <exception name="MBeanException" type="javax.management.MBeanException"/>
      <exception name="ReflectionException" type="javax.management.ReflectionException"/>
    </method>
    <method name="getAttributes" return="javax.management.AttributeList"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="attributeNames" type="java.lang.String[]"/>
    </method>
    <method name="invoke" return="java.lang.Object"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="actionName" type="java.lang.String"/>
      <param name="params" type="java.lang.Object[]"/>
      <param name="signature" type="java.lang.String[]"/>
      <exception name="MBeanException" type="javax.management.MBeanException"/>
      <exception name="ReflectionException" type="javax.management.ReflectionException"/>
    </method>
    <method name="setAttribute"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="attribute" type="javax.management.Attribute"/>
      <exception name="AttributeNotFoundException" type="javax.management.AttributeNotFoundException"/>
      <exception name="InvalidAttributeValueException" type="javax.management.InvalidAttributeValueException"/>
      <exception name="MBeanException" type="javax.management.MBeanException"/>
      <exception name="ReflectionException" type="javax.management.ReflectionException"/>
    </method>
    <method name="setAttributes" return="javax.management.AttributeList"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="attributes" type="javax.management.AttributeList"/>
    </method>
    <doc>
    <![CDATA[Dynamic version of APIStatisticsMBean that wraps an APIStatisticsOpenMBean.
 Provides a tabular view of method stats. This MBean can only run on JDK 1.5+

 @author Nick Dellamaggiore (nick.dellamaggiore <at> gmail.com)
 @since Twitter4J 2.2.1]]>
    </doc>
  </class>
  <!-- end class facebook4j.management.APIStatisticsOpenMBean -->
  <!-- start interface facebook4j.management.InvocationStatistics -->
  <interface name="InvocationStatistics"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCallCount" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getErrorCount" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getTotalTime" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAverageTime" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="reset"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@author Nick Dellamaggiore (nick.dellamaggiore <at> gmail.com)]]>
    </doc>
  </interface>
  <!-- end interface facebook4j.management.InvocationStatistics -->
  <!-- start class facebook4j.management.InvocationStatisticsCalculator -->
  <class name="InvocationStatisticsCalculator" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="facebook4j.management.InvocationStatistics"/>
    <constructor name="InvocationStatisticsCalculator" type="java.lang.String, int"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@param name        the name of this API method
 @param historySize the number of calls to track (for invocation time averaging)]]>
      </doc>
    </constructor>
    <method name="increment"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="time" type="long"/>
      <param name="success" type="boolean"/>
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCallCount" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getErrorCount" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getTotalTime" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAverageTime" return="long"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="reset"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[Object that collects/aggregates statistics for the invocation of a given method.

 @author Nick Dellamaggiore (nick.dellamaggiore <at> gmail.com)]]>
    </doc>
  </class>
  <!-- end class facebook4j.management.InvocationStatisticsCalculator -->
</package>

</api>
